// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GroupBasicInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im.Cloud.Message {

  /// <summary>Holder for reflection information generated from GroupBasicInfo.proto</summary>
  public static partial class GroupBasicInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for GroupBasicInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupBasicInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRHcm91cEJhc2ljSW5mby5wcm90bxIbQWNGdW5EYW5tdS5JbS5DbG91ZC5N",
            "ZXNzYWdlGhRGb3JiaWRkZW5TdGF0ZS5wcm90bxoQR3JvdXBMYWJlbC5wcm90",
            "bxoRR3JvdXBTdGF0dXMucHJvdG8aD0dyb3VwVHlwZS5wcm90bxoaSW52aXRl",
            "UGVybWlzc2lvblR5cGUucHJvdG8aHEpvaW5OZWVkUGVybWlzc2lvblR5cGUu",
            "cHJvdG8aDkxvY2F0aW9uLnByb3RvGhlNdWx0aUZvcmJpZGRlblN0YXRlLnBy",
            "b3RvGgpVc2VyLnByb3RvIsQJCg5Hcm91cEJhc2ljSW5mbxIPCgdncm91cElk",
            "GAEgASgJEhEKCWdyb3VwTmFtZRgCIAEoCRIoCgVhZG1pbhgDIAEoCzIZLkFj",
            "RnVuRGFubXUuSW0uQmFzaWMuVXNlchI9Cgtncm91cFN0YXR1cxgEIAEoDjIo",
            "LkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91cFN0YXR1cxITCgtk",
            "ZXNjcmlwdGlvbhgFIAEoCRJPChJqb2luTmVlZFBlcm1pc3Npb24YBiABKA4y",
            "My5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuSm9pbk5lZWRQZXJtaXNz",
            "aW9uVHlwZRISCgpjcmVhdGVUaW1lGAcgASgDEhIKCnVwZGF0ZVRpbWUYCCAB",
            "KAMSOQoJZ3JvdXBUeXBlGAkgASgOMiYuQWNGdW5EYW5tdS5JbS5DbG91ZC5N",
            "ZXNzYWdlLkdyb3VwVHlwZRJDCg5mb3JiaWRkZW5TdGF0ZRgKIAEoDjIrLkFj",
            "RnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Gb3JiaWRkZW5TdGF0ZRJPChRp",
            "bnZpdGVQZXJtaXNzaW9uVHlwZRgLIAEoDjIxLkFjRnVuRGFubXUuSW0uQ2xv",
            "dWQuTWVzc2FnZS5JbnZpdGVQZXJtaXNzaW9uVHlwZRISCgpiaXpEZWZDb2Rl",
            "GAwgASgFEhgKEGRlZmF1bHRHcm91cE5hbWUYDSABKAkSDQoFZXh0cmEYDiAB",
            "KAkSEQoJaXNNdXRlQWxsGA8gASgIEiMKG29ubHlBZG1pblVwZGF0ZUdyb3Vw",
            "U2V0dGluZxgQIAEoCBIaChJvbmx5QWRtaW5SZW1pbmRBbGwYESABKAgSLwoM",
            "dXNlcnNDYW5UYWxrGBIgAygLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2Vy",
            "EjMKEHVzZXJzS2VlcFNpbGVuY2UYEyADKAsyGS5BY0Z1bkRhbm11LkltLkJh",
            "c2ljLlVzZXISFAoMZ3JvdXBIZWFkVXJsGBQgASgJEjcKCGxvY2F0aW9uGBUg",
            "ASgLMiUuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkxvY2F0aW9uEgsK",
            "A3RhZxgWIAEoCRITCgtncm91cE51bWJlchgXIAEoCRIUCgxpbnRyb2R1Y3Rp",
            "b24YGCABKAkSFgoObWF4TWVtYmVyQ291bnQYGSABKAUSTQoTbXVsdGlGb3Ji",
            "aWRkZW5TdGF0ZRgaIAMoDjIwLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2Fn",
            "ZS5NdWx0aUZvcmJpZGRlblN0YXRlEhcKD21heE1hbmFnZXJDb3VudBgbIAEo",
            "BRI2CgVsYWJlbBgcIAMoCzInLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2Fn",
            "ZS5Hcm91cExhYmVsEhkKEWdyb3VwRXh0cmFTZXR0aW5nGB0gASgDEiAKGGdy",
            "b3VwSW52aXRlTmVlZFVzZXJBZ3JlZRgeIAEoCBIeChZoaXN0b3J5TWVzc2Fn",
            "ZXNWaXNpYmxlGB8gASgIEhoKEmdyb3VwRGlzbWlzc0Jhbm5lZBggIAEoCBIX",
            "Cg9ncm91cFF1aXRCYW5uZWQYISABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.Im.Cloud.Message.ForbiddenStateReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupLabelReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupStatusReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupTypeReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.InvitePermissionTypeReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionTypeReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.LocationReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.MultiForbiddenStateReflection.Descriptor, global::AcFunDanmu.Im.Basic.UserReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Message.GroupBasicInfo), global::AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.Parser, new[]{ "GroupId", "GroupName", "Admin", "GroupStatus", "Description", "JoinNeedPermission", "CreateTime", "UpdateTime", "GroupType", "ForbiddenState", "InvitePermissionType", "BizDefCode", "DefaultGroupName", "Extra", "IsMuteAll", "OnlyAdminUpdateGroupSetting", "OnlyAdminRemindAll", "UsersCanTalk", "UsersKeepSilence", "GroupHeadUrl", "Location", "Tag", "GroupNumber", "Introduction", "MaxMemberCount", "MultiForbiddenState", "MaxManagerCount", "Label", "GroupExtraSetting", "GroupInviteNeedUserAgree", "HistoryMessagesVisible", "GroupDismissBanned", "GroupQuitBanned" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GroupBasicInfo : pb::IMessage<GroupBasicInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupBasicInfo> _parser = new pb::MessageParser<GroupBasicInfo>(() => new GroupBasicInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupBasicInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.Cloud.Message.GroupBasicInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupBasicInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupBasicInfo(GroupBasicInfo other) : this() {
      groupId_ = other.groupId_;
      groupName_ = other.groupName_;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      groupStatus_ = other.groupStatus_;
      description_ = other.description_;
      joinNeedPermission_ = other.joinNeedPermission_;
      createTime_ = other.createTime_;
      updateTime_ = other.updateTime_;
      groupType_ = other.groupType_;
      forbiddenState_ = other.forbiddenState_;
      invitePermissionType_ = other.invitePermissionType_;
      bizDefCode_ = other.bizDefCode_;
      defaultGroupName_ = other.defaultGroupName_;
      extra_ = other.extra_;
      isMuteAll_ = other.isMuteAll_;
      onlyAdminUpdateGroupSetting_ = other.onlyAdminUpdateGroupSetting_;
      onlyAdminRemindAll_ = other.onlyAdminRemindAll_;
      usersCanTalk_ = other.usersCanTalk_.Clone();
      usersKeepSilence_ = other.usersKeepSilence_.Clone();
      groupHeadUrl_ = other.groupHeadUrl_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      tag_ = other.tag_;
      groupNumber_ = other.groupNumber_;
      introduction_ = other.introduction_;
      maxMemberCount_ = other.maxMemberCount_;
      multiForbiddenState_ = other.multiForbiddenState_.Clone();
      maxManagerCount_ = other.maxManagerCount_;
      label_ = other.label_.Clone();
      groupExtraSetting_ = other.groupExtraSetting_;
      groupInviteNeedUserAgree_ = other.groupInviteNeedUserAgree_;
      historyMessagesVisible_ = other.historyMessagesVisible_;
      groupDismissBanned_ = other.groupDismissBanned_;
      groupQuitBanned_ = other.groupQuitBanned_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupBasicInfo Clone() {
      return new GroupBasicInfo(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 2;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 3;
    private global::AcFunDanmu.Im.Basic.User admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.User Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "groupStatus" field.</summary>
    public const int GroupStatusFieldNumber = 4;
    private global::AcFunDanmu.Im.Cloud.Message.GroupStatus groupStatus_ = global::AcFunDanmu.Im.Cloud.Message.GroupStatus.UnknowGroupStatus;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupStatus GroupStatus {
      get { return groupStatus_; }
      set {
        groupStatus_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "joinNeedPermission" field.</summary>
    public const int JoinNeedPermissionFieldNumber = 6;
    private global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission_ = global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType.UnknownJoinNeedPermissionType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType JoinNeedPermission {
      get { return joinNeedPermission_; }
      set {
        joinNeedPermission_ = value;
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "updateTime" field.</summary>
    public const int UpdateTimeFieldNumber = 8;
    private long updateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "groupType" field.</summary>
    public const int GroupTypeFieldNumber = 9;
    private global::AcFunDanmu.Im.Cloud.Message.GroupType groupType_ = global::AcFunDanmu.Im.Cloud.Message.GroupType.UnknowGroupType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupType GroupType {
      get { return groupType_; }
      set {
        groupType_ = value;
      }
    }

    /// <summary>Field number for the "forbiddenState" field.</summary>
    public const int ForbiddenStateFieldNumber = 10;
    private global::AcFunDanmu.Im.Cloud.Message.ForbiddenState forbiddenState_ = global::AcFunDanmu.Im.Cloud.Message.ForbiddenState.UnknownForbiddenState;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.ForbiddenState ForbiddenState {
      get { return forbiddenState_; }
      set {
        forbiddenState_ = value;
      }
    }

    /// <summary>Field number for the "invitePermissionType" field.</summary>
    public const int InvitePermissionTypeFieldNumber = 11;
    private global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType invitePermissionType_ = global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType.UnknownInvitePermissionType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType InvitePermissionType {
      get { return invitePermissionType_; }
      set {
        invitePermissionType_ = value;
      }
    }

    /// <summary>Field number for the "bizDefCode" field.</summary>
    public const int BizDefCodeFieldNumber = 12;
    private int bizDefCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BizDefCode {
      get { return bizDefCode_; }
      set {
        bizDefCode_ = value;
      }
    }

    /// <summary>Field number for the "defaultGroupName" field.</summary>
    public const int DefaultGroupNameFieldNumber = 13;
    private string defaultGroupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultGroupName {
      get { return defaultGroupName_; }
      set {
        defaultGroupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 14;
    private string extra_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isMuteAll" field.</summary>
    public const int IsMuteAllFieldNumber = 15;
    private bool isMuteAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMuteAll {
      get { return isMuteAll_; }
      set {
        isMuteAll_ = value;
      }
    }

    /// <summary>Field number for the "onlyAdminUpdateGroupSetting" field.</summary>
    public const int OnlyAdminUpdateGroupSettingFieldNumber = 16;
    private bool onlyAdminUpdateGroupSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnlyAdminUpdateGroupSetting {
      get { return onlyAdminUpdateGroupSetting_; }
      set {
        onlyAdminUpdateGroupSetting_ = value;
      }
    }

    /// <summary>Field number for the "onlyAdminRemindAll" field.</summary>
    public const int OnlyAdminRemindAllFieldNumber = 17;
    private bool onlyAdminRemindAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnlyAdminRemindAll {
      get { return onlyAdminRemindAll_; }
      set {
        onlyAdminRemindAll_ = value;
      }
    }

    /// <summary>Field number for the "usersCanTalk" field.</summary>
    public const int UsersCanTalkFieldNumber = 18;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.User> _repeated_usersCanTalk_codec
        = pb::FieldCodec.ForMessage(146, global::AcFunDanmu.Im.Basic.User.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> usersCanTalk_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> UsersCanTalk {
      get { return usersCanTalk_; }
    }

    /// <summary>Field number for the "usersKeepSilence" field.</summary>
    public const int UsersKeepSilenceFieldNumber = 19;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.User> _repeated_usersKeepSilence_codec
        = pb::FieldCodec.ForMessage(154, global::AcFunDanmu.Im.Basic.User.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> usersKeepSilence_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> UsersKeepSilence {
      get { return usersKeepSilence_; }
    }

    /// <summary>Field number for the "groupHeadUrl" field.</summary>
    public const int GroupHeadUrlFieldNumber = 20;
    private string groupHeadUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupHeadUrl {
      get { return groupHeadUrl_; }
      set {
        groupHeadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 21;
    private global::AcFunDanmu.Im.Cloud.Message.Location location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 22;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupNumber" field.</summary>
    public const int GroupNumberFieldNumber = 23;
    private string groupNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupNumber {
      get { return groupNumber_; }
      set {
        groupNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "introduction" field.</summary>
    public const int IntroductionFieldNumber = 24;
    private string introduction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Introduction {
      get { return introduction_; }
      set {
        introduction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxMemberCount" field.</summary>
    public const int MaxMemberCountFieldNumber = 25;
    private int maxMemberCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxMemberCount {
      get { return maxMemberCount_; }
      set {
        maxMemberCount_ = value;
      }
    }

    /// <summary>Field number for the "multiForbiddenState" field.</summary>
    public const int MultiForbiddenStateFieldNumber = 26;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Message.MultiForbiddenState> _repeated_multiForbiddenState_codec
        = pb::FieldCodec.ForEnum(210, x => (int) x, x => (global::AcFunDanmu.Im.Cloud.Message.MultiForbiddenState) x);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Message.MultiForbiddenState> multiForbiddenState_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Message.MultiForbiddenState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Message.MultiForbiddenState> MultiForbiddenState {
      get { return multiForbiddenState_; }
    }

    /// <summary>Field number for the "maxManagerCount" field.</summary>
    public const int MaxManagerCountFieldNumber = 27;
    private int maxManagerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxManagerCount {
      get { return maxManagerCount_; }
      set {
        maxManagerCount_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 28;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Message.GroupLabel> _repeated_label_codec
        = pb::FieldCodec.ForMessage(226, global::AcFunDanmu.Im.Cloud.Message.GroupLabel.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Message.GroupLabel> label_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Message.GroupLabel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Message.GroupLabel> Label {
      get { return label_; }
    }

    /// <summary>Field number for the "groupExtraSetting" field.</summary>
    public const int GroupExtraSettingFieldNumber = 29;
    private long groupExtraSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long GroupExtraSetting {
      get { return groupExtraSetting_; }
      set {
        groupExtraSetting_ = value;
      }
    }

    /// <summary>Field number for the "groupInviteNeedUserAgree" field.</summary>
    public const int GroupInviteNeedUserAgreeFieldNumber = 30;
    private bool groupInviteNeedUserAgree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GroupInviteNeedUserAgree {
      get { return groupInviteNeedUserAgree_; }
      set {
        groupInviteNeedUserAgree_ = value;
      }
    }

    /// <summary>Field number for the "historyMessagesVisible" field.</summary>
    public const int HistoryMessagesVisibleFieldNumber = 31;
    private bool historyMessagesVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HistoryMessagesVisible {
      get { return historyMessagesVisible_; }
      set {
        historyMessagesVisible_ = value;
      }
    }

    /// <summary>Field number for the "groupDismissBanned" field.</summary>
    public const int GroupDismissBannedFieldNumber = 32;
    private bool groupDismissBanned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GroupDismissBanned {
      get { return groupDismissBanned_; }
      set {
        groupDismissBanned_ = value;
      }
    }

    /// <summary>Field number for the "groupQuitBanned" field.</summary>
    public const int GroupQuitBannedFieldNumber = 33;
    private bool groupQuitBanned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GroupQuitBanned {
      get { return groupQuitBanned_; }
      set {
        groupQuitBanned_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupBasicInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupBasicInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (GroupName != other.GroupName) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      if (GroupStatus != other.GroupStatus) return false;
      if (Description != other.Description) return false;
      if (JoinNeedPermission != other.JoinNeedPermission) return false;
      if (CreateTime != other.CreateTime) return false;
      if (UpdateTime != other.UpdateTime) return false;
      if (GroupType != other.GroupType) return false;
      if (ForbiddenState != other.ForbiddenState) return false;
      if (InvitePermissionType != other.InvitePermissionType) return false;
      if (BizDefCode != other.BizDefCode) return false;
      if (DefaultGroupName != other.DefaultGroupName) return false;
      if (Extra != other.Extra) return false;
      if (IsMuteAll != other.IsMuteAll) return false;
      if (OnlyAdminUpdateGroupSetting != other.OnlyAdminUpdateGroupSetting) return false;
      if (OnlyAdminRemindAll != other.OnlyAdminRemindAll) return false;
      if(!usersCanTalk_.Equals(other.usersCanTalk_)) return false;
      if(!usersKeepSilence_.Equals(other.usersKeepSilence_)) return false;
      if (GroupHeadUrl != other.GroupHeadUrl) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (Tag != other.Tag) return false;
      if (GroupNumber != other.GroupNumber) return false;
      if (Introduction != other.Introduction) return false;
      if (MaxMemberCount != other.MaxMemberCount) return false;
      if(!multiForbiddenState_.Equals(other.multiForbiddenState_)) return false;
      if (MaxManagerCount != other.MaxManagerCount) return false;
      if(!label_.Equals(other.label_)) return false;
      if (GroupExtraSetting != other.GroupExtraSetting) return false;
      if (GroupInviteNeedUserAgree != other.GroupInviteNeedUserAgree) return false;
      if (HistoryMessagesVisible != other.HistoryMessagesVisible) return false;
      if (GroupDismissBanned != other.GroupDismissBanned) return false;
      if (GroupQuitBanned != other.GroupQuitBanned) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (GroupStatus != global::AcFunDanmu.Im.Cloud.Message.GroupStatus.UnknowGroupStatus) hash ^= GroupStatus.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType.UnknownJoinNeedPermissionType) hash ^= JoinNeedPermission.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
      if (GroupType != global::AcFunDanmu.Im.Cloud.Message.GroupType.UnknowGroupType) hash ^= GroupType.GetHashCode();
      if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Message.ForbiddenState.UnknownForbiddenState) hash ^= ForbiddenState.GetHashCode();
      if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType.UnknownInvitePermissionType) hash ^= InvitePermissionType.GetHashCode();
      if (BizDefCode != 0) hash ^= BizDefCode.GetHashCode();
      if (DefaultGroupName.Length != 0) hash ^= DefaultGroupName.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (IsMuteAll != false) hash ^= IsMuteAll.GetHashCode();
      if (OnlyAdminUpdateGroupSetting != false) hash ^= OnlyAdminUpdateGroupSetting.GetHashCode();
      if (OnlyAdminRemindAll != false) hash ^= OnlyAdminRemindAll.GetHashCode();
      hash ^= usersCanTalk_.GetHashCode();
      hash ^= usersKeepSilence_.GetHashCode();
      if (GroupHeadUrl.Length != 0) hash ^= GroupHeadUrl.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (GroupNumber.Length != 0) hash ^= GroupNumber.GetHashCode();
      if (Introduction.Length != 0) hash ^= Introduction.GetHashCode();
      if (MaxMemberCount != 0) hash ^= MaxMemberCount.GetHashCode();
      hash ^= multiForbiddenState_.GetHashCode();
      if (MaxManagerCount != 0) hash ^= MaxManagerCount.GetHashCode();
      hash ^= label_.GetHashCode();
      if (GroupExtraSetting != 0L) hash ^= GroupExtraSetting.GetHashCode();
      if (GroupInviteNeedUserAgree != false) hash ^= GroupInviteNeedUserAgree.GetHashCode();
      if (HistoryMessagesVisible != false) hash ^= HistoryMessagesVisible.GetHashCode();
      if (GroupDismissBanned != false) hash ^= GroupDismissBanned.GetHashCode();
      if (GroupQuitBanned != false) hash ^= GroupQuitBanned.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (admin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Admin);
      }
      if (GroupStatus != global::AcFunDanmu.Im.Cloud.Message.GroupStatus.UnknowGroupStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GroupStatus);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) JoinNeedPermission);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CreateTime);
      }
      if (UpdateTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(UpdateTime);
      }
      if (GroupType != global::AcFunDanmu.Im.Cloud.Message.GroupType.UnknowGroupType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) GroupType);
      }
      if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Message.ForbiddenState.UnknownForbiddenState) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ForbiddenState);
      }
      if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType.UnknownInvitePermissionType) {
        output.WriteRawTag(88);
        output.WriteEnum((int) InvitePermissionType);
      }
      if (BizDefCode != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BizDefCode);
      }
      if (DefaultGroupName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DefaultGroupName);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Extra);
      }
      if (IsMuteAll != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsMuteAll);
      }
      if (OnlyAdminUpdateGroupSetting != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(OnlyAdminUpdateGroupSetting);
      }
      if (OnlyAdminRemindAll != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(OnlyAdminRemindAll);
      }
      usersCanTalk_.WriteTo(output, _repeated_usersCanTalk_codec);
      usersKeepSilence_.WriteTo(output, _repeated_usersKeepSilence_codec);
      if (GroupHeadUrl.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(GroupHeadUrl);
      }
      if (location_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Location);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Tag);
      }
      if (GroupNumber.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(GroupNumber);
      }
      if (Introduction.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Introduction);
      }
      if (MaxMemberCount != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(MaxMemberCount);
      }
      multiForbiddenState_.WriteTo(output, _repeated_multiForbiddenState_codec);
      if (MaxManagerCount != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(MaxManagerCount);
      }
      label_.WriteTo(output, _repeated_label_codec);
      if (GroupExtraSetting != 0L) {
        output.WriteRawTag(232, 1);
        output.WriteInt64(GroupExtraSetting);
      }
      if (GroupInviteNeedUserAgree != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(GroupInviteNeedUserAgree);
      }
      if (HistoryMessagesVisible != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(HistoryMessagesVisible);
      }
      if (GroupDismissBanned != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(GroupDismissBanned);
      }
      if (GroupQuitBanned != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(GroupQuitBanned);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (admin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Admin);
      }
      if (GroupStatus != global::AcFunDanmu.Im.Cloud.Message.GroupStatus.UnknowGroupStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GroupStatus);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) JoinNeedPermission);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CreateTime);
      }
      if (UpdateTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(UpdateTime);
      }
      if (GroupType != global::AcFunDanmu.Im.Cloud.Message.GroupType.UnknowGroupType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) GroupType);
      }
      if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Message.ForbiddenState.UnknownForbiddenState) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ForbiddenState);
      }
      if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType.UnknownInvitePermissionType) {
        output.WriteRawTag(88);
        output.WriteEnum((int) InvitePermissionType);
      }
      if (BizDefCode != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BizDefCode);
      }
      if (DefaultGroupName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DefaultGroupName);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Extra);
      }
      if (IsMuteAll != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsMuteAll);
      }
      if (OnlyAdminUpdateGroupSetting != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(OnlyAdminUpdateGroupSetting);
      }
      if (OnlyAdminRemindAll != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(OnlyAdminRemindAll);
      }
      usersCanTalk_.WriteTo(ref output, _repeated_usersCanTalk_codec);
      usersKeepSilence_.WriteTo(ref output, _repeated_usersKeepSilence_codec);
      if (GroupHeadUrl.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(GroupHeadUrl);
      }
      if (location_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Location);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Tag);
      }
      if (GroupNumber.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(GroupNumber);
      }
      if (Introduction.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Introduction);
      }
      if (MaxMemberCount != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(MaxMemberCount);
      }
      multiForbiddenState_.WriteTo(ref output, _repeated_multiForbiddenState_codec);
      if (MaxManagerCount != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(MaxManagerCount);
      }
      label_.WriteTo(ref output, _repeated_label_codec);
      if (GroupExtraSetting != 0L) {
        output.WriteRawTag(232, 1);
        output.WriteInt64(GroupExtraSetting);
      }
      if (GroupInviteNeedUserAgree != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(GroupInviteNeedUserAgree);
      }
      if (HistoryMessagesVisible != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(HistoryMessagesVisible);
      }
      if (GroupDismissBanned != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(GroupDismissBanned);
      }
      if (GroupQuitBanned != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(GroupQuitBanned);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (GroupStatus != global::AcFunDanmu.Im.Cloud.Message.GroupStatus.UnknowGroupStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupStatus);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JoinNeedPermission);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (UpdateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
      }
      if (GroupType != global::AcFunDanmu.Im.Cloud.Message.GroupType.UnknowGroupType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupType);
      }
      if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Message.ForbiddenState.UnknownForbiddenState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ForbiddenState);
      }
      if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType.UnknownInvitePermissionType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvitePermissionType);
      }
      if (BizDefCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BizDefCode);
      }
      if (DefaultGroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultGroupName);
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (IsMuteAll != false) {
        size += 1 + 1;
      }
      if (OnlyAdminUpdateGroupSetting != false) {
        size += 2 + 1;
      }
      if (OnlyAdminRemindAll != false) {
        size += 2 + 1;
      }
      size += usersCanTalk_.CalculateSize(_repeated_usersCanTalk_codec);
      size += usersKeepSilence_.CalculateSize(_repeated_usersKeepSilence_codec);
      if (GroupHeadUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GroupHeadUrl);
      }
      if (location_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (Tag.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (GroupNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GroupNumber);
      }
      if (Introduction.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Introduction);
      }
      if (MaxMemberCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxMemberCount);
      }
      size += multiForbiddenState_.CalculateSize(_repeated_multiForbiddenState_codec);
      if (MaxManagerCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxManagerCount);
      }
      size += label_.CalculateSize(_repeated_label_codec);
      if (GroupExtraSetting != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(GroupExtraSetting);
      }
      if (GroupInviteNeedUserAgree != false) {
        size += 2 + 1;
      }
      if (HistoryMessagesVisible != false) {
        size += 2 + 1;
      }
      if (GroupDismissBanned != false) {
        size += 2 + 1;
      }
      if (GroupQuitBanned != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupBasicInfo other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AcFunDanmu.Im.Basic.User();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.GroupStatus != global::AcFunDanmu.Im.Cloud.Message.GroupStatus.UnknowGroupStatus) {
        GroupStatus = other.GroupStatus;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
        JoinNeedPermission = other.JoinNeedPermission;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.UpdateTime != 0L) {
        UpdateTime = other.UpdateTime;
      }
      if (other.GroupType != global::AcFunDanmu.Im.Cloud.Message.GroupType.UnknowGroupType) {
        GroupType = other.GroupType;
      }
      if (other.ForbiddenState != global::AcFunDanmu.Im.Cloud.Message.ForbiddenState.UnknownForbiddenState) {
        ForbiddenState = other.ForbiddenState;
      }
      if (other.InvitePermissionType != global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType.UnknownInvitePermissionType) {
        InvitePermissionType = other.InvitePermissionType;
      }
      if (other.BizDefCode != 0) {
        BizDefCode = other.BizDefCode;
      }
      if (other.DefaultGroupName.Length != 0) {
        DefaultGroupName = other.DefaultGroupName;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.IsMuteAll != false) {
        IsMuteAll = other.IsMuteAll;
      }
      if (other.OnlyAdminUpdateGroupSetting != false) {
        OnlyAdminUpdateGroupSetting = other.OnlyAdminUpdateGroupSetting;
      }
      if (other.OnlyAdminRemindAll != false) {
        OnlyAdminRemindAll = other.OnlyAdminRemindAll;
      }
      usersCanTalk_.Add(other.usersCanTalk_);
      usersKeepSilence_.Add(other.usersKeepSilence_);
      if (other.GroupHeadUrl.Length != 0) {
        GroupHeadUrl = other.GroupHeadUrl;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::AcFunDanmu.Im.Cloud.Message.Location();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.GroupNumber.Length != 0) {
        GroupNumber = other.GroupNumber;
      }
      if (other.Introduction.Length != 0) {
        Introduction = other.Introduction;
      }
      if (other.MaxMemberCount != 0) {
        MaxMemberCount = other.MaxMemberCount;
      }
      multiForbiddenState_.Add(other.multiForbiddenState_);
      if (other.MaxManagerCount != 0) {
        MaxManagerCount = other.MaxManagerCount;
      }
      label_.Add(other.label_);
      if (other.GroupExtraSetting != 0L) {
        GroupExtraSetting = other.GroupExtraSetting;
      }
      if (other.GroupInviteNeedUserAgree != false) {
        GroupInviteNeedUserAgree = other.GroupInviteNeedUserAgree;
      }
      if (other.HistoryMessagesVisible != false) {
        HistoryMessagesVisible = other.HistoryMessagesVisible;
      }
      if (other.GroupDismissBanned != false) {
        GroupDismissBanned = other.GroupDismissBanned;
      }
      if (other.GroupQuitBanned != false) {
        GroupQuitBanned = other.GroupQuitBanned;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            if (admin_ == null) {
              Admin = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 32: {
            GroupStatus = (global::AcFunDanmu.Im.Cloud.Message.GroupStatus) input.ReadEnum();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType) input.ReadEnum();
            break;
          }
          case 56: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 64: {
            UpdateTime = input.ReadInt64();
            break;
          }
          case 72: {
            GroupType = (global::AcFunDanmu.Im.Cloud.Message.GroupType) input.ReadEnum();
            break;
          }
          case 80: {
            ForbiddenState = (global::AcFunDanmu.Im.Cloud.Message.ForbiddenState) input.ReadEnum();
            break;
          }
          case 88: {
            InvitePermissionType = (global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType) input.ReadEnum();
            break;
          }
          case 96: {
            BizDefCode = input.ReadInt32();
            break;
          }
          case 106: {
            DefaultGroupName = input.ReadString();
            break;
          }
          case 114: {
            Extra = input.ReadString();
            break;
          }
          case 120: {
            IsMuteAll = input.ReadBool();
            break;
          }
          case 128: {
            OnlyAdminUpdateGroupSetting = input.ReadBool();
            break;
          }
          case 136: {
            OnlyAdminRemindAll = input.ReadBool();
            break;
          }
          case 146: {
            usersCanTalk_.AddEntriesFrom(input, _repeated_usersCanTalk_codec);
            break;
          }
          case 154: {
            usersKeepSilence_.AddEntriesFrom(input, _repeated_usersKeepSilence_codec);
            break;
          }
          case 162: {
            GroupHeadUrl = input.ReadString();
            break;
          }
          case 170: {
            if (location_ == null) {
              Location = new global::AcFunDanmu.Im.Cloud.Message.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 178: {
            Tag = input.ReadString();
            break;
          }
          case 186: {
            GroupNumber = input.ReadString();
            break;
          }
          case 194: {
            Introduction = input.ReadString();
            break;
          }
          case 200: {
            MaxMemberCount = input.ReadInt32();
            break;
          }
          case 210:
          case 208: {
            multiForbiddenState_.AddEntriesFrom(input, _repeated_multiForbiddenState_codec);
            break;
          }
          case 216: {
            MaxManagerCount = input.ReadInt32();
            break;
          }
          case 226: {
            label_.AddEntriesFrom(input, _repeated_label_codec);
            break;
          }
          case 232: {
            GroupExtraSetting = input.ReadInt64();
            break;
          }
          case 240: {
            GroupInviteNeedUserAgree = input.ReadBool();
            break;
          }
          case 248: {
            HistoryMessagesVisible = input.ReadBool();
            break;
          }
          case 256: {
            GroupDismissBanned = input.ReadBool();
            break;
          }
          case 264: {
            GroupQuitBanned = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            if (admin_ == null) {
              Admin = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 32: {
            GroupStatus = (global::AcFunDanmu.Im.Cloud.Message.GroupStatus) input.ReadEnum();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType) input.ReadEnum();
            break;
          }
          case 56: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 64: {
            UpdateTime = input.ReadInt64();
            break;
          }
          case 72: {
            GroupType = (global::AcFunDanmu.Im.Cloud.Message.GroupType) input.ReadEnum();
            break;
          }
          case 80: {
            ForbiddenState = (global::AcFunDanmu.Im.Cloud.Message.ForbiddenState) input.ReadEnum();
            break;
          }
          case 88: {
            InvitePermissionType = (global::AcFunDanmu.Im.Cloud.Message.InvitePermissionType) input.ReadEnum();
            break;
          }
          case 96: {
            BizDefCode = input.ReadInt32();
            break;
          }
          case 106: {
            DefaultGroupName = input.ReadString();
            break;
          }
          case 114: {
            Extra = input.ReadString();
            break;
          }
          case 120: {
            IsMuteAll = input.ReadBool();
            break;
          }
          case 128: {
            OnlyAdminUpdateGroupSetting = input.ReadBool();
            break;
          }
          case 136: {
            OnlyAdminRemindAll = input.ReadBool();
            break;
          }
          case 146: {
            usersCanTalk_.AddEntriesFrom(ref input, _repeated_usersCanTalk_codec);
            break;
          }
          case 154: {
            usersKeepSilence_.AddEntriesFrom(ref input, _repeated_usersKeepSilence_codec);
            break;
          }
          case 162: {
            GroupHeadUrl = input.ReadString();
            break;
          }
          case 170: {
            if (location_ == null) {
              Location = new global::AcFunDanmu.Im.Cloud.Message.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 178: {
            Tag = input.ReadString();
            break;
          }
          case 186: {
            GroupNumber = input.ReadString();
            break;
          }
          case 194: {
            Introduction = input.ReadString();
            break;
          }
          case 200: {
            MaxMemberCount = input.ReadInt32();
            break;
          }
          case 210:
          case 208: {
            multiForbiddenState_.AddEntriesFrom(ref input, _repeated_multiForbiddenState_codec);
            break;
          }
          case 216: {
            MaxManagerCount = input.ReadInt32();
            break;
          }
          case 226: {
            label_.AddEntriesFrom(ref input, _repeated_label_codec);
            break;
          }
          case 232: {
            GroupExtraSetting = input.ReadInt64();
            break;
          }
          case 240: {
            GroupInviteNeedUserAgree = input.ReadBool();
            break;
          }
          case 248: {
            HistoryMessagesVisible = input.ReadBool();
            break;
          }
          case 256: {
            GroupDismissBanned = input.ReadBool();
            break;
          }
          case 264: {
            GroupQuitBanned = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
