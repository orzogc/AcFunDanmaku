// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ImcVoiceCallRoomInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im.Cloud.Voice.Call {

  /// <summary>Holder for reflection information generated from ImcVoiceCallRoomInfo.proto</summary>
  public static partial class ImcVoiceCallRoomInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ImcVoiceCallRoomInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImcVoiceCallRoomInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpJbWNWb2ljZUNhbGxSb29tSW5mby5wcm90bxIeQWNGdW5EYW5tdS5JbS5D",
            "bG91ZC5Wb2ljZS5DYWxsGhBDYWxsU3RhdHVzLnByb3RvGg5DYWxsVHlwZS5w",
            "cm90bxoOQ2hhdE1vZGUucHJvdG8aEENoYXRUYXJnZXQucHJvdG8aClVzZXIu",
            "cHJvdG8aGVZvaWNlQ2FsbFVzZXJTdGF0dXMucHJvdG8i3gQKFEltY1ZvaWNl",
            "Q2FsbFJvb21JbmZvEg4KBnJvb21JZBgBIAEoCRIrCghmcm9tVXNlchgCIAEo",
            "CzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchI1CgpjaGF0VGFyZ2V0GAMg",
            "ASgLMiEuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLkNoYXRUYXJnZXQSDgoGY2Fs",
            "bElkGAQgASgJEhQKDG1lc3NhZ2VTZXFJZBgFIAEoAxI6CghjYWxsVHlwZRgG",
            "IAEoDjIoLkFjRnVuRGFubXUuSW0uQ2xvdWQuVm9pY2UuQ2FsbC5DYWxsVHlw",
            "ZRI+CgpjYWxsU3RhdHVzGAcgASgOMiouQWNGdW5EYW5tdS5JbS5DbG91ZC5W",
            "b2ljZS5DYWxsLkNhbGxTdGF0dXMSOgoIY2hhdE1vZGUYCCABKA4yKC5BY0Z1",
            "bkRhbm11LkltLkNsb3VkLlZvaWNlLkNhbGwuQ2hhdE1vZGUSGAoQcm9vbUNy",
            "ZWF0ZVRpbWVNcxgJIAEoAxIcChR2b2ljZUNhbGxTdGFydFRpbWVNcxgKIAEo",
            "AxIaChJ2b2ljZUNhbGxFbmRUaW1lTXMYCyABKAMSDQoFZXh0cmEYDCABKAwS",
            "JwoEaG9zdBgVIAEoCzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchINCgV0",
            "aXRsZRgWIAEoCRJHCgp1c2VyU3RhdHVzGBcgAygLMjMuQWNGdW5EYW5tdS5J",
            "bS5DbG91ZC5Wb2ljZS5DYWxsLlZvaWNlQ2FsbFVzZXJTdGF0dXMSEAoIbWF4",
            "Q291bnQYGCABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatusReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Voice.Call.CallTypeReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Voice.Call.ChatModeReflection.Descriptor, global::AcFunDanmu.Im.Message.ChatTargetReflection.Descriptor, global::AcFunDanmu.Im.Basic.UserReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Voice.Call.VoiceCallUserStatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Voice.Call.ImcVoiceCallRoomInfo), global::AcFunDanmu.Im.Cloud.Voice.Call.ImcVoiceCallRoomInfo.Parser, new[]{ "RoomId", "FromUser", "ChatTarget", "CallId", "MessageSeqId", "CallType", "CallStatus", "ChatMode", "RoomCreateTimeMs", "VoiceCallStartTimeMs", "VoiceCallEndTimeMs", "Extra", "Host", "Title", "UserStatus", "MaxCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ImcVoiceCallRoomInfo : pb::IMessage<ImcVoiceCallRoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImcVoiceCallRoomInfo> _parser = new pb::MessageParser<ImcVoiceCallRoomInfo>(() => new ImcVoiceCallRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ImcVoiceCallRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.Cloud.Voice.Call.ImcVoiceCallRoomInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImcVoiceCallRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImcVoiceCallRoomInfo(ImcVoiceCallRoomInfo other) : this() {
      roomId_ = other.roomId_;
      fromUser_ = other.fromUser_ != null ? other.fromUser_.Clone() : null;
      chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
      callId_ = other.callId_;
      messageSeqId_ = other.messageSeqId_;
      callType_ = other.callType_;
      callStatus_ = other.callStatus_;
      chatMode_ = other.chatMode_;
      roomCreateTimeMs_ = other.roomCreateTimeMs_;
      voiceCallStartTimeMs_ = other.voiceCallStartTimeMs_;
      voiceCallEndTimeMs_ = other.voiceCallEndTimeMs_;
      extra_ = other.extra_;
      host_ = other.host_ != null ? other.host_.Clone() : null;
      title_ = other.title_;
      userStatus_ = other.userStatus_.Clone();
      maxCount_ = other.maxCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImcVoiceCallRoomInfo Clone() {
      return new ImcVoiceCallRoomInfo(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromUser" field.</summary>
    public const int FromUserFieldNumber = 2;
    private global::AcFunDanmu.Im.Basic.User fromUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.User FromUser {
      get { return fromUser_; }
      set {
        fromUser_ = value;
      }
    }

    /// <summary>Field number for the "chatTarget" field.</summary>
    public const int ChatTargetFieldNumber = 3;
    private global::AcFunDanmu.Im.Message.ChatTarget chatTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Message.ChatTarget ChatTarget {
      get { return chatTarget_; }
      set {
        chatTarget_ = value;
      }
    }

    /// <summary>Field number for the "callId" field.</summary>
    public const int CallIdFieldNumber = 4;
    private string callId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CallId {
      get { return callId_; }
      set {
        callId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messageSeqId" field.</summary>
    public const int MessageSeqIdFieldNumber = 5;
    private long messageSeqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MessageSeqId {
      get { return messageSeqId_; }
      set {
        messageSeqId_ = value;
      }
    }

    /// <summary>Field number for the "callType" field.</summary>
    public const int CallTypeFieldNumber = 6;
    private global::AcFunDanmu.Im.Cloud.Voice.Call.CallType callType_ = global::AcFunDanmu.Im.Cloud.Voice.Call.CallType.CtUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Voice.Call.CallType CallType {
      get { return callType_; }
      set {
        callType_ = value;
      }
    }

    /// <summary>Field number for the "callStatus" field.</summary>
    public const int CallStatusFieldNumber = 7;
    private global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus callStatus_ = global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus.CsUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus CallStatus {
      get { return callStatus_; }
      set {
        callStatus_ = value;
      }
    }

    /// <summary>Field number for the "chatMode" field.</summary>
    public const int ChatModeFieldNumber = 8;
    private global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode chatMode_ = global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode.CmUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode ChatMode {
      get { return chatMode_; }
      set {
        chatMode_ = value;
      }
    }

    /// <summary>Field number for the "roomCreateTimeMs" field.</summary>
    public const int RoomCreateTimeMsFieldNumber = 9;
    private long roomCreateTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoomCreateTimeMs {
      get { return roomCreateTimeMs_; }
      set {
        roomCreateTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "voiceCallStartTimeMs" field.</summary>
    public const int VoiceCallStartTimeMsFieldNumber = 10;
    private long voiceCallStartTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long VoiceCallStartTimeMs {
      get { return voiceCallStartTimeMs_; }
      set {
        voiceCallStartTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "voiceCallEndTimeMs" field.</summary>
    public const int VoiceCallEndTimeMsFieldNumber = 11;
    private long voiceCallEndTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long VoiceCallEndTimeMs {
      get { return voiceCallEndTimeMs_; }
      set {
        voiceCallEndTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 12;
    private pb::ByteString extra_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 21;
    private global::AcFunDanmu.Im.Basic.User host_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.User Host {
      get { return host_; }
      set {
        host_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 22;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userStatus" field.</summary>
    public const int UserStatusFieldNumber = 23;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Voice.Call.VoiceCallUserStatus> _repeated_userStatus_codec
        = pb::FieldCodec.ForMessage(186, global::AcFunDanmu.Im.Cloud.Voice.Call.VoiceCallUserStatus.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Voice.Call.VoiceCallUserStatus> userStatus_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Voice.Call.VoiceCallUserStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Voice.Call.VoiceCallUserStatus> UserStatus {
      get { return userStatus_; }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 24;
    private int maxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ImcVoiceCallRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ImcVoiceCallRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (!object.Equals(FromUser, other.FromUser)) return false;
      if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
      if (CallId != other.CallId) return false;
      if (MessageSeqId != other.MessageSeqId) return false;
      if (CallType != other.CallType) return false;
      if (CallStatus != other.CallStatus) return false;
      if (ChatMode != other.ChatMode) return false;
      if (RoomCreateTimeMs != other.RoomCreateTimeMs) return false;
      if (VoiceCallStartTimeMs != other.VoiceCallStartTimeMs) return false;
      if (VoiceCallEndTimeMs != other.VoiceCallEndTimeMs) return false;
      if (Extra != other.Extra) return false;
      if (!object.Equals(Host, other.Host)) return false;
      if (Title != other.Title) return false;
      if(!userStatus_.Equals(other.userStatus_)) return false;
      if (MaxCount != other.MaxCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (fromUser_ != null) hash ^= FromUser.GetHashCode();
      if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
      if (CallId.Length != 0) hash ^= CallId.GetHashCode();
      if (MessageSeqId != 0L) hash ^= MessageSeqId.GetHashCode();
      if (CallType != global::AcFunDanmu.Im.Cloud.Voice.Call.CallType.CtUnknown) hash ^= CallType.GetHashCode();
      if (CallStatus != global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus.CsUnknown) hash ^= CallStatus.GetHashCode();
      if (ChatMode != global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode.CmUnknown) hash ^= ChatMode.GetHashCode();
      if (RoomCreateTimeMs != 0L) hash ^= RoomCreateTimeMs.GetHashCode();
      if (VoiceCallStartTimeMs != 0L) hash ^= VoiceCallStartTimeMs.GetHashCode();
      if (VoiceCallEndTimeMs != 0L) hash ^= VoiceCallEndTimeMs.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (host_ != null) hash ^= Host.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= userStatus_.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (fromUser_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FromUser);
      }
      if (chatTarget_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ChatTarget);
      }
      if (CallId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CallId);
      }
      if (MessageSeqId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MessageSeqId);
      }
      if (CallType != global::AcFunDanmu.Im.Cloud.Voice.Call.CallType.CtUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) CallType);
      }
      if (CallStatus != global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus.CsUnknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) CallStatus);
      }
      if (ChatMode != global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode.CmUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ChatMode);
      }
      if (RoomCreateTimeMs != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RoomCreateTimeMs);
      }
      if (VoiceCallStartTimeMs != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(VoiceCallStartTimeMs);
      }
      if (VoiceCallEndTimeMs != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(VoiceCallEndTimeMs);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Extra);
      }
      if (host_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Host);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Title);
      }
      userStatus_.WriteTo(output, _repeated_userStatus_codec);
      if (MaxCount != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(MaxCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (fromUser_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FromUser);
      }
      if (chatTarget_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ChatTarget);
      }
      if (CallId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CallId);
      }
      if (MessageSeqId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MessageSeqId);
      }
      if (CallType != global::AcFunDanmu.Im.Cloud.Voice.Call.CallType.CtUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) CallType);
      }
      if (CallStatus != global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus.CsUnknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) CallStatus);
      }
      if (ChatMode != global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode.CmUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ChatMode);
      }
      if (RoomCreateTimeMs != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RoomCreateTimeMs);
      }
      if (VoiceCallStartTimeMs != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(VoiceCallStartTimeMs);
      }
      if (VoiceCallEndTimeMs != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(VoiceCallEndTimeMs);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Extra);
      }
      if (host_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Host);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Title);
      }
      userStatus_.WriteTo(ref output, _repeated_userStatus_codec);
      if (MaxCount != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(MaxCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (fromUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUser);
      }
      if (chatTarget_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
      }
      if (CallId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallId);
      }
      if (MessageSeqId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageSeqId);
      }
      if (CallType != global::AcFunDanmu.Im.Cloud.Voice.Call.CallType.CtUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CallType);
      }
      if (CallStatus != global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus.CsUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CallStatus);
      }
      if (ChatMode != global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode.CmUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatMode);
      }
      if (RoomCreateTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoomCreateTimeMs);
      }
      if (VoiceCallStartTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VoiceCallStartTimeMs);
      }
      if (VoiceCallEndTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VoiceCallEndTimeMs);
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Extra);
      }
      if (host_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Host);
      }
      if (Title.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += userStatus_.CalculateSize(_repeated_userStatus_codec);
      if (MaxCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ImcVoiceCallRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.fromUser_ != null) {
        if (fromUser_ == null) {
          FromUser = new global::AcFunDanmu.Im.Basic.User();
        }
        FromUser.MergeFrom(other.FromUser);
      }
      if (other.chatTarget_ != null) {
        if (chatTarget_ == null) {
          ChatTarget = new global::AcFunDanmu.Im.Message.ChatTarget();
        }
        ChatTarget.MergeFrom(other.ChatTarget);
      }
      if (other.CallId.Length != 0) {
        CallId = other.CallId;
      }
      if (other.MessageSeqId != 0L) {
        MessageSeqId = other.MessageSeqId;
      }
      if (other.CallType != global::AcFunDanmu.Im.Cloud.Voice.Call.CallType.CtUnknown) {
        CallType = other.CallType;
      }
      if (other.CallStatus != global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus.CsUnknown) {
        CallStatus = other.CallStatus;
      }
      if (other.ChatMode != global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode.CmUnknown) {
        ChatMode = other.ChatMode;
      }
      if (other.RoomCreateTimeMs != 0L) {
        RoomCreateTimeMs = other.RoomCreateTimeMs;
      }
      if (other.VoiceCallStartTimeMs != 0L) {
        VoiceCallStartTimeMs = other.VoiceCallStartTimeMs;
      }
      if (other.VoiceCallEndTimeMs != 0L) {
        VoiceCallEndTimeMs = other.VoiceCallEndTimeMs;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.host_ != null) {
        if (host_ == null) {
          Host = new global::AcFunDanmu.Im.Basic.User();
        }
        Host.MergeFrom(other.Host);
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      userStatus_.Add(other.userStatus_);
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            if (fromUser_ == null) {
              FromUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(FromUser);
            break;
          }
          case 26: {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.ChatTarget();
            }
            input.ReadMessage(ChatTarget);
            break;
          }
          case 34: {
            CallId = input.ReadString();
            break;
          }
          case 40: {
            MessageSeqId = input.ReadInt64();
            break;
          }
          case 48: {
            CallType = (global::AcFunDanmu.Im.Cloud.Voice.Call.CallType) input.ReadEnum();
            break;
          }
          case 56: {
            CallStatus = (global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus) input.ReadEnum();
            break;
          }
          case 64: {
            ChatMode = (global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode) input.ReadEnum();
            break;
          }
          case 72: {
            RoomCreateTimeMs = input.ReadInt64();
            break;
          }
          case 80: {
            VoiceCallStartTimeMs = input.ReadInt64();
            break;
          }
          case 88: {
            VoiceCallEndTimeMs = input.ReadInt64();
            break;
          }
          case 98: {
            Extra = input.ReadBytes();
            break;
          }
          case 170: {
            if (host_ == null) {
              Host = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(Host);
            break;
          }
          case 178: {
            Title = input.ReadString();
            break;
          }
          case 186: {
            userStatus_.AddEntriesFrom(input, _repeated_userStatus_codec);
            break;
          }
          case 192: {
            MaxCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            if (fromUser_ == null) {
              FromUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(FromUser);
            break;
          }
          case 26: {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.ChatTarget();
            }
            input.ReadMessage(ChatTarget);
            break;
          }
          case 34: {
            CallId = input.ReadString();
            break;
          }
          case 40: {
            MessageSeqId = input.ReadInt64();
            break;
          }
          case 48: {
            CallType = (global::AcFunDanmu.Im.Cloud.Voice.Call.CallType) input.ReadEnum();
            break;
          }
          case 56: {
            CallStatus = (global::AcFunDanmu.Im.Cloud.Voice.Call.CallStatus) input.ReadEnum();
            break;
          }
          case 64: {
            ChatMode = (global::AcFunDanmu.Im.Cloud.Voice.Call.ChatMode) input.ReadEnum();
            break;
          }
          case 72: {
            RoomCreateTimeMs = input.ReadInt64();
            break;
          }
          case 80: {
            VoiceCallStartTimeMs = input.ReadInt64();
            break;
          }
          case 88: {
            VoiceCallEndTimeMs = input.ReadInt64();
            break;
          }
          case 98: {
            Extra = input.ReadBytes();
            break;
          }
          case 170: {
            if (host_ == null) {
              Host = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(Host);
            break;
          }
          case 178: {
            Title = input.ReadString();
            break;
          }
          case 186: {
            userStatus_.AddEntriesFrom(ref input, _repeated_userStatus_codec);
            break;
          }
          case 192: {
            MaxCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
