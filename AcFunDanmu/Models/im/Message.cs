// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im.Message {

  /// <summary>Holder for reflection information generated from Message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for Message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1NZXNzYWdlLnByb3RvEhVBY0Z1bkRhbm11LkltLk1lc3NhZ2UaDlJlbWlu",
            "ZGVyLnByb3RvGgpVc2VyLnByb3RvItgFCgdNZXNzYWdlEg0KBXNlcUlkGAEg",
            "ASgDEhMKC2NsaWVudFNlcUlkGAIgASgDEhMKC3RpbWVzdGFtcE1zGAMgASgD",
            "EisKCGZyb21Vc2VyGAQgASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2Vy",
            "EhAKCHRhcmdldElkGAUgASgDEikKBnRvVXNlchgGIAEoCzIZLkFjRnVuRGFu",
            "bXUuSW0uQmFzaWMuVXNlchINCgV0aXRsZRgHIAEoCRITCgtjb250ZW50VHlw",
            "ZRgIIAEoBRIPCgdjb250ZW50GAkgASgMEhIKCmJhY2t1cFRpcHMYCiABKAkS",
            "LAoJcmVjZWl2ZXJzGAsgAygLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2Vy",
            "EhYKDm5vdENvdW50VW5yZWFkGAwgASgIEhcKD3Nlc3Npb25Qcmlvcml0eRgN",
            "IAEoBRIZChFzZXNzaW9uQ2F0ZWdvcnlJZBgOIAEoBRIaChJzZXNzaW9uQWNj",
            "b3VudFR5cGUYDyABKAUSHAoUbm90QXV0b0NyZWF0ZVNlc3Npb24YECABKAgS",
            "GAoQdXNlclJlbGF0aW9uc2hpcBgRIAEoBRITCgtzdHJUYXJnZXRJZBgSIAEo",
            "CRIzChBleGNsdWRlUmVjZWl2ZXJzGBMgAygLMhkuQWNGdW5EYW5tdS5JbS5C",
            "YXNpYy5Vc2VyEhIKCm1hcmtEZWxldGUYFCABKAgSMQoIcmVtaW5kZXIYFSAB",
            "KAsyHy5BY0Z1bkRhbm11LkltLk1lc3NhZ2UuUmVtaW5kZXISDQoFZXh0cmEY",
            "FiABKAwSFwoPcmVjZWlwdFJlcXVpcmVkGBcgASgIEi8KDHJlYWxGcm9tVXNl",
            "chgYIAEoCzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchIPCgdjc0V4dHJh",
            "GBkgASgMEhgKEHNlc3Npb25JbnZpc2libGUYGiABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.Im.Message.ReminderReflection.Descriptor, global::AcFunDanmu.Im.Basic.UserReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Message), global::AcFunDanmu.Im.Message.Message.Parser, new[]{ "SeqId", "ClientSeqId", "TimestampMs", "FromUser", "TargetId", "ToUser", "Title", "ContentType", "Content", "BackupTips", "Receivers", "NotCountUnread", "SessionPriority", "SessionCategoryId", "SessionAccountType", "NotAutoCreateSession", "UserRelationship", "StrTargetId", "ExcludeReceivers", "MarkDelete", "Reminder", "Extra", "ReceiptRequired", "RealFromUser", "CsExtra", "SessionInvisible" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.Message.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message(Message other) : this() {
      seqId_ = other.seqId_;
      clientSeqId_ = other.clientSeqId_;
      timestampMs_ = other.timestampMs_;
      fromUser_ = other.fromUser_ != null ? other.fromUser_.Clone() : null;
      targetId_ = other.targetId_;
      toUser_ = other.toUser_ != null ? other.toUser_.Clone() : null;
      title_ = other.title_;
      contentType_ = other.contentType_;
      content_ = other.content_;
      backupTips_ = other.backupTips_;
      receivers_ = other.receivers_.Clone();
      notCountUnread_ = other.notCountUnread_;
      sessionPriority_ = other.sessionPriority_;
      sessionCategoryId_ = other.sessionCategoryId_;
      sessionAccountType_ = other.sessionAccountType_;
      notAutoCreateSession_ = other.notAutoCreateSession_;
      userRelationship_ = other.userRelationship_;
      strTargetId_ = other.strTargetId_;
      excludeReceivers_ = other.excludeReceivers_.Clone();
      markDelete_ = other.markDelete_;
      reminder_ = other.reminder_ != null ? other.reminder_.Clone() : null;
      extra_ = other.extra_;
      receiptRequired_ = other.receiptRequired_;
      realFromUser_ = other.realFromUser_ != null ? other.realFromUser_.Clone() : null;
      csExtra_ = other.csExtra_;
      sessionInvisible_ = other.sessionInvisible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "seqId" field.</summary>
    public const int SeqIdFieldNumber = 1;
    private long seqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SeqId {
      get { return seqId_; }
      set {
        seqId_ = value;
      }
    }

    /// <summary>Field number for the "clientSeqId" field.</summary>
    public const int ClientSeqIdFieldNumber = 2;
    private long clientSeqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClientSeqId {
      get { return clientSeqId_; }
      set {
        clientSeqId_ = value;
      }
    }

    /// <summary>Field number for the "timestampMs" field.</summary>
    public const int TimestampMsFieldNumber = 3;
    private long timestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    /// <summary>Field number for the "fromUser" field.</summary>
    public const int FromUserFieldNumber = 4;
    private global::AcFunDanmu.Im.Basic.User fromUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.User FromUser {
      get { return fromUser_; }
      set {
        fromUser_ = value;
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 5;
    private long targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    /// <summary>Field number for the "toUser" field.</summary>
    public const int ToUserFieldNumber = 6;
    private global::AcFunDanmu.Im.Basic.User toUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.User ToUser {
      get { return toUser_; }
      set {
        toUser_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 8;
    private int contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 9;
    private pb::ByteString content_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backupTips" field.</summary>
    public const int BackupTipsFieldNumber = 10;
    private string backupTips_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BackupTips {
      get { return backupTips_; }
      set {
        backupTips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receivers" field.</summary>
    public const int ReceiversFieldNumber = 11;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.User> _repeated_receivers_codec
        = pb::FieldCodec.ForMessage(90, global::AcFunDanmu.Im.Basic.User.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> receivers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> Receivers {
      get { return receivers_; }
    }

    /// <summary>Field number for the "notCountUnread" field.</summary>
    public const int NotCountUnreadFieldNumber = 12;
    private bool notCountUnread_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotCountUnread {
      get { return notCountUnread_; }
      set {
        notCountUnread_ = value;
      }
    }

    /// <summary>Field number for the "sessionPriority" field.</summary>
    public const int SessionPriorityFieldNumber = 13;
    private int sessionPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SessionPriority {
      get { return sessionPriority_; }
      set {
        sessionPriority_ = value;
      }
    }

    /// <summary>Field number for the "sessionCategoryId" field.</summary>
    public const int SessionCategoryIdFieldNumber = 14;
    private int sessionCategoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SessionCategoryId {
      get { return sessionCategoryId_; }
      set {
        sessionCategoryId_ = value;
      }
    }

    /// <summary>Field number for the "sessionAccountType" field.</summary>
    public const int SessionAccountTypeFieldNumber = 15;
    private int sessionAccountType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SessionAccountType {
      get { return sessionAccountType_; }
      set {
        sessionAccountType_ = value;
      }
    }

    /// <summary>Field number for the "notAutoCreateSession" field.</summary>
    public const int NotAutoCreateSessionFieldNumber = 16;
    private bool notAutoCreateSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotAutoCreateSession {
      get { return notAutoCreateSession_; }
      set {
        notAutoCreateSession_ = value;
      }
    }

    /// <summary>Field number for the "userRelationship" field.</summary>
    public const int UserRelationshipFieldNumber = 17;
    private int userRelationship_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserRelationship {
      get { return userRelationship_; }
      set {
        userRelationship_ = value;
      }
    }

    /// <summary>Field number for the "strTargetId" field.</summary>
    public const int StrTargetIdFieldNumber = 18;
    private string strTargetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StrTargetId {
      get { return strTargetId_; }
      set {
        strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "excludeReceivers" field.</summary>
    public const int ExcludeReceiversFieldNumber = 19;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.User> _repeated_excludeReceivers_codec
        = pb::FieldCodec.ForMessage(154, global::AcFunDanmu.Im.Basic.User.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> excludeReceivers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.User> ExcludeReceivers {
      get { return excludeReceivers_; }
    }

    /// <summary>Field number for the "markDelete" field.</summary>
    public const int MarkDeleteFieldNumber = 20;
    private bool markDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MarkDelete {
      get { return markDelete_; }
      set {
        markDelete_ = value;
      }
    }

    /// <summary>Field number for the "reminder" field.</summary>
    public const int ReminderFieldNumber = 21;
    private global::AcFunDanmu.Im.Message.Reminder reminder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Message.Reminder Reminder {
      get { return reminder_; }
      set {
        reminder_ = value;
      }
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 22;
    private pb::ByteString extra_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiptRequired" field.</summary>
    public const int ReceiptRequiredFieldNumber = 23;
    private bool receiptRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReceiptRequired {
      get { return receiptRequired_; }
      set {
        receiptRequired_ = value;
      }
    }

    /// <summary>Field number for the "realFromUser" field.</summary>
    public const int RealFromUserFieldNumber = 24;
    private global::AcFunDanmu.Im.Basic.User realFromUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.User RealFromUser {
      get { return realFromUser_; }
      set {
        realFromUser_ = value;
      }
    }

    /// <summary>Field number for the "csExtra" field.</summary>
    public const int CsExtraFieldNumber = 25;
    private pb::ByteString csExtra_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CsExtra {
      get { return csExtra_; }
      set {
        csExtra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sessionInvisible" field.</summary>
    public const int SessionInvisibleFieldNumber = 26;
    private bool sessionInvisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SessionInvisible {
      get { return sessionInvisible_; }
      set {
        sessionInvisible_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SeqId != other.SeqId) return false;
      if (ClientSeqId != other.ClientSeqId) return false;
      if (TimestampMs != other.TimestampMs) return false;
      if (!object.Equals(FromUser, other.FromUser)) return false;
      if (TargetId != other.TargetId) return false;
      if (!object.Equals(ToUser, other.ToUser)) return false;
      if (Title != other.Title) return false;
      if (ContentType != other.ContentType) return false;
      if (Content != other.Content) return false;
      if (BackupTips != other.BackupTips) return false;
      if(!receivers_.Equals(other.receivers_)) return false;
      if (NotCountUnread != other.NotCountUnread) return false;
      if (SessionPriority != other.SessionPriority) return false;
      if (SessionCategoryId != other.SessionCategoryId) return false;
      if (SessionAccountType != other.SessionAccountType) return false;
      if (NotAutoCreateSession != other.NotAutoCreateSession) return false;
      if (UserRelationship != other.UserRelationship) return false;
      if (StrTargetId != other.StrTargetId) return false;
      if(!excludeReceivers_.Equals(other.excludeReceivers_)) return false;
      if (MarkDelete != other.MarkDelete) return false;
      if (!object.Equals(Reminder, other.Reminder)) return false;
      if (Extra != other.Extra) return false;
      if (ReceiptRequired != other.ReceiptRequired) return false;
      if (!object.Equals(RealFromUser, other.RealFromUser)) return false;
      if (CsExtra != other.CsExtra) return false;
      if (SessionInvisible != other.SessionInvisible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SeqId != 0L) hash ^= SeqId.GetHashCode();
      if (ClientSeqId != 0L) hash ^= ClientSeqId.GetHashCode();
      if (TimestampMs != 0L) hash ^= TimestampMs.GetHashCode();
      if (fromUser_ != null) hash ^= FromUser.GetHashCode();
      if (TargetId != 0L) hash ^= TargetId.GetHashCode();
      if (toUser_ != null) hash ^= ToUser.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (BackupTips.Length != 0) hash ^= BackupTips.GetHashCode();
      hash ^= receivers_.GetHashCode();
      if (NotCountUnread != false) hash ^= NotCountUnread.GetHashCode();
      if (SessionPriority != 0) hash ^= SessionPriority.GetHashCode();
      if (SessionCategoryId != 0) hash ^= SessionCategoryId.GetHashCode();
      if (SessionAccountType != 0) hash ^= SessionAccountType.GetHashCode();
      if (NotAutoCreateSession != false) hash ^= NotAutoCreateSession.GetHashCode();
      if (UserRelationship != 0) hash ^= UserRelationship.GetHashCode();
      if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
      hash ^= excludeReceivers_.GetHashCode();
      if (MarkDelete != false) hash ^= MarkDelete.GetHashCode();
      if (reminder_ != null) hash ^= Reminder.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (ReceiptRequired != false) hash ^= ReceiptRequired.GetHashCode();
      if (realFromUser_ != null) hash ^= RealFromUser.GetHashCode();
      if (CsExtra.Length != 0) hash ^= CsExtra.GetHashCode();
      if (SessionInvisible != false) hash ^= SessionInvisible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SeqId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SeqId);
      }
      if (ClientSeqId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ClientSeqId);
      }
      if (TimestampMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimestampMs);
      }
      if (fromUser_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromUser);
      }
      if (TargetId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TargetId);
      }
      if (toUser_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ToUser);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Title);
      }
      if (ContentType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ContentType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Content);
      }
      if (BackupTips.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BackupTips);
      }
      receivers_.WriteTo(output, _repeated_receivers_codec);
      if (NotCountUnread != false) {
        output.WriteRawTag(96);
        output.WriteBool(NotCountUnread);
      }
      if (SessionPriority != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SessionPriority);
      }
      if (SessionCategoryId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SessionCategoryId);
      }
      if (SessionAccountType != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(SessionAccountType);
      }
      if (NotAutoCreateSession != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(NotAutoCreateSession);
      }
      if (UserRelationship != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(UserRelationship);
      }
      if (StrTargetId.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(StrTargetId);
      }
      excludeReceivers_.WriteTo(output, _repeated_excludeReceivers_codec);
      if (MarkDelete != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(MarkDelete);
      }
      if (reminder_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Reminder);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteBytes(Extra);
      }
      if (ReceiptRequired != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(ReceiptRequired);
      }
      if (realFromUser_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RealFromUser);
      }
      if (CsExtra.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteBytes(CsExtra);
      }
      if (SessionInvisible != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(SessionInvisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SeqId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SeqId);
      }
      if (ClientSeqId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ClientSeqId);
      }
      if (TimestampMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimestampMs);
      }
      if (fromUser_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromUser);
      }
      if (TargetId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TargetId);
      }
      if (toUser_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ToUser);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Title);
      }
      if (ContentType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ContentType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Content);
      }
      if (BackupTips.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BackupTips);
      }
      receivers_.WriteTo(ref output, _repeated_receivers_codec);
      if (NotCountUnread != false) {
        output.WriteRawTag(96);
        output.WriteBool(NotCountUnread);
      }
      if (SessionPriority != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SessionPriority);
      }
      if (SessionCategoryId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SessionCategoryId);
      }
      if (SessionAccountType != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(SessionAccountType);
      }
      if (NotAutoCreateSession != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(NotAutoCreateSession);
      }
      if (UserRelationship != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(UserRelationship);
      }
      if (StrTargetId.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(StrTargetId);
      }
      excludeReceivers_.WriteTo(ref output, _repeated_excludeReceivers_codec);
      if (MarkDelete != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(MarkDelete);
      }
      if (reminder_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Reminder);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteBytes(Extra);
      }
      if (ReceiptRequired != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(ReceiptRequired);
      }
      if (realFromUser_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RealFromUser);
      }
      if (CsExtra.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteBytes(CsExtra);
      }
      if (SessionInvisible != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(SessionInvisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SeqId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
      }
      if (ClientSeqId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientSeqId);
      }
      if (TimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMs);
      }
      if (fromUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUser);
      }
      if (TargetId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
      }
      if (toUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToUser);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (BackupTips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackupTips);
      }
      size += receivers_.CalculateSize(_repeated_receivers_codec);
      if (NotCountUnread != false) {
        size += 1 + 1;
      }
      if (SessionPriority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionPriority);
      }
      if (SessionCategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCategoryId);
      }
      if (SessionAccountType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionAccountType);
      }
      if (NotAutoCreateSession != false) {
        size += 2 + 1;
      }
      if (UserRelationship != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserRelationship);
      }
      if (StrTargetId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
      }
      size += excludeReceivers_.CalculateSize(_repeated_excludeReceivers_codec);
      if (MarkDelete != false) {
        size += 2 + 1;
      }
      if (reminder_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Reminder);
      }
      if (Extra.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Extra);
      }
      if (ReceiptRequired != false) {
        size += 2 + 1;
      }
      if (realFromUser_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RealFromUser);
      }
      if (CsExtra.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(CsExtra);
      }
      if (SessionInvisible != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.SeqId != 0L) {
        SeqId = other.SeqId;
      }
      if (other.ClientSeqId != 0L) {
        ClientSeqId = other.ClientSeqId;
      }
      if (other.TimestampMs != 0L) {
        TimestampMs = other.TimestampMs;
      }
      if (other.fromUser_ != null) {
        if (fromUser_ == null) {
          FromUser = new global::AcFunDanmu.Im.Basic.User();
        }
        FromUser.MergeFrom(other.FromUser);
      }
      if (other.TargetId != 0L) {
        TargetId = other.TargetId;
      }
      if (other.toUser_ != null) {
        if (toUser_ == null) {
          ToUser = new global::AcFunDanmu.Im.Basic.User();
        }
        ToUser.MergeFrom(other.ToUser);
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.BackupTips.Length != 0) {
        BackupTips = other.BackupTips;
      }
      receivers_.Add(other.receivers_);
      if (other.NotCountUnread != false) {
        NotCountUnread = other.NotCountUnread;
      }
      if (other.SessionPriority != 0) {
        SessionPriority = other.SessionPriority;
      }
      if (other.SessionCategoryId != 0) {
        SessionCategoryId = other.SessionCategoryId;
      }
      if (other.SessionAccountType != 0) {
        SessionAccountType = other.SessionAccountType;
      }
      if (other.NotAutoCreateSession != false) {
        NotAutoCreateSession = other.NotAutoCreateSession;
      }
      if (other.UserRelationship != 0) {
        UserRelationship = other.UserRelationship;
      }
      if (other.StrTargetId.Length != 0) {
        StrTargetId = other.StrTargetId;
      }
      excludeReceivers_.Add(other.excludeReceivers_);
      if (other.MarkDelete != false) {
        MarkDelete = other.MarkDelete;
      }
      if (other.reminder_ != null) {
        if (reminder_ == null) {
          Reminder = new global::AcFunDanmu.Im.Message.Reminder();
        }
        Reminder.MergeFrom(other.Reminder);
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.ReceiptRequired != false) {
        ReceiptRequired = other.ReceiptRequired;
      }
      if (other.realFromUser_ != null) {
        if (realFromUser_ == null) {
          RealFromUser = new global::AcFunDanmu.Im.Basic.User();
        }
        RealFromUser.MergeFrom(other.RealFromUser);
      }
      if (other.CsExtra.Length != 0) {
        CsExtra = other.CsExtra;
      }
      if (other.SessionInvisible != false) {
        SessionInvisible = other.SessionInvisible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SeqId = input.ReadInt64();
            break;
          }
          case 16: {
            ClientSeqId = input.ReadInt64();
            break;
          }
          case 24: {
            TimestampMs = input.ReadInt64();
            break;
          }
          case 34: {
            if (fromUser_ == null) {
              FromUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(FromUser);
            break;
          }
          case 40: {
            TargetId = input.ReadInt64();
            break;
          }
          case 50: {
            if (toUser_ == null) {
              ToUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(ToUser);
            break;
          }
          case 58: {
            Title = input.ReadString();
            break;
          }
          case 64: {
            ContentType = input.ReadInt32();
            break;
          }
          case 74: {
            Content = input.ReadBytes();
            break;
          }
          case 82: {
            BackupTips = input.ReadString();
            break;
          }
          case 90: {
            receivers_.AddEntriesFrom(input, _repeated_receivers_codec);
            break;
          }
          case 96: {
            NotCountUnread = input.ReadBool();
            break;
          }
          case 104: {
            SessionPriority = input.ReadInt32();
            break;
          }
          case 112: {
            SessionCategoryId = input.ReadInt32();
            break;
          }
          case 120: {
            SessionAccountType = input.ReadInt32();
            break;
          }
          case 128: {
            NotAutoCreateSession = input.ReadBool();
            break;
          }
          case 136: {
            UserRelationship = input.ReadInt32();
            break;
          }
          case 146: {
            StrTargetId = input.ReadString();
            break;
          }
          case 154: {
            excludeReceivers_.AddEntriesFrom(input, _repeated_excludeReceivers_codec);
            break;
          }
          case 160: {
            MarkDelete = input.ReadBool();
            break;
          }
          case 170: {
            if (reminder_ == null) {
              Reminder = new global::AcFunDanmu.Im.Message.Reminder();
            }
            input.ReadMessage(Reminder);
            break;
          }
          case 178: {
            Extra = input.ReadBytes();
            break;
          }
          case 184: {
            ReceiptRequired = input.ReadBool();
            break;
          }
          case 194: {
            if (realFromUser_ == null) {
              RealFromUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(RealFromUser);
            break;
          }
          case 202: {
            CsExtra = input.ReadBytes();
            break;
          }
          case 208: {
            SessionInvisible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SeqId = input.ReadInt64();
            break;
          }
          case 16: {
            ClientSeqId = input.ReadInt64();
            break;
          }
          case 24: {
            TimestampMs = input.ReadInt64();
            break;
          }
          case 34: {
            if (fromUser_ == null) {
              FromUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(FromUser);
            break;
          }
          case 40: {
            TargetId = input.ReadInt64();
            break;
          }
          case 50: {
            if (toUser_ == null) {
              ToUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(ToUser);
            break;
          }
          case 58: {
            Title = input.ReadString();
            break;
          }
          case 64: {
            ContentType = input.ReadInt32();
            break;
          }
          case 74: {
            Content = input.ReadBytes();
            break;
          }
          case 82: {
            BackupTips = input.ReadString();
            break;
          }
          case 90: {
            receivers_.AddEntriesFrom(ref input, _repeated_receivers_codec);
            break;
          }
          case 96: {
            NotCountUnread = input.ReadBool();
            break;
          }
          case 104: {
            SessionPriority = input.ReadInt32();
            break;
          }
          case 112: {
            SessionCategoryId = input.ReadInt32();
            break;
          }
          case 120: {
            SessionAccountType = input.ReadInt32();
            break;
          }
          case 128: {
            NotAutoCreateSession = input.ReadBool();
            break;
          }
          case 136: {
            UserRelationship = input.ReadInt32();
            break;
          }
          case 146: {
            StrTargetId = input.ReadString();
            break;
          }
          case 154: {
            excludeReceivers_.AddEntriesFrom(ref input, _repeated_excludeReceivers_codec);
            break;
          }
          case 160: {
            MarkDelete = input.ReadBool();
            break;
          }
          case 170: {
            if (reminder_ == null) {
              Reminder = new global::AcFunDanmu.Im.Message.Reminder();
            }
            input.ReadMessage(Reminder);
            break;
          }
          case 178: {
            Extra = input.ReadBytes();
            break;
          }
          case 184: {
            ReceiptRequired = input.ReadBool();
            break;
          }
          case 194: {
            if (realFromUser_ == null) {
              RealFromUser = new global::AcFunDanmu.Im.Basic.User();
            }
            input.ReadMessage(RealFromUser);
            break;
          }
          case 202: {
            CsExtra = input.ReadBytes();
            break;
          }
          case 208: {
            SessionInvisible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
