// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: KeepAliveRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im.Basic {

  /// <summary>Holder for reflection information generated from KeepAliveRequest.proto</summary>
  public static partial class KeepAliveRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for KeepAliveRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeepAliveRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZLZWVwQWxpdmVSZXF1ZXN0LnByb3RvEhNBY0Z1bkRhbm11LkltLkJhc2lj",
            "GhZQdXNoU2VydmljZVRva2VuLnByb3RvGhVSZWdpc3RlclJlcXVlc3QucHJv",
            "dG8i5gIKEEtlZXBBbGl2ZVJlcXVlc3QSSwoOcHJlc2VuY2VTdGF0dXMYASAB",
            "KA4yMy5BY0Z1bkRhbm11LkltLkJhc2ljLlJlZ2lzdGVyUmVxdWVzdC5QcmVz",
            "ZW5jZVN0YXR1cxJKCg9hcHBBY3RpdmVTdGF0dXMYAiABKA4yMS5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlJlZ2lzdGVyUmVxdWVzdC5BY3RpdmVTdGF0dXMSPwoQ",
            "cHVzaFNlcnZpY2VUb2tlbhgDIAEoCzIlLkFjRnVuRGFubXUuSW0uQmFzaWMu",
            "UHVzaFNlcnZpY2VUb2tlbhJDChRwdXNoU2VydmljZVRva2VuTGlzdBgEIAMo",
            "CzIlLkFjRnVuRGFubXUuSW0uQmFzaWMuUHVzaFNlcnZpY2VUb2tlbhIcChRr",
            "ZWVwYWxpdmVJbnRlcnZhbFNlYxgFIAEoBRIVCg1pcHY2QXZhaWxhYmxlGAYg",
            "ASgIYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.Im.Basic.PushServiceTokenReflection.Descriptor, global::AcFunDanmu.Im.Basic.RegisterRequestReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.KeepAliveRequest), global::AcFunDanmu.Im.Basic.KeepAliveRequest.Parser, new[]{ "PresenceStatus", "AppActiveStatus", "PushServiceToken", "PushServiceTokenList", "KeepaliveIntervalSec", "Ipv6Available" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class KeepAliveRequest : pb::IMessage<KeepAliveRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeepAliveRequest> _parser = new pb::MessageParser<KeepAliveRequest>(() => new KeepAliveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeepAliveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.Basic.KeepAliveRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeepAliveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeepAliveRequest(KeepAliveRequest other) : this() {
      presenceStatus_ = other.presenceStatus_;
      appActiveStatus_ = other.appActiveStatus_;
      pushServiceToken_ = other.pushServiceToken_ != null ? other.pushServiceToken_.Clone() : null;
      pushServiceTokenList_ = other.pushServiceTokenList_.Clone();
      keepaliveIntervalSec_ = other.keepaliveIntervalSec_;
      ipv6Available_ = other.ipv6Available_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeepAliveRequest Clone() {
      return new KeepAliveRequest(this);
    }

    /// <summary>Field number for the "presenceStatus" field.</summary>
    public const int PresenceStatusFieldNumber = 1;
    private global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus presenceStatus_ = global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus PresenceStatus {
      get { return presenceStatus_; }
      set {
        presenceStatus_ = value;
      }
    }

    /// <summary>Field number for the "appActiveStatus" field.</summary>
    public const int AppActiveStatusFieldNumber = 2;
    private global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus appActiveStatus_ = global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus AppActiveStatus {
      get { return appActiveStatus_; }
      set {
        appActiveStatus_ = value;
      }
    }

    /// <summary>Field number for the "pushServiceToken" field.</summary>
    public const int PushServiceTokenFieldNumber = 3;
    private global::AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.PushServiceToken PushServiceToken {
      get { return pushServiceToken_; }
      set {
        pushServiceToken_ = value;
      }
    }

    /// <summary>Field number for the "pushServiceTokenList" field.</summary>
    public const int PushServiceTokenListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.PushServiceToken> _repeated_pushServiceTokenList_codec
        = pb::FieldCodec.ForMessage(34, global::AcFunDanmu.Im.Basic.PushServiceToken.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.PushServiceToken> pushServiceTokenList_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.PushServiceToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.PushServiceToken> PushServiceTokenList {
      get { return pushServiceTokenList_; }
    }

    /// <summary>Field number for the "keepaliveIntervalSec" field.</summary>
    public const int KeepaliveIntervalSecFieldNumber = 5;
    private int keepaliveIntervalSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KeepaliveIntervalSec {
      get { return keepaliveIntervalSec_; }
      set {
        keepaliveIntervalSec_ = value;
      }
    }

    /// <summary>Field number for the "ipv6Available" field.</summary>
    public const int Ipv6AvailableFieldNumber = 6;
    private bool ipv6Available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Ipv6Available {
      get { return ipv6Available_; }
      set {
        ipv6Available_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeepAliveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PresenceStatus != other.PresenceStatus) return false;
      if (AppActiveStatus != other.AppActiveStatus) return false;
      if (!object.Equals(PushServiceToken, other.PushServiceToken)) return false;
      if(!pushServiceTokenList_.Equals(other.pushServiceTokenList_)) return false;
      if (KeepaliveIntervalSec != other.KeepaliveIntervalSec) return false;
      if (Ipv6Available != other.Ipv6Available) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) hash ^= PresenceStatus.GetHashCode();
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) hash ^= AppActiveStatus.GetHashCode();
      if (pushServiceToken_ != null) hash ^= PushServiceToken.GetHashCode();
      hash ^= pushServiceTokenList_.GetHashCode();
      if (KeepaliveIntervalSec != 0) hash ^= KeepaliveIntervalSec.GetHashCode();
      if (Ipv6Available != false) hash ^= Ipv6Available.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PresenceStatus);
      }
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AppActiveStatus);
      }
      if (pushServiceToken_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PushServiceToken);
      }
      pushServiceTokenList_.WriteTo(output, _repeated_pushServiceTokenList_codec);
      if (KeepaliveIntervalSec != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(KeepaliveIntervalSec);
      }
      if (Ipv6Available != false) {
        output.WriteRawTag(48);
        output.WriteBool(Ipv6Available);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PresenceStatus);
      }
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AppActiveStatus);
      }
      if (pushServiceToken_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PushServiceToken);
      }
      pushServiceTokenList_.WriteTo(ref output, _repeated_pushServiceTokenList_codec);
      if (KeepaliveIntervalSec != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(KeepaliveIntervalSec);
      }
      if (Ipv6Available != false) {
        output.WriteRawTag(48);
        output.WriteBool(Ipv6Available);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresenceStatus);
      }
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppActiveStatus);
      }
      if (pushServiceToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushServiceToken);
      }
      size += pushServiceTokenList_.CalculateSize(_repeated_pushServiceTokenList_codec);
      if (KeepaliveIntervalSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepaliveIntervalSec);
      }
      if (Ipv6Available != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeepAliveRequest other) {
      if (other == null) {
        return;
      }
      if (other.PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        PresenceStatus = other.PresenceStatus;
      }
      if (other.AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        AppActiveStatus = other.AppActiveStatus;
      }
      if (other.pushServiceToken_ != null) {
        if (pushServiceToken_ == null) {
          PushServiceToken = new global::AcFunDanmu.Im.Basic.PushServiceToken();
        }
        PushServiceToken.MergeFrom(other.PushServiceToken);
      }
      pushServiceTokenList_.Add(other.pushServiceTokenList_);
      if (other.KeepaliveIntervalSec != 0) {
        KeepaliveIntervalSec = other.KeepaliveIntervalSec;
      }
      if (other.Ipv6Available != false) {
        Ipv6Available = other.Ipv6Available;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PresenceStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
            break;
          }
          case 16: {
            AppActiveStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.PushServiceToken();
            }
            input.ReadMessage(PushServiceToken);
            break;
          }
          case 34: {
            pushServiceTokenList_.AddEntriesFrom(input, _repeated_pushServiceTokenList_codec);
            break;
          }
          case 40: {
            KeepaliveIntervalSec = input.ReadInt32();
            break;
          }
          case 48: {
            Ipv6Available = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PresenceStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
            break;
          }
          case 16: {
            AppActiveStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.PushServiceToken();
            }
            input.ReadMessage(PushServiceToken);
            break;
          }
          case 34: {
            pushServiceTokenList_.AddEntriesFrom(ref input, _repeated_pushServiceTokenList_codec);
            break;
          }
          case 40: {
            KeepaliveIntervalSec = input.ReadInt32();
            break;
          }
          case 48: {
            Ipv6Available = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
