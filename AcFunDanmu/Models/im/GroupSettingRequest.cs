// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GroupSettingRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im.Cloud.Message {

  /// <summary>Holder for reflection information generated from GroupSettingRequest.proto</summary>
  public static partial class GroupSettingRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for GroupSettingRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupSettingRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlHcm91cFNldHRpbmdSZXF1ZXN0LnByb3RvEhtBY0Z1bkRhbm11LkltLkNs",
            "b3VkLk1lc3NhZ2UaGkdyb3VwRXh0cmFEYXRhVXBkYXRlLnByb3RvGhhHcm91",
            "cEhlYWRVcmxVcGRhdGUucHJvdG8aHkdyb3VwSW52aXRlTmVlZFVzZXJBZ3Jl",
            "ZS5wcm90bxofR3JvdXBTZXR0aW5nQWRtaW5UcmFuc2Zlci5wcm90bxodR3Jv",
            "dXBTZXR0aW5nQmF0Y2hVcGRhdGUucHJvdG8aFkdyb3VwU2V0dGluZ0Rlc2Mu",
            "cHJvdG8aIkdyb3VwU2V0dGluZ0ludml0ZVBlcm1pc3Npb24ucHJvdG8aJEdy",
            "b3VwU2V0dGluZ0pvaW5OZWVkUGVybWlzc2lvbi5wcm90bxofR3JvdXBTZXR0",
            "aW5nTWVtYmVyU2lsZW5jZS5wcm90bxojR3JvdXBTZXR0aW5nTWVtYmVyVGVt",
            "cFNpbGVuY2UucHJvdG8aJEdyb3VwU2V0dGluZ1JlbWluZEFsbE9ubHlBZG1p",
            "bi5wcm90bxoYR3JvdXBTZXR0aW5nUmVuYW1lLnByb3RvGiFHcm91cFNldHRp",
            "bmdVcGRhdGVPbmx5QWRtaW4ucHJvdG8i9ggKE0dyb3VwU2V0dGluZ1JlcXVl",
            "c3QSQQoGcmVuYW1lGAIgASgLMi8uQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNz",
            "YWdlLkdyb3VwU2V0dGluZ1JlbmFtZUgAEj0KBGRlc2MYAyABKAsyLS5BY0Z1",
            "bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBTZXR0aW5nRGVzY0gAElkK",
            "EmpvaW5OZWVkUGVybWlzc2lvbhgEIAEoCzI7LkFjRnVuRGFubXUuSW0uQ2xv",
            "dWQuTWVzc2FnZS5Hcm91cFNldHRpbmdKb2luTmVlZFBlcm1pc3Npb25IABJV",
            "ChBpbnZpdGVQZXJtaXNzaW9uGAUgASgLMjkuQWNGdW5EYW5tdS5JbS5DbG91",
            "ZC5NZXNzYWdlLkdyb3VwU2V0dGluZ0ludml0ZVBlcm1pc3Npb25IABJVChNn",
            "cm91cE1lbWJlcnNTaWxlbmNlGAYgASgLMjYuQWNGdW5EYW5tdS5JbS5DbG91",
            "ZC5NZXNzYWdlLkdyb3VwU2V0dGluZ01lbWJlclNpbGVuY2VIABJUChJncm91",
            "cEFkbWluVHJhbnNmZXIYByABKAsyNi5BY0Z1bkRhbm11LkltLkNsb3VkLk1l",
            "c3NhZ2UuR3JvdXBTZXR0aW5nQWRtaW5UcmFuc2ZlckgAEloKFnNldHRpbmdV",
            "cGRhdGVPbmx5QWRtaW4YCCABKAsyOC5BY0Z1bkRhbm11LkltLkNsb3VkLk1l",
            "c3NhZ2UuR3JvdXBTZXR0aW5nVXBkYXRlT25seUFkbWluSAASWQoScmVtaW5k",
            "QWxsT25seUFkbWluGAkgASgLMjsuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNz",
            "YWdlLkdyb3VwU2V0dGluZ1JlbWluZEFsbE9ubHlBZG1pbkgAEksKC2JhdGNo",
            "VXBkYXRlGAogASgLMjQuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkdy",
            "b3VwU2V0dGluZ0JhdGNoVXBkYXRlSAASXAoWZ3JvdXBNZW1iZXJUZW1wU2ls",
            "ZW5jZRgLIAEoCzI6LkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91",
            "cFNldHRpbmdNZW1iZXJUZW1wU2lsZW5jZUgAElEKFGdyb3VwRXh0cmFEYXRh",
            "VXBkYXRlGAwgASgLMjEuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkdy",
            "b3VwRXh0cmFEYXRhVXBkYXRlSAASTQoSZ3JvdXBIZWFkVXJsVXBkYXRlGA0g",
            "ASgLMi8uQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkdyb3VwSGVhZFVy",
            "bFVwZGF0ZUgAElkKGGdyb3VwSW52aXRlTmVlZFVzZXJBZ3JlZRgOIAEoCzI1",
            "LkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91cEludml0ZU5lZWRV",
            "c2VyQWdyZWVIABIPCgdncm91cElkGAEgASgJQg4KDEdyb3VwU2V0dGluZ2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdateReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdateReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgreeReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransferReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdateReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingDescReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermissionReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermissionReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilenceReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilenceReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdminReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingRenameReflection.Descriptor, global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdminReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Message.GroupSettingRequest), global::AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.Parser, new[]{ "Rename", "Desc", "JoinNeedPermission", "InvitePermission", "GroupMembersSilence", "GroupAdminTransfer", "SettingUpdateOnlyAdmin", "RemindAllOnlyAdmin", "BatchUpdate", "GroupMemberTempSilence", "GroupExtraDataUpdate", "GroupHeadUrlUpdate", "GroupInviteNeedUserAgree", "GroupId" }, new[]{ "GroupSetting" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GroupSettingRequest : pb::IMessage<GroupSettingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupSettingRequest> _parser = new pb::MessageParser<GroupSettingRequest>(() => new GroupSettingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupSettingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.Cloud.Message.GroupSettingRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupSettingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupSettingRequest(GroupSettingRequest other) : this() {
      groupId_ = other.groupId_;
      switch (other.GroupSettingCase) {
        case GroupSettingOneofCase.Rename:
          Rename = other.Rename.Clone();
          break;
        case GroupSettingOneofCase.Desc:
          Desc = other.Desc.Clone();
          break;
        case GroupSettingOneofCase.JoinNeedPermission:
          JoinNeedPermission = other.JoinNeedPermission.Clone();
          break;
        case GroupSettingOneofCase.InvitePermission:
          InvitePermission = other.InvitePermission.Clone();
          break;
        case GroupSettingOneofCase.GroupMembersSilence:
          GroupMembersSilence = other.GroupMembersSilence.Clone();
          break;
        case GroupSettingOneofCase.GroupAdminTransfer:
          GroupAdminTransfer = other.GroupAdminTransfer.Clone();
          break;
        case GroupSettingOneofCase.SettingUpdateOnlyAdmin:
          SettingUpdateOnlyAdmin = other.SettingUpdateOnlyAdmin.Clone();
          break;
        case GroupSettingOneofCase.RemindAllOnlyAdmin:
          RemindAllOnlyAdmin = other.RemindAllOnlyAdmin.Clone();
          break;
        case GroupSettingOneofCase.BatchUpdate:
          BatchUpdate = other.BatchUpdate.Clone();
          break;
        case GroupSettingOneofCase.GroupMemberTempSilence:
          GroupMemberTempSilence = other.GroupMemberTempSilence.Clone();
          break;
        case GroupSettingOneofCase.GroupExtraDataUpdate:
          GroupExtraDataUpdate = other.GroupExtraDataUpdate.Clone();
          break;
        case GroupSettingOneofCase.GroupHeadUrlUpdate:
          GroupHeadUrlUpdate = other.GroupHeadUrlUpdate.Clone();
          break;
        case GroupSettingOneofCase.GroupInviteNeedUserAgree:
          GroupInviteNeedUserAgree = other.GroupInviteNeedUserAgree.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupSettingRequest Clone() {
      return new GroupSettingRequest(this);
    }

    /// <summary>Field number for the "rename" field.</summary>
    public const int RenameFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingRename Rename {
      get { return groupSettingCase_ == GroupSettingOneofCase.Rename ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingRename) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.Rename;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingDesc Desc {
      get { return groupSettingCase_ == GroupSettingOneofCase.Desc ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingDesc) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.Desc;
      }
    }

    /// <summary>Field number for the "joinNeedPermission" field.</summary>
    public const int JoinNeedPermissionFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission JoinNeedPermission {
      get { return groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.JoinNeedPermission;
      }
    }

    /// <summary>Field number for the "invitePermission" field.</summary>
    public const int InvitePermissionFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission InvitePermission {
      get { return groupSettingCase_ == GroupSettingOneofCase.InvitePermission ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.InvitePermission;
      }
    }

    /// <summary>Field number for the "groupMembersSilence" field.</summary>
    public const int GroupMembersSilenceFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilence GroupMembersSilence {
      get { return groupSettingCase_ == GroupSettingOneofCase.GroupMembersSilence ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilence) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.GroupMembersSilence;
      }
    }

    /// <summary>Field number for the "groupAdminTransfer" field.</summary>
    public const int GroupAdminTransferFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransfer GroupAdminTransfer {
      get { return groupSettingCase_ == GroupSettingOneofCase.GroupAdminTransfer ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransfer) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.GroupAdminTransfer;
      }
    }

    /// <summary>Field number for the "settingUpdateOnlyAdmin" field.</summary>
    public const int SettingUpdateOnlyAdminFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdmin SettingUpdateOnlyAdmin {
      get { return groupSettingCase_ == GroupSettingOneofCase.SettingUpdateOnlyAdmin ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdmin) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.SettingUpdateOnlyAdmin;
      }
    }

    /// <summary>Field number for the "remindAllOnlyAdmin" field.</summary>
    public const int RemindAllOnlyAdminFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdmin RemindAllOnlyAdmin {
      get { return groupSettingCase_ == GroupSettingOneofCase.RemindAllOnlyAdmin ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdmin) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.RemindAllOnlyAdmin;
      }
    }

    /// <summary>Field number for the "batchUpdate" field.</summary>
    public const int BatchUpdateFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdate BatchUpdate {
      get { return groupSettingCase_ == GroupSettingOneofCase.BatchUpdate ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdate) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.BatchUpdate;
      }
    }

    /// <summary>Field number for the "groupMemberTempSilence" field.</summary>
    public const int GroupMemberTempSilenceFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilence GroupMemberTempSilence {
      get { return groupSettingCase_ == GroupSettingOneofCase.GroupMemberTempSilence ? (global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilence) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.GroupMemberTempSilence;
      }
    }

    /// <summary>Field number for the "groupExtraDataUpdate" field.</summary>
    public const int GroupExtraDataUpdateFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdate GroupExtraDataUpdate {
      get { return groupSettingCase_ == GroupSettingOneofCase.GroupExtraDataUpdate ? (global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdate) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.GroupExtraDataUpdate;
      }
    }

    /// <summary>Field number for the "groupHeadUrlUpdate" field.</summary>
    public const int GroupHeadUrlUpdateFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdate GroupHeadUrlUpdate {
      get { return groupSettingCase_ == GroupSettingOneofCase.GroupHeadUrlUpdate ? (global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdate) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.GroupHeadUrlUpdate;
      }
    }

    /// <summary>Field number for the "groupInviteNeedUserAgree" field.</summary>
    public const int GroupInviteNeedUserAgreeFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgree GroupInviteNeedUserAgree {
      get { return groupSettingCase_ == GroupSettingOneofCase.GroupInviteNeedUserAgree ? (global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgree) groupSetting_ : null; }
      set {
        groupSetting_ = value;
        groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.GroupInviteNeedUserAgree;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object groupSetting_;
    /// <summary>Enum of possible cases for the "GroupSetting" oneof.</summary>
    public enum GroupSettingOneofCase {
      None = 0,
      Rename = 2,
      Desc = 3,
      JoinNeedPermission = 4,
      InvitePermission = 5,
      GroupMembersSilence = 6,
      GroupAdminTransfer = 7,
      SettingUpdateOnlyAdmin = 8,
      RemindAllOnlyAdmin = 9,
      BatchUpdate = 10,
      GroupMemberTempSilence = 11,
      GroupExtraDataUpdate = 12,
      GroupHeadUrlUpdate = 13,
      GroupInviteNeedUserAgree = 14,
    }
    private GroupSettingOneofCase groupSettingCase_ = GroupSettingOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupSettingOneofCase GroupSettingCase {
      get { return groupSettingCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupSetting() {
      groupSettingCase_ = GroupSettingOneofCase.None;
      groupSetting_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupSettingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupSettingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rename, other.Rename)) return false;
      if (!object.Equals(Desc, other.Desc)) return false;
      if (!object.Equals(JoinNeedPermission, other.JoinNeedPermission)) return false;
      if (!object.Equals(InvitePermission, other.InvitePermission)) return false;
      if (!object.Equals(GroupMembersSilence, other.GroupMembersSilence)) return false;
      if (!object.Equals(GroupAdminTransfer, other.GroupAdminTransfer)) return false;
      if (!object.Equals(SettingUpdateOnlyAdmin, other.SettingUpdateOnlyAdmin)) return false;
      if (!object.Equals(RemindAllOnlyAdmin, other.RemindAllOnlyAdmin)) return false;
      if (!object.Equals(BatchUpdate, other.BatchUpdate)) return false;
      if (!object.Equals(GroupMemberTempSilence, other.GroupMemberTempSilence)) return false;
      if (!object.Equals(GroupExtraDataUpdate, other.GroupExtraDataUpdate)) return false;
      if (!object.Equals(GroupHeadUrlUpdate, other.GroupHeadUrlUpdate)) return false;
      if (!object.Equals(GroupInviteNeedUserAgree, other.GroupInviteNeedUserAgree)) return false;
      if (GroupId != other.GroupId) return false;
      if (GroupSettingCase != other.GroupSettingCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (groupSettingCase_ == GroupSettingOneofCase.Rename) hash ^= Rename.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.Desc) hash ^= Desc.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) hash ^= JoinNeedPermission.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) hash ^= InvitePermission.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMembersSilence) hash ^= GroupMembersSilence.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.GroupAdminTransfer) hash ^= GroupAdminTransfer.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.SettingUpdateOnlyAdmin) hash ^= SettingUpdateOnlyAdmin.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.RemindAllOnlyAdmin) hash ^= RemindAllOnlyAdmin.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.BatchUpdate) hash ^= BatchUpdate.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMemberTempSilence) hash ^= GroupMemberTempSilence.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.GroupExtraDataUpdate) hash ^= GroupExtraDataUpdate.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.GroupHeadUrlUpdate) hash ^= GroupHeadUrlUpdate.GetHashCode();
      if (groupSettingCase_ == GroupSettingOneofCase.GroupInviteNeedUserAgree) hash ^= GroupInviteNeedUserAgree.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      hash ^= (int) groupSettingCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
        output.WriteRawTag(18);
        output.WriteMessage(Rename);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
        output.WriteRawTag(26);
        output.WriteMessage(Desc);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
        output.WriteRawTag(34);
        output.WriteMessage(JoinNeedPermission);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
        output.WriteRawTag(42);
        output.WriteMessage(InvitePermission);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMembersSilence) {
        output.WriteRawTag(50);
        output.WriteMessage(GroupMembersSilence);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupAdminTransfer) {
        output.WriteRawTag(58);
        output.WriteMessage(GroupAdminTransfer);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.SettingUpdateOnlyAdmin) {
        output.WriteRawTag(66);
        output.WriteMessage(SettingUpdateOnlyAdmin);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.RemindAllOnlyAdmin) {
        output.WriteRawTag(74);
        output.WriteMessage(RemindAllOnlyAdmin);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.BatchUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(BatchUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMemberTempSilence) {
        output.WriteRawTag(90);
        output.WriteMessage(GroupMemberTempSilence);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupExtraDataUpdate) {
        output.WriteRawTag(98);
        output.WriteMessage(GroupExtraDataUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupHeadUrlUpdate) {
        output.WriteRawTag(106);
        output.WriteMessage(GroupHeadUrlUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupInviteNeedUserAgree) {
        output.WriteRawTag(114);
        output.WriteMessage(GroupInviteNeedUserAgree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
        output.WriteRawTag(18);
        output.WriteMessage(Rename);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
        output.WriteRawTag(26);
        output.WriteMessage(Desc);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
        output.WriteRawTag(34);
        output.WriteMessage(JoinNeedPermission);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
        output.WriteRawTag(42);
        output.WriteMessage(InvitePermission);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMembersSilence) {
        output.WriteRawTag(50);
        output.WriteMessage(GroupMembersSilence);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupAdminTransfer) {
        output.WriteRawTag(58);
        output.WriteMessage(GroupAdminTransfer);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.SettingUpdateOnlyAdmin) {
        output.WriteRawTag(66);
        output.WriteMessage(SettingUpdateOnlyAdmin);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.RemindAllOnlyAdmin) {
        output.WriteRawTag(74);
        output.WriteMessage(RemindAllOnlyAdmin);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.BatchUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(BatchUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMemberTempSilence) {
        output.WriteRawTag(90);
        output.WriteMessage(GroupMemberTempSilence);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupExtraDataUpdate) {
        output.WriteRawTag(98);
        output.WriteMessage(GroupExtraDataUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupHeadUrlUpdate) {
        output.WriteRawTag(106);
        output.WriteMessage(GroupHeadUrlUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupInviteNeedUserAgree) {
        output.WriteRawTag(114);
        output.WriteMessage(GroupInviteNeedUserAgree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rename);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Desc);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinNeedPermission);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvitePermission);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMembersSilence) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupMembersSilence);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupAdminTransfer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupAdminTransfer);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.SettingUpdateOnlyAdmin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingUpdateOnlyAdmin);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.RemindAllOnlyAdmin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemindAllOnlyAdmin);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.BatchUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatchUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupMemberTempSilence) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupMemberTempSilence);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupExtraDataUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupExtraDataUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupHeadUrlUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupHeadUrlUpdate);
      }
      if (groupSettingCase_ == GroupSettingOneofCase.GroupInviteNeedUserAgree) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupInviteNeedUserAgree);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupSettingRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      switch (other.GroupSettingCase) {
        case GroupSettingOneofCase.Rename:
          if (Rename == null) {
            Rename = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingRename();
          }
          Rename.MergeFrom(other.Rename);
          break;
        case GroupSettingOneofCase.Desc:
          if (Desc == null) {
            Desc = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingDesc();
          }
          Desc.MergeFrom(other.Desc);
          break;
        case GroupSettingOneofCase.JoinNeedPermission:
          if (JoinNeedPermission == null) {
            JoinNeedPermission = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission();
          }
          JoinNeedPermission.MergeFrom(other.JoinNeedPermission);
          break;
        case GroupSettingOneofCase.InvitePermission:
          if (InvitePermission == null) {
            InvitePermission = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission();
          }
          InvitePermission.MergeFrom(other.InvitePermission);
          break;
        case GroupSettingOneofCase.GroupMembersSilence:
          if (GroupMembersSilence == null) {
            GroupMembersSilence = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilence();
          }
          GroupMembersSilence.MergeFrom(other.GroupMembersSilence);
          break;
        case GroupSettingOneofCase.GroupAdminTransfer:
          if (GroupAdminTransfer == null) {
            GroupAdminTransfer = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransfer();
          }
          GroupAdminTransfer.MergeFrom(other.GroupAdminTransfer);
          break;
        case GroupSettingOneofCase.SettingUpdateOnlyAdmin:
          if (SettingUpdateOnlyAdmin == null) {
            SettingUpdateOnlyAdmin = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdmin();
          }
          SettingUpdateOnlyAdmin.MergeFrom(other.SettingUpdateOnlyAdmin);
          break;
        case GroupSettingOneofCase.RemindAllOnlyAdmin:
          if (RemindAllOnlyAdmin == null) {
            RemindAllOnlyAdmin = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdmin();
          }
          RemindAllOnlyAdmin.MergeFrom(other.RemindAllOnlyAdmin);
          break;
        case GroupSettingOneofCase.BatchUpdate:
          if (BatchUpdate == null) {
            BatchUpdate = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdate();
          }
          BatchUpdate.MergeFrom(other.BatchUpdate);
          break;
        case GroupSettingOneofCase.GroupMemberTempSilence:
          if (GroupMemberTempSilence == null) {
            GroupMemberTempSilence = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilence();
          }
          GroupMemberTempSilence.MergeFrom(other.GroupMemberTempSilence);
          break;
        case GroupSettingOneofCase.GroupExtraDataUpdate:
          if (GroupExtraDataUpdate == null) {
            GroupExtraDataUpdate = new global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdate();
          }
          GroupExtraDataUpdate.MergeFrom(other.GroupExtraDataUpdate);
          break;
        case GroupSettingOneofCase.GroupHeadUrlUpdate:
          if (GroupHeadUrlUpdate == null) {
            GroupHeadUrlUpdate = new global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdate();
          }
          GroupHeadUrlUpdate.MergeFrom(other.GroupHeadUrlUpdate);
          break;
        case GroupSettingOneofCase.GroupInviteNeedUserAgree:
          if (GroupInviteNeedUserAgree == null) {
            GroupInviteNeedUserAgree = new global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgree();
          }
          GroupInviteNeedUserAgree.MergeFrom(other.GroupInviteNeedUserAgree);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingRename subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingRename();
            if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
              subBuilder.MergeFrom(Rename);
            }
            input.ReadMessage(subBuilder);
            Rename = subBuilder;
            break;
          }
          case 26: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingDesc subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingDesc();
            if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
              subBuilder.MergeFrom(Desc);
            }
            input.ReadMessage(subBuilder);
            Desc = subBuilder;
            break;
          }
          case 34: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission();
            if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
              subBuilder.MergeFrom(JoinNeedPermission);
            }
            input.ReadMessage(subBuilder);
            JoinNeedPermission = subBuilder;
            break;
          }
          case 42: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission();
            if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
              subBuilder.MergeFrom(InvitePermission);
            }
            input.ReadMessage(subBuilder);
            InvitePermission = subBuilder;
            break;
          }
          case 50: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilence subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilence();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupMembersSilence) {
              subBuilder.MergeFrom(GroupMembersSilence);
            }
            input.ReadMessage(subBuilder);
            GroupMembersSilence = subBuilder;
            break;
          }
          case 58: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransfer subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransfer();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupAdminTransfer) {
              subBuilder.MergeFrom(GroupAdminTransfer);
            }
            input.ReadMessage(subBuilder);
            GroupAdminTransfer = subBuilder;
            break;
          }
          case 66: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdmin subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdmin();
            if (groupSettingCase_ == GroupSettingOneofCase.SettingUpdateOnlyAdmin) {
              subBuilder.MergeFrom(SettingUpdateOnlyAdmin);
            }
            input.ReadMessage(subBuilder);
            SettingUpdateOnlyAdmin = subBuilder;
            break;
          }
          case 74: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdmin subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdmin();
            if (groupSettingCase_ == GroupSettingOneofCase.RemindAllOnlyAdmin) {
              subBuilder.MergeFrom(RemindAllOnlyAdmin);
            }
            input.ReadMessage(subBuilder);
            RemindAllOnlyAdmin = subBuilder;
            break;
          }
          case 82: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdate subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdate();
            if (groupSettingCase_ == GroupSettingOneofCase.BatchUpdate) {
              subBuilder.MergeFrom(BatchUpdate);
            }
            input.ReadMessage(subBuilder);
            BatchUpdate = subBuilder;
            break;
          }
          case 90: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilence subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilence();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupMemberTempSilence) {
              subBuilder.MergeFrom(GroupMemberTempSilence);
            }
            input.ReadMessage(subBuilder);
            GroupMemberTempSilence = subBuilder;
            break;
          }
          case 98: {
            global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdate subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdate();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupExtraDataUpdate) {
              subBuilder.MergeFrom(GroupExtraDataUpdate);
            }
            input.ReadMessage(subBuilder);
            GroupExtraDataUpdate = subBuilder;
            break;
          }
          case 106: {
            global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdate subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdate();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupHeadUrlUpdate) {
              subBuilder.MergeFrom(GroupHeadUrlUpdate);
            }
            input.ReadMessage(subBuilder);
            GroupHeadUrlUpdate = subBuilder;
            break;
          }
          case 114: {
            global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgree subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgree();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupInviteNeedUserAgree) {
              subBuilder.MergeFrom(GroupInviteNeedUserAgree);
            }
            input.ReadMessage(subBuilder);
            GroupInviteNeedUserAgree = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingRename subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingRename();
            if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
              subBuilder.MergeFrom(Rename);
            }
            input.ReadMessage(subBuilder);
            Rename = subBuilder;
            break;
          }
          case 26: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingDesc subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingDesc();
            if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
              subBuilder.MergeFrom(Desc);
            }
            input.ReadMessage(subBuilder);
            Desc = subBuilder;
            break;
          }
          case 34: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission();
            if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
              subBuilder.MergeFrom(JoinNeedPermission);
            }
            input.ReadMessage(subBuilder);
            JoinNeedPermission = subBuilder;
            break;
          }
          case 42: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission();
            if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
              subBuilder.MergeFrom(InvitePermission);
            }
            input.ReadMessage(subBuilder);
            InvitePermission = subBuilder;
            break;
          }
          case 50: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilence subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberSilence();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupMembersSilence) {
              subBuilder.MergeFrom(GroupMembersSilence);
            }
            input.ReadMessage(subBuilder);
            GroupMembersSilence = subBuilder;
            break;
          }
          case 58: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransfer subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingAdminTransfer();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupAdminTransfer) {
              subBuilder.MergeFrom(GroupAdminTransfer);
            }
            input.ReadMessage(subBuilder);
            GroupAdminTransfer = subBuilder;
            break;
          }
          case 66: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdmin subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingUpdateOnlyAdmin();
            if (groupSettingCase_ == GroupSettingOneofCase.SettingUpdateOnlyAdmin) {
              subBuilder.MergeFrom(SettingUpdateOnlyAdmin);
            }
            input.ReadMessage(subBuilder);
            SettingUpdateOnlyAdmin = subBuilder;
            break;
          }
          case 74: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdmin subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingRemindAllOnlyAdmin();
            if (groupSettingCase_ == GroupSettingOneofCase.RemindAllOnlyAdmin) {
              subBuilder.MergeFrom(RemindAllOnlyAdmin);
            }
            input.ReadMessage(subBuilder);
            RemindAllOnlyAdmin = subBuilder;
            break;
          }
          case 82: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdate subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingBatchUpdate();
            if (groupSettingCase_ == GroupSettingOneofCase.BatchUpdate) {
              subBuilder.MergeFrom(BatchUpdate);
            }
            input.ReadMessage(subBuilder);
            BatchUpdate = subBuilder;
            break;
          }
          case 90: {
            global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilence subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupSettingMemberTempSilence();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupMemberTempSilence) {
              subBuilder.MergeFrom(GroupMemberTempSilence);
            }
            input.ReadMessage(subBuilder);
            GroupMemberTempSilence = subBuilder;
            break;
          }
          case 98: {
            global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdate subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupExtraDataUpdate();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupExtraDataUpdate) {
              subBuilder.MergeFrom(GroupExtraDataUpdate);
            }
            input.ReadMessage(subBuilder);
            GroupExtraDataUpdate = subBuilder;
            break;
          }
          case 106: {
            global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdate subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupHeadUrlUpdate();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupHeadUrlUpdate) {
              subBuilder.MergeFrom(GroupHeadUrlUpdate);
            }
            input.ReadMessage(subBuilder);
            GroupHeadUrlUpdate = subBuilder;
            break;
          }
          case 114: {
            global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgree subBuilder = new global::AcFunDanmu.Im.Cloud.Message.GroupInviteNeedUserAgree();
            if (groupSettingCase_ == GroupSettingOneofCase.GroupInviteNeedUserAgree) {
              subBuilder.MergeFrom(GroupInviteNeedUserAgree);
            }
            input.ReadMessage(subBuilder);
            GroupInviteNeedUserAgree = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
