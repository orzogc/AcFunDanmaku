// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RegisterRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im.Basic {

  /// <summary>Holder for reflection information generated from RegisterRequest.proto</summary>
  public static partial class RegisterRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for RegisterRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RegisterRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVSZWdpc3RlclJlcXVlc3QucHJvdG8SE0FjRnVuRGFubXUuSW0uQmFzaWMa",
            "DUFwcEluZm8ucHJvdG8aEERldmljZUluZm8ucHJvdG8aDUVudkluZm8ucHJv",
            "dG8aFlB1c2hTZXJ2aWNlVG9rZW4ucHJvdG8aElp0Q29tbW9uSW5mby5wcm90",
            "byLlBQoPUmVnaXN0ZXJSZXF1ZXN0Ei0KB2FwcEluZm8YASABKAsyHC5BY0Z1",
            "bkRhbm11LkltLkJhc2ljLkFwcEluZm8SMwoKZGV2aWNlSW5mbxgCIAEoCzIf",
            "LkFjRnVuRGFubXUuSW0uQmFzaWMuRGV2aWNlSW5mbxItCgdlbnZJbmZvGAMg",
            "ASgLMhwuQWNGdW5EYW5tdS5JbS5CYXNpYy5FbnZJbmZvEksKDnByZXNlbmNl",
            "U3RhdHVzGAQgASgOMjMuQWNGdW5EYW5tdS5JbS5CYXNpYy5SZWdpc3RlclJl",
            "cXVlc3QuUHJlc2VuY2VTdGF0dXMSSgoPYXBwQWN0aXZlU3RhdHVzGAUgASgO",
            "MjEuQWNGdW5EYW5tdS5JbS5CYXNpYy5SZWdpc3RlclJlcXVlc3QuQWN0aXZl",
            "U3RhdHVzEhcKD2FwcEN1c3RvbVN0YXR1cxgGIAEoDBI/ChBwdXNoU2Vydmlj",
            "ZVRva2VuGAcgASgLMiUuQWNGdW5EYW5tdS5JbS5CYXNpYy5QdXNoU2Vydmlj",
            "ZVRva2VuEhIKCmluc3RhbmNlSWQYCCABKAMSQwoUcHVzaFNlcnZpY2VUb2tl",
            "bkxpc3QYCSADKAsyJS5BY0Z1bkRhbm11LkltLkJhc2ljLlB1c2hTZXJ2aWNl",
            "VG9rZW4SHAoUa2VlcGFsaXZlSW50ZXJ2YWxTZWMYCiABKAUSNwoMenRDb21t",
            "b25JbmZvGAsgASgLMiEuQWNGdW5EYW5tdS5JbS5CYXNpYy5adENvbW1vbklu",
            "Zm8SFQoNaXB2NkF2YWlsYWJsZRgMIAEoCCI7Cg5QcmVzZW5jZVN0YXR1cxIU",
            "ChBrUHJlc2VuY2VPZmZsaW5lEAASEwoPa1ByZXNlbmNlT25saW5lEAEiSAoM",
            "QWN0aXZlU3RhdHVzEgwKCGtJbnZhbGlkEAASFAoQa0FwcEluRm9yZWdyb3Vu",
            "ZBABEhQKEGtBcHBJbkJhY2tncm91bmQQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.Im.Basic.AppInfoReflection.Descriptor, global::AcFunDanmu.Im.Basic.DeviceInfoReflection.Descriptor, global::AcFunDanmu.Im.Basic.EnvInfoReflection.Descriptor, global::AcFunDanmu.Im.Basic.PushServiceTokenReflection.Descriptor, global::AcFunDanmu.Im.Basic.ZtCommonInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.RegisterRequest), global::AcFunDanmu.Im.Basic.RegisterRequest.Parser, new[]{ "AppInfo", "DeviceInfo", "EnvInfo", "PresenceStatus", "AppActiveStatus", "AppCustomStatus", "PushServiceToken", "InstanceId", "PushServiceTokenList", "KeepaliveIntervalSec", "ZtCommonInfo", "Ipv6Available" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus), typeof(global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegisterRequest : pb::IMessage<RegisterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterRequest> _parser = new pb::MessageParser<RegisterRequest>(() => new RegisterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.Basic.RegisterRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterRequest(RegisterRequest other) : this() {
      appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
      deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
      envInfo_ = other.envInfo_ != null ? other.envInfo_.Clone() : null;
      presenceStatus_ = other.presenceStatus_;
      appActiveStatus_ = other.appActiveStatus_;
      appCustomStatus_ = other.appCustomStatus_;
      pushServiceToken_ = other.pushServiceToken_ != null ? other.pushServiceToken_.Clone() : null;
      instanceId_ = other.instanceId_;
      pushServiceTokenList_ = other.pushServiceTokenList_.Clone();
      keepaliveIntervalSec_ = other.keepaliveIntervalSec_;
      ztCommonInfo_ = other.ztCommonInfo_ != null ? other.ztCommonInfo_.Clone() : null;
      ipv6Available_ = other.ipv6Available_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterRequest Clone() {
      return new RegisterRequest(this);
    }

    /// <summary>Field number for the "appInfo" field.</summary>
    public const int AppInfoFieldNumber = 1;
    private global::AcFunDanmu.Im.Basic.AppInfo appInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.AppInfo AppInfo {
      get { return appInfo_; }
      set {
        appInfo_ = value;
      }
    }

    /// <summary>Field number for the "deviceInfo" field.</summary>
    public const int DeviceInfoFieldNumber = 2;
    private global::AcFunDanmu.Im.Basic.DeviceInfo deviceInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.DeviceInfo DeviceInfo {
      get { return deviceInfo_; }
      set {
        deviceInfo_ = value;
      }
    }

    /// <summary>Field number for the "envInfo" field.</summary>
    public const int EnvInfoFieldNumber = 3;
    private global::AcFunDanmu.Im.Basic.EnvInfo envInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.EnvInfo EnvInfo {
      get { return envInfo_; }
      set {
        envInfo_ = value;
      }
    }

    /// <summary>Field number for the "presenceStatus" field.</summary>
    public const int PresenceStatusFieldNumber = 4;
    private global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus presenceStatus_ = global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus PresenceStatus {
      get { return presenceStatus_; }
      set {
        presenceStatus_ = value;
      }
    }

    /// <summary>Field number for the "appActiveStatus" field.</summary>
    public const int AppActiveStatusFieldNumber = 5;
    private global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus appActiveStatus_ = global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus AppActiveStatus {
      get { return appActiveStatus_; }
      set {
        appActiveStatus_ = value;
      }
    }

    /// <summary>Field number for the "appCustomStatus" field.</summary>
    public const int AppCustomStatusFieldNumber = 6;
    private pb::ByteString appCustomStatus_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AppCustomStatus {
      get { return appCustomStatus_; }
      set {
        appCustomStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pushServiceToken" field.</summary>
    public const int PushServiceTokenFieldNumber = 7;
    private global::AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.PushServiceToken PushServiceToken {
      get { return pushServiceToken_; }
      set {
        pushServiceToken_ = value;
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 8;
    private long instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "pushServiceTokenList" field.</summary>
    public const int PushServiceTokenListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.PushServiceToken> _repeated_pushServiceTokenList_codec
        = pb::FieldCodec.ForMessage(74, global::AcFunDanmu.Im.Basic.PushServiceToken.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.PushServiceToken> pushServiceTokenList_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.PushServiceToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.PushServiceToken> PushServiceTokenList {
      get { return pushServiceTokenList_; }
    }

    /// <summary>Field number for the "keepaliveIntervalSec" field.</summary>
    public const int KeepaliveIntervalSecFieldNumber = 10;
    private int keepaliveIntervalSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KeepaliveIntervalSec {
      get { return keepaliveIntervalSec_; }
      set {
        keepaliveIntervalSec_ = value;
      }
    }

    /// <summary>Field number for the "ztCommonInfo" field.</summary>
    public const int ZtCommonInfoFieldNumber = 11;
    private global::AcFunDanmu.Im.Basic.ZtCommonInfo ztCommonInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.ZtCommonInfo ZtCommonInfo {
      get { return ztCommonInfo_; }
      set {
        ztCommonInfo_ = value;
      }
    }

    /// <summary>Field number for the "ipv6Available" field.</summary>
    public const int Ipv6AvailableFieldNumber = 12;
    private bool ipv6Available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Ipv6Available {
      get { return ipv6Available_; }
      set {
        ipv6Available_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppInfo, other.AppInfo)) return false;
      if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
      if (!object.Equals(EnvInfo, other.EnvInfo)) return false;
      if (PresenceStatus != other.PresenceStatus) return false;
      if (AppActiveStatus != other.AppActiveStatus) return false;
      if (AppCustomStatus != other.AppCustomStatus) return false;
      if (!object.Equals(PushServiceToken, other.PushServiceToken)) return false;
      if (InstanceId != other.InstanceId) return false;
      if(!pushServiceTokenList_.Equals(other.pushServiceTokenList_)) return false;
      if (KeepaliveIntervalSec != other.KeepaliveIntervalSec) return false;
      if (!object.Equals(ZtCommonInfo, other.ZtCommonInfo)) return false;
      if (Ipv6Available != other.Ipv6Available) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
      if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
      if (envInfo_ != null) hash ^= EnvInfo.GetHashCode();
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) hash ^= PresenceStatus.GetHashCode();
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) hash ^= AppActiveStatus.GetHashCode();
      if (AppCustomStatus.Length != 0) hash ^= AppCustomStatus.GetHashCode();
      if (pushServiceToken_ != null) hash ^= PushServiceToken.GetHashCode();
      if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
      hash ^= pushServiceTokenList_.GetHashCode();
      if (KeepaliveIntervalSec != 0) hash ^= KeepaliveIntervalSec.GetHashCode();
      if (ztCommonInfo_ != null) hash ^= ZtCommonInfo.GetHashCode();
      if (Ipv6Available != false) hash ^= Ipv6Available.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (appInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppInfo);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeviceInfo);
      }
      if (envInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EnvInfo);
      }
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PresenceStatus);
      }
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AppActiveStatus);
      }
      if (AppCustomStatus.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(AppCustomStatus);
      }
      if (pushServiceToken_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PushServiceToken);
      }
      if (InstanceId != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(InstanceId);
      }
      pushServiceTokenList_.WriteTo(output, _repeated_pushServiceTokenList_codec);
      if (KeepaliveIntervalSec != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(KeepaliveIntervalSec);
      }
      if (ztCommonInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ZtCommonInfo);
      }
      if (Ipv6Available != false) {
        output.WriteRawTag(96);
        output.WriteBool(Ipv6Available);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (appInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppInfo);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeviceInfo);
      }
      if (envInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EnvInfo);
      }
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PresenceStatus);
      }
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AppActiveStatus);
      }
      if (AppCustomStatus.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(AppCustomStatus);
      }
      if (pushServiceToken_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PushServiceToken);
      }
      if (InstanceId != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(InstanceId);
      }
      pushServiceTokenList_.WriteTo(ref output, _repeated_pushServiceTokenList_codec);
      if (KeepaliveIntervalSec != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(KeepaliveIntervalSec);
      }
      if (ztCommonInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ZtCommonInfo);
      }
      if (Ipv6Available != false) {
        output.WriteRawTag(96);
        output.WriteBool(Ipv6Available);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (appInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
      }
      if (deviceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
      }
      if (envInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvInfo);
      }
      if (PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresenceStatus);
      }
      if (AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppActiveStatus);
      }
      if (AppCustomStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppCustomStatus);
      }
      if (pushServiceToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushServiceToken);
      }
      if (InstanceId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
      }
      size += pushServiceTokenList_.CalculateSize(_repeated_pushServiceTokenList_codec);
      if (KeepaliveIntervalSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepaliveIntervalSec);
      }
      if (ztCommonInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZtCommonInfo);
      }
      if (Ipv6Available != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterRequest other) {
      if (other == null) {
        return;
      }
      if (other.appInfo_ != null) {
        if (appInfo_ == null) {
          AppInfo = new global::AcFunDanmu.Im.Basic.AppInfo();
        }
        AppInfo.MergeFrom(other.AppInfo);
      }
      if (other.deviceInfo_ != null) {
        if (deviceInfo_ == null) {
          DeviceInfo = new global::AcFunDanmu.Im.Basic.DeviceInfo();
        }
        DeviceInfo.MergeFrom(other.DeviceInfo);
      }
      if (other.envInfo_ != null) {
        if (envInfo_ == null) {
          EnvInfo = new global::AcFunDanmu.Im.Basic.EnvInfo();
        }
        EnvInfo.MergeFrom(other.EnvInfo);
      }
      if (other.PresenceStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
        PresenceStatus = other.PresenceStatus;
      }
      if (other.AppActiveStatus != global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus.KInvalid) {
        AppActiveStatus = other.AppActiveStatus;
      }
      if (other.AppCustomStatus.Length != 0) {
        AppCustomStatus = other.AppCustomStatus;
      }
      if (other.pushServiceToken_ != null) {
        if (pushServiceToken_ == null) {
          PushServiceToken = new global::AcFunDanmu.Im.Basic.PushServiceToken();
        }
        PushServiceToken.MergeFrom(other.PushServiceToken);
      }
      if (other.InstanceId != 0L) {
        InstanceId = other.InstanceId;
      }
      pushServiceTokenList_.Add(other.pushServiceTokenList_);
      if (other.KeepaliveIntervalSec != 0) {
        KeepaliveIntervalSec = other.KeepaliveIntervalSec;
      }
      if (other.ztCommonInfo_ != null) {
        if (ztCommonInfo_ == null) {
          ZtCommonInfo = new global::AcFunDanmu.Im.Basic.ZtCommonInfo();
        }
        ZtCommonInfo.MergeFrom(other.ZtCommonInfo);
      }
      if (other.Ipv6Available != false) {
        Ipv6Available = other.Ipv6Available;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (appInfo_ == null) {
              AppInfo = new global::AcFunDanmu.Im.Basic.AppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 18: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::AcFunDanmu.Im.Basic.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 26: {
            if (envInfo_ == null) {
              EnvInfo = new global::AcFunDanmu.Im.Basic.EnvInfo();
            }
            input.ReadMessage(EnvInfo);
            break;
          }
          case 32: {
            PresenceStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
            break;
          }
          case 40: {
            AppActiveStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
            break;
          }
          case 50: {
            AppCustomStatus = input.ReadBytes();
            break;
          }
          case 58: {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.PushServiceToken();
            }
            input.ReadMessage(PushServiceToken);
            break;
          }
          case 64: {
            InstanceId = input.ReadInt64();
            break;
          }
          case 74: {
            pushServiceTokenList_.AddEntriesFrom(input, _repeated_pushServiceTokenList_codec);
            break;
          }
          case 80: {
            KeepaliveIntervalSec = input.ReadInt32();
            break;
          }
          case 90: {
            if (ztCommonInfo_ == null) {
              ZtCommonInfo = new global::AcFunDanmu.Im.Basic.ZtCommonInfo();
            }
            input.ReadMessage(ZtCommonInfo);
            break;
          }
          case 96: {
            Ipv6Available = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (appInfo_ == null) {
              AppInfo = new global::AcFunDanmu.Im.Basic.AppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 18: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::AcFunDanmu.Im.Basic.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 26: {
            if (envInfo_ == null) {
              EnvInfo = new global::AcFunDanmu.Im.Basic.EnvInfo();
            }
            input.ReadMessage(EnvInfo);
            break;
          }
          case 32: {
            PresenceStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
            break;
          }
          case 40: {
            AppActiveStatus = (global::AcFunDanmu.Im.Basic.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
            break;
          }
          case 50: {
            AppCustomStatus = input.ReadBytes();
            break;
          }
          case 58: {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.PushServiceToken();
            }
            input.ReadMessage(PushServiceToken);
            break;
          }
          case 64: {
            InstanceId = input.ReadInt64();
            break;
          }
          case 74: {
            pushServiceTokenList_.AddEntriesFrom(ref input, _repeated_pushServiceTokenList_codec);
            break;
          }
          case 80: {
            KeepaliveIntervalSec = input.ReadInt32();
            break;
          }
          case 90: {
            if (ztCommonInfo_ == null) {
              ZtCommonInfo = new global::AcFunDanmu.Im.Basic.ZtCommonInfo();
            }
            input.ReadMessage(ZtCommonInfo);
            break;
          }
          case 96: {
            Ipv6Available = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PresenceStatus {
        [pbr::OriginalName("kPresenceOffline")] KPresenceOffline = 0,
        [pbr::OriginalName("kPresenceOnline")] KPresenceOnline = 1,
      }

      public enum ActiveStatus {
        [pbr::OriginalName("kInvalid")] KInvalid = 0,
        [pbr::OriginalName("kAppInForeground")] KAppInForeground = 1,
        [pbr::OriginalName("kAppInBackground")] KAppInBackground = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
