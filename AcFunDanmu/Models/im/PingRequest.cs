// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PingRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im.Basic {

  /// <summary>Holder for reflection information generated from PingRequest.proto</summary>
  public static partial class PingRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for PingRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PingRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQaW5nUmVxdWVzdC5wcm90bxITQWNGdW5EYW5tdS5JbS5CYXNpYyKeAQoL",
            "UGluZ1JlcXVlc3QSOwoIcGluZ1R5cGUYASABKA4yKS5BY0Z1bkRhbm11Lklt",
            "LkJhc2ljLlBpbmdSZXF1ZXN0LlBpbmdUeXBlEhEKCXBpbmdSb3VuZBgCIAEo",
            "DSI/CghQaW5nVHlwZRIMCghrSW52YWxpZBAAEhIKDmtQcmlvclJlZ2lzdGVy",
            "EAESEQoNa1Bvc3RSZWdpc3RlchACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.PingRequest), global::AcFunDanmu.Im.Basic.PingRequest.Parser, new[]{ "PingType", "PingRound" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PingRequest : pb::IMessage<PingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.Basic.PingRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequest(PingRequest other) : this() {
      pingType_ = other.pingType_;
      pingRound_ = other.pingRound_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PingRequest Clone() {
      return new PingRequest(this);
    }

    /// <summary>Field number for the "pingType" field.</summary>
    public const int PingTypeFieldNumber = 1;
    private global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType pingType_ = global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType.KInvalid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType PingType {
      get { return pingType_; }
      set {
        pingType_ = value;
      }
    }

    /// <summary>Field number for the "pingRound" field.</summary>
    public const int PingRoundFieldNumber = 2;
    private uint pingRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PingRound {
      get { return pingRound_; }
      set {
        pingRound_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PingType != other.PingType) return false;
      if (PingRound != other.PingRound) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PingType != global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType.KInvalid) hash ^= PingType.GetHashCode();
      if (PingRound != 0) hash ^= PingRound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PingType != global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType.KInvalid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PingType);
      }
      if (PingRound != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PingRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PingType != global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType.KInvalid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PingType);
      }
      if (PingRound != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PingRound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PingType != global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType.KInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PingType);
      }
      if (PingRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingRound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PingRequest other) {
      if (other == null) {
        return;
      }
      if (other.PingType != global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType.KInvalid) {
        PingType = other.PingType;
      }
      if (other.PingRound != 0) {
        PingRound = other.PingRound;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PingType = (global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType) input.ReadEnum();
            break;
          }
          case 16: {
            PingRound = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PingType = (global::AcFunDanmu.Im.Basic.PingRequest.Types.PingType) input.ReadEnum();
            break;
          }
          case 16: {
            PingRound = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PingRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PingType {
        [pbr::OriginalName("kInvalid")] KInvalid = 0,
        [pbr::OriginalName("kPriorRegister")] KPriorRegister = 1,
        [pbr::OriginalName("kPostRegister")] KPostRegister = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
