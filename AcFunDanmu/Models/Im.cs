// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Im.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im {

  /// <summary>Holder for reflection information generated from Im.proto</summary>
  public static partial class ImReflection {

    #region Descriptor
    /// <summary>File descriptor for Im.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CghJbS5wcm90bxINQWNGdW5EYW5tdS5JbSLhfwoFQmFzaWMa9wQKDFBhY2tl",
            "dEhlYWRlchINCgVhcHBJZBgBIAEoBRILCgN1aWQYAiABKAMSEgoKaW5zdGFu",
            "Y2VJZBgDIAEoAxINCgVmbGFncxgFIAEoDRJECgxlbmNvZGluZ1R5cGUYBiAB",
            "KA4yLi5BY0Z1bkRhbm11LkltLkJhc2ljLlBhY2tldEhlYWRlci5FbmNvZGlu",
            "Z1R5cGUSGQoRZGVjb2RlZFBheWxvYWRMZW4YByABKAUSSAoOZW5jcnlwdGlv",
            "bk1vZGUYCCABKA4yMC5BY0Z1bkRhbm11LkltLkJhc2ljLlBhY2tldEhlYWRl",
            "ci5FbmNyeXB0aW9uTW9kZRIxCgl0b2tlbkluZm8YCSABKAsyHi5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlRva2VuSW5mbxINCgVzZXFJZBgKIAEoAxI7CghmZWF0",
            "dXJlcxgLIAMoDjIpLkFjRnVuRGFubXUuSW0uQmFzaWMuUGFja2V0SGVhZGVy",
            "LkZlYXR1cmUiPwoFRmxhZ3MSEAoMa0RpclVwc3RyZWFtEAASEgoOa0RpckRv",
            "d25zdHJlYW0QARIMCghrRGlyTWFzaxABGgIQASIzCgxFbmNvZGluZ1R5cGUS",
            "EQoNa0VuY29kaW5nTm9uZRAAEhAKDGtFbmNvZGluZ0x6NBABIl0KDkVuY3J5",
            "cHRpb25Nb2RlEhMKD2tFbmNyeXB0aW9uTm9uZRAAEhsKF2tFbmNyeXB0aW9u",
            "U2VydmljZVRva2VuEAESGQoVa0VuY3J5cHRpb25TZXNzaW9uS2V5EAIiKQoH",
            "RmVhdHVyZRIMCghrUmVzZXJ2ZRAAEhAKDGtDb21wcmVzc0x6NBABGiIKBFVz",
            "ZXISDQoFYXBwSWQYASABKAUSCwoDdWlkGAIgASgDGksKDFVzZXJJbnN0YW5j",
            "ZRInCgR1c2VyGAEgASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEhIK",
            "Cmluc3RhbmNlSWQYAiABKAMangIKD1Vwc3RyZWFtUGF5bG9hZBIPCgdjb21t",
            "YW5kGAEgASgJEg0KBXNlcUlkGAIgASgDEhIKCnJldHJ5Q291bnQYAyABKA0S",
            "EwoLcGF5bG9hZERhdGEYBCABKAwSNwoMdXNlckluc3RhbmNlGAUgASgLMiEu",
            "QWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VySW5zdGFuY2USEQoJZXJyb3JDb2Rl",
            "GAYgASgFEjUKC3NldHRpbmdJbmZvGAcgASgLMiAuQWNGdW5EYW5tdS5JbS5C",
            "YXNpYy5TZXR0aW5nSW5mbxI/ChByZXF1ZXN0QmFzaWNJbmZvGAggASgLMiUu",
            "QWNGdW5EYW5tdS5JbS5CYXNpYy5SZXF1ZXN0QmFzaWNJbmZvGoABChFEb3du",
            "c3RyZWFtUGF5bG9hZBIPCgdjb21tYW5kGAEgASgJEg0KBXNlcUlkGAIgASgD",
            "EhEKCWVycm9yQ29kZRgDIAEoBRITCgtwYXlsb2FkRGF0YRgEIAEoDBIQCghl",
            "cnJvck1zZxgFIAEoCRIRCgllcnJvckRhdGEYBiABKAwangEKC1BpbmdSZXF1",
            "ZXN0EjsKCHBpbmdUeXBlGAEgASgOMikuQWNGdW5EYW5tdS5JbS5CYXNpYy5Q",
            "aW5nUmVxdWVzdC5QaW5nVHlwZRIRCglwaW5nUm91bmQYAiABKA0iPwoIUGlu",
            "Z1R5cGUSDAoIa0ludmFsaWQQABISCg5rUHJpb3JSZWdpc3RlchABEhEKDWtQ",
            "b3N0UmVnaXN0ZXIQAhpjCgxQaW5nUmVzcG9uc2USFwoPc2VydmVyVGltZXN0",
            "YW1wGAEgASgPEhAKCGNsaWVudElwGAIgASgHEhIKCnJlZGlyZWN0SXAYAyAB",
            "KAcSFAoMcmVkaXJlY3RQb3J0GAQgASgNGpUFCg9SZWdpc3RlclJlcXVlc3QS",
            "LQoHYXBwSW5mbxgBIAEoCzIcLkFjRnVuRGFubXUuSW0uQmFzaWMuQXBwSW5m",
            "bxIzCgpkZXZpY2VJbmZvGAIgASgLMh8uQWNGdW5EYW5tdS5JbS5CYXNpYy5E",
            "ZXZpY2VJbmZvEi0KB2VudkluZm8YAyABKAsyHC5BY0Z1bkRhbm11LkltLkJh",
            "c2ljLkVudkluZm8SSwoOcHJlc2VuY2VTdGF0dXMYBCABKA4yMy5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlJlZ2lzdGVyUmVxdWVzdC5QcmVzZW5jZVN0YXR1cxJK",
            "Cg9hcHBBY3RpdmVTdGF0dXMYBSABKA4yMS5BY0Z1bkRhbm11LkltLkJhc2lj",
            "LlJlZ2lzdGVyUmVxdWVzdC5BY3RpdmVTdGF0dXMSFwoPYXBwQ3VzdG9tU3Rh",
            "dHVzGAYgASgMEj8KEHB1c2hTZXJ2aWNlVG9rZW4YByABKAsyJS5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlB1c2hTZXJ2aWNlVG9rZW4SEgoKaW5zdGFuY2VJZBgI",
            "IAEoAxJDChRwdXNoU2VydmljZVRva2VuTGlzdBgJIAMoCzIlLkFjRnVuRGFu",
            "bXUuSW0uQmFzaWMuUHVzaFNlcnZpY2VUb2tlbhIcChRrZWVwYWxpdmVJbnRl",
            "cnZhbFNlYxgKIAEoBSI7Cg5QcmVzZW5jZVN0YXR1cxIUChBrUHJlc2VuY2VP",
            "ZmZsaW5lEAASEwoPa1ByZXNlbmNlT25saW5lEAEiSAoMQWN0aXZlU3RhdHVz",
            "EgwKCGtJbnZhbGlkEAASFAoQa0FwcEluRm9yZWdyb3VuZBABEhQKEGtBcHBp",
            "bkJhY2tncm91bmQQAhqvAQoQUmVnaXN0ZXJSZXNwb25zZRJDChJhY2Nlc3NQ",
            "b2ludHNDb25maWcYASABKAsyJy5BY0Z1bkRhbm11LkltLkJhc2ljLkFjY2Vz",
            "c1BvaW50c0NvbmZpZxIPCgdzZXNzS2V5GAIgASgMEhIKCmluc3RhbmNlSWQY",
            "AyABKAMSMQoJc2RrT3B0aW9uGAQgASgLMh4uQWNGdW5EYW5tdS5JbS5CYXNp",
            "Yy5TZGtPcHRpb24a2AEKEkFjY2Vzc1BvaW50c0NvbmZpZxI0CgpvcHRpbWFs",
            "QXBzGAEgAygLMiAuQWNGdW5EYW5tdS5JbS5CYXNpYy5BY2Nlc3NQb2ludBIz",
            "CgliYWNrdXBBcHMYAiADKAsyIC5BY0Z1bkRhbm11LkltLkJhc2ljLkFjY2Vz",
            "c1BvaW50EhYKDmF2YWlsYWJsZVBvcnRzGAMgAygNEj8KFWZvcmVjZUxhc3RD",
            "b25uZWN0ZWRBcBgEIAEoCzIgLkFjRnVuRGFubXUuSW0uQmFzaWMuQWNjZXNz",
            "UG9pbnQaEwoRVW5yZWdpc3RlclJlcXVlc3QaFAoSVW5yZWdpc3RlclJlc3Bv",
            "bnNlGs8CChBLZWVwQWxpdmVSZXF1ZXN0EksKDnByZXNlbmNlU3RhdHVzGAEg",
            "ASgOMjMuQWNGdW5EYW5tdS5JbS5CYXNpYy5SZWdpc3RlclJlcXVlc3QuUHJl",
            "c2VuY2VTdGF0dXMSSgoPYXBwQWN0aXZlU3RhdHVzGAIgASgOMjEuQWNGdW5E",
            "YW5tdS5JbS5CYXNpYy5SZWdpc3RlclJlcXVlc3QuQWN0aXZlU3RhdHVzEj8K",
            "EHB1c2hTZXJ2aWNlVG9rZW4YAyABKAsyJS5BY0Z1bkRhbm11LkltLkJhc2lj",
            "LlB1c2hTZXJ2aWNlVG9rZW4SQwoUcHVzaFNlcnZpY2VUb2tlbkxpc3QYBCAD",
            "KAsyJS5BY0Z1bkRhbm11LkltLkJhc2ljLlB1c2hTZXJ2aWNlVG9rZW4SHAoU",
            "a2VlcGFsaXZlSW50ZXJ2YWxTZWMYBSABKAUabAoRS2VlcEFsaXZlUmVzcG9u",
            "c2USQwoSYWNjZXNzUG9pbnRzQ29uZmlnGAEgASgLMicuQWNGdW5EYW5tdS5J",
            "bS5CYXNpYy5BY2Nlc3NQb2ludHNDb25maWcSEgoKc2VydmVyTXNlYxgCIAEo",
            "Axq8AQoLQWNjZXNzUG9pbnQSQQoLYWRkcmVzc1R5cGUYASABKA4yLC5BY0Z1",
            "bkRhbm11LkltLkJhc2ljLkFjY2Vzc1BvaW50LkFkZHJlc3NUeXBlEgwKBHBv",
            "cnQYAiABKA0SDAoEaXBWNBgDIAEoBxIMCgRpcFY2GAQgASgMEg4KBmRvbWFp",
            "bhgFIAEoCSIwCgtBZGRyZXNzVHlwZRIJCgVrSVBWNBAAEgkKBWtJUFY2EAES",
            "CwoHa0RvbWFpbhACGoUBCglUb2tlbkluZm8SOwoJdG9rZW5UeXBlGAEgASgO",
            "MiguQWNGdW5EYW5tdS5JbS5CYXNpYy5Ub2tlbkluZm8uVG9rZW5UeXBlEg0K",
            "BXRva2VuGAIgASgMIiwKCVRva2VuVHlwZRIMCghrSW52YWxpZBAAEhEKDWtT",
            "ZXJ2aWNlVG9rZW4QARrAAgoQUHVzaFNlcnZpY2VUb2tlbhJACghwdXNoVHlw",
            "ZRgBIAEoDjIuLkFjRnVuRGFubXUuSW0uQmFzaWMuUHVzaFNlcnZpY2VUb2tl",
            "bi5QdXNoVHlwZRINCgV0b2tlbhgCIAEoDBIVCg1pc1Bhc3NUaHJvdWdoGAMg",
            "ASgIIsMBCghQdXNoVHlwZRIUChBrUHVzaFR5cGVJbnZhbGlkEAASEQoNa1B1",
            "c2hUeXBlQVBOUxABEhMKD2tQdXNoVHlwZVhtUHVzaBACEhMKD2tQdXNoVHlw",
            "ZUpnUHVzaBADEhMKD2tQdXNoVHlwZUd0UFVzaBAEEhMKD2tQdXNoVHlwZU9w",
            "UHVzaBAFEhMKD2tQdXNoVFlwZVZ2UHVzaBAGEhMKD2tQdXNoVHlwZUh3UHVz",
            "aBAHEhAKDGtQdXNoVFlwZUZjbRAIGi8KC1NldHRpbmdJbmZvEg4KBmxvY2Fs",
            "ZRgBIAEoCRIQCgh0aW1lem9uZRgCIAEoERptCgdBcHBJbmZvEg8KB2FwcE5h",
            "bWUYASABKAkSEgoKYXBwVmVyc2lvbhgCIAEoCRISCgphcHBDaGFubmVsGAMg",
            "ASgJEhIKCnNka1ZlcnNpb24YBCABKAkSFQoNZXh0ZW5zaW9uSW5mbxgLIAEo",
            "CRrWAgoKRGV2aWNlSW5mbxJCCgxwbGF0Zm9ybVR5cGUYASABKA4yLC5BY0Z1",
            "bkRhbm11LkltLkJhc2ljLkRldmljZUluZm8uUGxhdGZvcm1UeXBlEhEKCW9z",
            "VmVyc2lvbhgCIAEoCRITCgtkZXZpY2VNb2RlbBgDIAEoCRIPCgdpbWVpTWQ1",
            "GAQgASgMEhAKCGRldmljZUlkGAUgASgJEg8KB3NvZnREaWQYBiABKAkSDwoH",
            "a3dhaURpZBgHIAEoCRIUCgxtYW51ZmFjdHVyZXIYCCABKAkigAEKDFBsYXRm",
            "b3JtVHlwZRIMCghrSW52YWxpZBAAEgwKCGtBbmRyb2lkEAESCAoEa2lPUxAC",
            "EgwKCGtXaW5kb3dzEAMSEgoOV0VDSEFUX0FORFJPSUQQBBIOCgpXRUNIQVRf",
            "SU9TEAUSBgoCSDUQBhIQCgxrUGxhdGZvcm1OdW0QBxqQAQoHRW52SW5mbxI9",
            "CgtuZXR3b3JrVHlwZRgBIAEoDjIoLkFjRnVuRGFubXUuSW0uQmFzaWMuRW52",
            "SW5mby5OZXR3b3JrVHlwZRIPCgdhcHBOYW1lGAIgASgMIjUKC05ldHdvcmtU",
            "eXBlEgwKCGtJbnZhbGlkEAASCQoFa1dJRkkQARINCglrQ2VsbHVsYXIQAhrW",
            "AgoQUmVxdWVzdEJhc2ljSW5mbxJACgpjbGllbnRUeXBlGAEgASgOMiwuQWNG",
            "dW5EYW5tdS5JbS5CYXNpYy5EZXZpY2VJbmZvLlBsYXRmb3JtVHlwZRIQCghk",
            "ZXZpY2VJZBgCIAEoCRIQCghjbGllbnRJcBgDIAEoCRISCgphcHBWZXJzaW9u",
            "GAQgASgJEg8KB2NoYW5uZWwYBSABKAkSLQoHYXBwSW5mbxgGIAEoCzIcLkFj",
            "RnVuRGFubXUuSW0uQmFzaWMuQXBwSW5mbxIzCgpkZXZpY2VJbmZvGAcgASgL",
            "Mh8uQWNGdW5EYW5tdS5JbS5CYXNpYy5EZXZpY2VJbmZvEi0KB2VudkluZm8Y",
            "CCABKAsyHC5BY0Z1bkRhbm11LkltLkJhc2ljLkVudkluZm8SEgoKY2xpZW50",
            "UG9ydBgJIAEoBRIQCghsb2NhdGlvbhgKIAEoCRogCgpTeW5jQ29va2llEhIK",
            "CnN5bmNPZmZzZXQYASABKAMaOQoPSTE4bkNvcHlXcml0aW5nEhEKCWZvcm1h",
            "dEtleRgBIAEoCRITCgtmb3JtYXRQYXJhbRgCIAMoCRpoCglTZGtPcHRpb24S",
            "HQoVcmVwb3J0SW50ZXJ2YWxTZWNvbmRzGAEgASgFEhYKDnJlcG9ydFNlY3Vy",
            "aXR5GAIgASgJEiQKHGx6NENvbXByZXNzaW9uVGhyZXNob2xkQnl0ZXMYAyAB",
            "KAUaoAEKDUxvY2FsZU1lc3NhZ2USDgoGbG9jYWxlGAEgASgJEkoKDGVycm9y",
            "TWVzc2FnZRgCIAMoCzI0LkFjRnVuRGFubXUuSW0uQmFzaWMuTG9jYWxlTWVz",
            "c2FnZS5FcnJvck1lc3NhZ2VFbnRyeRozChFFcnJvck1lc3NhZ2VFbnRyeRIL",
            "CgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAk6AjgBGkoKDEVycm9yTWVzc2Fn",
            "ZRI6Cg5sb2NhbGVNZXNzYWdlcxgBIAMoCzIiLkFjRnVuRGFubXUuSW0uQmFz",
            "aWMuTG9jYWxlTWVzc2FnZSLLAgoNU2hhcmVQbGF0Zm9ybRIZChVrU2hhcmVQ",
            "bGF0Zm9ybUludmFsaWQQABIYChRrU2hhcmVQbGF0Zm9ybVdlY2hhdBABEh8K",
            "G2tTaGFyZVBsYXRmb3JtV2VjaGF0TW9tZW50cxACEhQKEGtTaGFyZVBsYXRm",
            "b3JtUVEQAxIXChNrU2hhcmVQbGF0Zm9ybVF6b25lEAQSFwoTa1NoYXJlUGxh",
            "dGZvcm1XZWlibxAFEhoKFmtTaGFyZVBsYXRmb3JtS3VhaXNob3UQBhIaChZr",
            "U2hhcmVQbGF0Zm9ybUZhY2Vib29rEAcSGQoVa1NoYXJlUGxhdGZvcm1Ud2l0",
            "dGVyEAgSGAoUa1NoYXJlUGxhdGZvcm1Hb29nbGUQCRIXChNrU2hhcmVQbGF0",
            "Zm9ybUtha2FvEAoSFgoSa1NoYXJlUGxhdGZvcm1aYWxvEAsiv1UKCUVycm9y",
            "Q29kZRIICgRTVUNDEAASDgoJQkFTSUNfTUlOEJBOEhMKDklOVEVSTkVMX0VS",
            "Uk9SEJFOEhgKE1NFUlZJQ0VfVU5BVkFJTEFCTEUQkk4SFAoPU0VSVklDRV9U",
            "SU1FT1VUEJNOEhIKDUlOVkFMSURfVE9LRU4QlE4SHgoZUkVHX0VOQ1lSUFRf",
            "V0lUSE9VVF9UT0tFThCVThIWChFQQVJTRV9QQl9IRFJfRkFJTBCWThIWChFQ",
            "QVJTRV9QQl9QTERfRkFJTBCXThISCg1QQVJTRV9QQl9GQUlMEJhOEhUKEERF",
            "Q09ERURfTEVOX0ZBSUwQmU4SEAoLSU5WQUxJRF9LRVkQmk4SEQoMRU5DUllQ",
            "VF9GQUlMEJtOEhEKDERFQ1JZUFRfRkFJTBCcThIQCgtJTlZBTElEX1RBRxCd",
            "ThIQCgtJTlZBTElEX1ZFUhCeThIaChVJTlZBTElEX0NPTVBSRVNTX1RZUEUQ",
            "oE4SGQoUSU5WQUxJRF9FTkNSWVBUX1RZUEUQoU4SEQoMTk9UX1JFR0lTVEVS",
            "EKJOEhQKD1VTRVJfTk9UX09OTElORRCjThIUCg9JTlZBTElEX0NPTU1BTkQQ",
            "pE4SGgoVUFVTSF9VTlJFR0lTVEVSX0VSUk9SEKVOEhAKC0lOVkFMSURfU0lE",
            "EKZOEhgKE0lOVkFMSURfSU5TVEFOQ0VfSUQQp04SHAoXQ0xJRU5UX0xPQ0FM",
            "RV9OT1RfTUFUQ0gQqE4SIwoeSU5WQUxJRF9UT0tFTl9QQVNTV09SRF9DSEFO",
            "R0VEEKlOEiAKG0lOVkFMSURfVE9LRU5fVE9LRU5fRVhQSVJFRBCqThIkCh9J",
            "TlZBTElEX1RPS0VOX1RPS0VOX1ZBTFVFX0VSUk9SEKtOEigKI0lOVkFMSURf",
            "VE9LRU5fTE9HSU5fT05fT1RIRVJfREVWSUNFEKxOEhQKD0ZPUkNFX1JFQ09O",
            "TkVDVBCtThITCg5DTElFTlRfVElNRU9VVBCuThIVChBJTlZBTElEX0FSR1VN",
            "RU5UEK9OEhkKFElOVkFMSURfRk9STUFUX1RPS0VOELBOEhIKDUVNUFRZX1BB",
            "WUxPQUQQsU4SEgoNQ09NUFJFU1NfRkFJTBCyThIUCg9ERUNPTVBSRVNTX0ZB",
            "SUwQs04SEQoMT1VUX09GX09SREVSELROEhEKC01FU1NBR0VfTUlOEKCcARIX",
            "ChFJTExFR0FMX1BBUkFNRVRFUhChnAESEQoLU1lTVEVNX0JVU1kQopwBEhIK",
            "DElMTEVHQUxfVVNFUhCjnAESHAoWUEFSQU1FVEVSX0xFTl9UT09fTE9ORxCk",
            "nAESGgoUREFUQUJBU0VfRVJST1JfTVlTUUwQpZwBEhoKFERBVEFCQVNFX0VS",
            "Uk9SX0hCQVNFEKacARIaChREQVRBQkFTRV9FUlJPUl9SRURJUxCnnAESIgoc",
            "VVNFUl9SRUdJU1RFUl9MSU1JVF9JTl9BTFBIQRConAESEgoMRkxPV19DT05U",
            "Uk9MEKmcARItCidMT0NLRURfVVNFUl9BQ0NPVU5UX05FRURfVVBEQVRFX1ZF",
            "UlNJT04QqpwBEhcKEVVTRVJfTk9UX1JFR0lTVEVSEIukARIUCg5VU0VSX05P",
            "VF9GT1VORBCMpAESHAoWRlJJRU5EX0FERF9ORUVEX1ZFUklGWRCNpAESFwoR",
            "Tk9fRlJJRU5EX1JFUVVFU1QQjqQBEhYKEFRPT19NQU5ZX0ZSSUVORFMQj6QB",
            "EiMKHUZSSUVORF9SRVFVRVNUX1RPT19GUkVRVUVOVExZEJCkARIcChZDSEFU",
            "X05FRURfVE9fQkVfRlJJRU5EEJGkARIYChJBRERfRlJJRU5EX0JMT0NLRUQQ",
            "kqQBEh8KGUNBTk5PVF9BRERfRlJJRU5EX1RPX1NFTEYQk6QBEhgKEkNBTk5P",
            "VF9GT0xMT1dfU0VMRhCUpAESGAoSQUREX0ZPTExPV19CTE9DS0VEEJWkARIc",
            "ChZUQVJHRVRfRlJJRU5EX1RPT19NQU5ZEJakARIUCg5UT09fTUFOWV9JRE9M",
            "UxCXpAESHgoYRlJJRU5EX0ZPTExPV19PVkVSX0xJTUlUEJikARIYChJGUklF",
            "TkRfRk9MTE9XX1NQQU0QmaQBEh4KGENMSUVOVF9DT05GSUdfUkVBRF9FUlJP",
            "UhDwqwESJAoeQ0xJRU5UX0NPTkZJR19OT1RfRVhJU1RTX0VSUk9SEPGrARIh",
            "ChtDT05URU5UX0hJVF9TRU5TSVRJVkVfV09SRFMQ2LMBEhoKFE1PUkVfVEhB",
            "Tl9NQVhfTEVOR1RIEMC7ARIZChNNU0dfVEVYVF9NQVhfTEVOR1RIEMG7ARIY",
            "ChJNU0dfQ0FOQ0VMX09WRVJEVUUQwrsBEiAKGkNBTk5PVF9SRUNBTExfTk9O",
            "X1NFTEZfTVNHEMO7ARIaChRSRUNBTExfTk9UX0VYSVNUX01TRxDEuwESJwoh",
            "UkVGX01TR19ORVNUSU5HX0RFUFRIX1JFQUNIX0xJTUlUEMW7ARIkCh5TRU5E",
            "X0tTX01FU1NBR0VfTk9UX01BVENIX1JVTEUQpLwBEhkKE0ZJTkRfVVNFUl9G",
            "UkVRVUVOQ1kQpbwBEiEKG0tVQUlTSE9VX0ZBTlNfVE9LRU5fSU5WQUxJRBCm",
            "vAESHwoZS1VBSVNIT1VfQVVUSE9SSVpFX0ZBSUxFRBCnvAESHwoZQUREX0ZS",
            "SUVORF9UT09fRlJFUVVFTlRMWRCovAESHgoYQkxBQ0tfTElTVF9SRUFDSEVE",
            "X0xJTUlUEKm8ARIbChVHQU1FX1JPT01fSVNfUkVMRUFTRUQQ0YYDEhsKFUNS",
            "RUFURV9HQU1FX1JPT01fRkFJTBDShgMSFwoRR0FNRV9TRVJWRVJfRVJST1IQ",
            "04YDEhoKFEdBTUVfUk9PTV9JU19FWFBJUkVEENSGAxIVCg9BTFJFQURZX0lO",
            "X0dBTUUQ1oYDEhwKFlRBUkdFVF9BTFJFQURZX0lOX0dBTUUQ14YDEhQKDkdB",
            "TUVfTk9UX0VYSVNUENiGAxIkCh5HQU1FX0FDQ0VQVF9CVVRfQUxSRUFEX0lO",
            "X0dBTUUQ2YYDEiwKJkdBTUVfQUNDRVBUX0JVVF9UQVJHRVRfQUxSRUFEWV9J",
            "Tl9HQU1FENqGAxIpCiNHQU1FX0FDQ0VQVF9CVVRfQVBQX1ZFUlNJT05fVE9P",
            "X0xPVxDbhgMSGgoUR0FNRV9VU0VSX01BVENIX0ZBSUwQ3IYDEioKJFVTRVJf",
            "RlJFUVVFTlRfTEVBVkVfR0FNRV9CRV9QVU5JU0hFRBDdhgMSMgosUkVMQVRJ",
            "T05TSElQX0lOVkFMSURfQ0FOTk9UX1NFTkRfR0FNRV9JTlZJVEUQ3oYDEiMK",
            "HUdBTUVfVVNFUl9NQVRDSF9TWU5DX05PX01BVENIEN+GAxISCgxGT1JCSURf",
            "TUFUQ0gQ4IYDEhwKFkdBTUVfUkVTT1VSQ0VfTk9fRVhJU1QQ4YYDEh4KGEdB",
            "TUVfTUFUQ0hfU1lOQ19OT19NQVRDSBDihgMSJAoeR0FNRV9NQVRDSF9TWU5D",
            "X0FMUkVBRFlfRklOSVNIEOOGAxImCiBJTlZJVEFUSU9OX1NFTkRfUkVBQ0hf",
            "TElNSVRBVElPThDkhgMSHwoZR0FNRV9NQVRDSF9URUFNX05PVF9FWElTVBDl",
            "hgMSHwoZR0FNRV9NQVRDSF9URUFNX05PX1RBUkdFVBDmhgMSLQonR0FNRV9N",
            "QVRDSF9URUFNX09USEVSX0FMUkVBRFlfSk9JTl9TVUNDEOeGAxIRCgtGT1Ja",
            "RU5fVVNFUhDohgMSGQoTRk9SWkVOX1VTRVJfUFJPRklMRRDphgMSGQoTRk9S",
            "WkVOX1VTRVJfQUNDT1VOVBDqhgMSHgoYVEVNUF9GT1JaRU5fVVNFUl9BQ0NP",
            "VU5UEOuGAxIZChNMT0NLRURfVVNFUl9BQ0NPVU5UEOyGAxIsCiZVTkZSRUVa",
            "RV9VU0VSX0FDQ09VTlRfQVBQTFlfSU5fUFJPQ0VTUxDthgMSHgoYR0FNRV9N",
            "QVRIX1RFQU1fRElTQkFOREVEEO6GAxIgChpVU0VSX0FDQ09VTlRfSVNfTk9U",
            "X0ZPUlpFThDvhgMSGwoVQ0FQVENIQV9WRVJJRllfRkFJTEVEEPCGAxIfChlQ",
            "Uk9GSUxFX1VQREFURV9OT1RfUEVSTUlUEPGGAxIhChtHQU1FX1JFUVVFU1Rf",
            "VE9PX0ZSRVFVRU5UTFkQ8oYDEh8KGVdFQ0hBVF9HQU1FX0lOVklURV9DQU5D",
            "RUwQgocDEiEKG1dFQ0hBVF9HQU1FX0lOVklURV9BQ0NFUFRFRBCDhwMSGgoU",
            "VEhJUkRfUEFSVFlfTk9UX0JJTkQQ+IYDEh4KGFRISVJEX1BBUlRZX1RPS0VO",
            "X0VYUElSRRD5hgMSJgogVEhJUkRfUEFSVFlfTk9fRlJJRU5EX1BFUk1JU1NJ",
            "T04Q+oYDEiAKGkdBTUVfSU5WSVRFX0lORk9fTk9UX0VYSVNUEIyHAxIcChZH",
            "QU1FX0FDQ0VQVF9JU19JTlZBTElEEI2HAxIaChRHQU1FX0FSRU5BX05PVF9F",
            "WElTVBCOhwMSHgoYR0FNRV9TSE9QX1BST1BTX0JVWV9GQUlMEI+HAxIeChhH",
            "QU1FX1NIT1BfUFJPUFNfVVNFX0ZBSUwQkIcDEh8KGUdBTUVfU0hPUF9QUk9Q",
            "U19OT1RfRVhJU1QQkYcDEiMKHUdBTUVfU0hPUF9QUk9QU19DT1VOVF9VTk1B",
            "VENIEJKHAxIZChNHQU1FX1NLSU5fTk9UX0VYSVNUEJOHAxIlCh9HQU1FX0NP",
            "SU5fU0hBUkVfVEFLRV9PVkVSX0xJTUlUEJSHAxIhChtHQU1FX0NPSU5fVElN",
            "RUxZX1RBS0VfSU5fQ0QQlYcDEhkKE0dBTUVfU0tJTl9JTl9MT0NLRUQQlocD",
            "EiIKHEdBTUVfU0hPUF9CQUxBTkNFX05PVF9FTk9VR0gQl4cDEiAKGkdBTUVf",
            "U0tJTl9BTFJFQURZX1VOTE9DS0VEEJiHAxIbChVHQU1FX1NLSU5fVVBEQVRF",
            "X0ZBSUwQmYcDEhoKFEdBTUVfU0tJTl9JU19JTl9VU0VEEJqHAxIhChtHQU1F",
            "X1VTRVJfTUFUQ0hfVElNRVNfTElNSVQQm4cDEhgKEkdBTUVfU0tJTl9CVVlf",
            "RkFJTBCchwMSIQobR0FNRV9SRVNVTFRfVkVSSUZZX05PVF9QQVNTEJ2HAxIb",
            "ChVVU0VfUkFOS19USVRMRV9GQUlMRUQQnocDEhkKE1VTRVJfTE9DQVRJT05f",
            "RkFJTEQQn4cDEiAKGkdBTUVfQUNISUVWRU1FTlRfTk9UX0VYSVNUEKCHAxIY",
            "ChJCQUxBTkNFX05PVF9FTk9VR0gQoYcDEhMKDUNPSU5fVVNFX0ZBSUwQoocD",
            "EhMKDUNPSU5fQUREX0ZBSUwQo4cDEiIKHEdBTUVfTElOS19NSUNfUk9PTV9O",
            "T1RfRVhJU1QQtIcDEiQKHkdBTUVfTElOS19NSUNfVVNFUl9OT1RfSU5fUk9P",
            "TRC1hwMSKwolR0FNRV9MSU5LX01JQ19ST09NX1VORVhQRUNURURfTUVTU0FH",
            "RRC2hwMSKAoiR0FNRV9MSU5LX01JQ19VU0VSX0FMUkVBRFlfSU5fUk9PTRC3",
            "hwMSGQoTQ0hBVF9ST09NX05PVF9FWElTVBCYiAMSGgoUQ0hBVF9ST09NX05P",
            "VF9NRU1CRVIQmYgDEhwKFkNIQVRfUk9PTV9UQVJHRVRfTEVBVkUQmogDEh8K",
            "GUNIQVRfUk9PTV9UQVJHRVRfTEVBVkVfMlAQm4gDEi0KJ0NIQVRfUk9PTV9G",
            "T1JCSURfSU1BR0VfQkVUV0VFTl9TVFJBTkdFUhCciAMSJAoeQ0hBVF9ST09N",
            "X0xFQVZFX1RPT19GUkVRVUVOVExZEJ2IAxIrCiVTRVNTSU9OX0ZPUkJJRF9J",
            "TUFHRV9CRVRXRUVOX1NUUkFOR0VSEKKIAxIcChZTRU5EX01FU1NBR0VfSVNf",
            "QkFOTkVEEKOIAxIXChFRVUlaWkVTX05PVF9FWElTVBD8iAMSHAoWUVVJWlpF",
            "U19BTlNXRVJfVElNRU9VVBD9iAMSIgocQUxSRUFEWV9VU0VEX0lOVklUQVRJ",
            "T05fQ09ERRD+iAMSKAoiQ0FOTk9UX1VTRV9PTkVTRUxGX0lOVklUQVRJT05f",
            "Q09ERRD/iAMSIAoaSU5WSVRBVElPTl9DT0RFX0lTX0lOVkFMSUQQgIkDEiUK",
            "H01VTFRJUExBWUVSX0dBTUVfUk9PTV9OT1RfRVhJU1QQ4IkDEiYKIE1VTFRJ",
            "UExBWUVSX0dBTUVfUk9PTV9OT1RfTUVNQkVSEOGJAxIpCiNNVUxUSVBMQVlF",
            "Ul9HQU1FX1JPT01fTUVNQkVSX0tJQ0tFRBDiiQMSKwolTVVMVElQTEFZRVJf",
            "R0FNRV9ST09NX0xFQVZFX0ZSRVFVRU5DWRDjiQMSHwoZRFJBV19HVUVTU19S",
            "T09NX05PVF9FWElTVBDEigMSGgoUR1VFU1NfV09SRF9OT1RfRVhJU1QQxYoD",
            "EiAKGkRSQVdfR1VFU1NfUk9PTV9OT1RfTUVNQkVSEMaKAxITCg1OT1RfRFJB",
            "V19VU0VSEMeKAxIWChBDQU5OT1RfR1VFU1NfTk9XEMiKAxIcChZEUkFXX1VT",
            "RVJfQ0FOTk9UX0dVRVNTEMmKAxIVCg9DQU5OT1RfRFJBV19OT1cQyooDEiIK",
            "HEdVRVNTX1dPUkRfRVhDRUVEX01BWF9MRU5HVEgQy4oDEiQKHkdVRVNTX1dP",
            "UkRfSElUX1NFTlNJVElWRV9XT1JEUxDMigMSIAoaVVNFUl9JTl9UUkFWRUxf",
            "Rk9SX0lOVklUT1IQqIsDEhQKDlBFRVJfSU5fVFJBVkVMEKmLAxIVCg9UUkFW",
            "RUxfRklOSVNIRUQQqosDEhsKFVRSQVZFTF9JTlZJVEVfSU5WQUxJRBCriwMS",
            "FwoRVFJBVkVMX05PVF9GUklFTkQQrIsDEhYKEFRSQVZFTF9OT1RfRVhJU1QQ",
            "rYsDEhgKElRSQVZFTF9TRUxGX0ZPUkJJRBCuiwMSGQoTVFJBVkVMX1NDRU5B",
            "UklPX0VORBCviwMSIQobVVNFUl9JTl9UUkFWRUxfRk9SX0FDQ0VQVE9SELCL",
            "AxIcChZUUkFWRUxfRU5UUkFOQ0VfQ0xPU0VEELGLAxIfChlVU0VSX0hBU19P",
            "UEVSQVRFRF9NRVNTQUdFELKLAxIkCh5UUkFWRUxfTk9UX0ZSSUVORF9GT1Jf",
            "QUNDRVBUT1IQs4sDEhwKFldIT19TUFlfUk9PTV9OT1RfRVhJU1QQjIwDEh0K",
            "F1dIT19TUFlfUk9PTV9OT1RfTUVNQkVSEI2MAxIZChNDQU5OT1RfREVTQ1JJ",
            "QkVfTk9XEI+MAxIVCg9DQU5OT1RfVk9URV9OT1cQkIwDEhYKEFNQWV9DQU5O",
            "T1RfR1VFU1MQkYwDEhcKEU5PVF9ERVNDUklCRV9VU0VSEJKMAxITCg1OT1Rf",
            "Vk9URV9VU0VSEJOMAxIZChNJTlZBTElEX1ZPVEVfVEFSR0VUEJSMAxIjCh1E",
            "RVNDUklQVElPTl9FWENFRURfTUFYX0xFTkdUSBCVjAMSJQofREVTQ1JJUFRJ",
            "T05fSElUX1NFTlNJVElWRV9XT1JEUxCWjAMSJgogU1BZX0dVRVNTX1dPUkRf",
            "RVhDRUVEX01BWF9MRU5HVEgQl4wDEigKIlNQWV9HVUVTU19XT1JEX0hJVF9T",
            "RU5TSVRJVkVfV09SRFMQmIwDEicKIUFMUkVBRFlfSU5fTVVMVElfUExBWUVS",
            "X0NIQVRfUk9PTRDwjAMSKQojQ0hBVF9ST09NX1RPUElDX0hJVF9TRU5TSVRJ",
            "VkVfV09SRFMQ8YwDEigKIk1VTFRJX1BMQVlFUl9DSEFUX1JPT01fQ1JFQVRF",
            "X0ZBSUwQ8owDEiwKJk1VTFRJX1BMQVlFUl9DSEFUX1JPT01fQ1JFQVRFX0ZS",
            "RVFVRU5UEPOMAxImCiBNVUxUSV9QTEFZRVJfQ0hBVF9ST09NX05PVF9FWElT",
            "VBD0jAMSJgogT1BFUkFUSU9OX0FMTE9XRURfRk9SX09XTkVSX09OTFkQ9YwD",
            "Ei0KJ01VTFRJX1BMQVlFUl9DSEFUX1JPT01fR0FNRV9DUkVBVEVfRkFJTBD2",
            "jAMSKwolTVVMVElfUExBWUVSX0NIQVRfUk9PTV9HQU1FX05PVF9NQVRDSBD3",
            "jAMSKwolTk9UX01FTUJFUl9GT1JfTVVMVElfUExBWUVSX0NIQVRfUk9PTRD4",
            "jAMSJQofTVVMVElfUExBWUVSX0NIQVRfUk9PTV9SRUxFQVNFRBD5jAMSIQob",
            "TVVMVElfUExBWUVSX0NIQVRfUk9PTV9GVUxMEPqMAxItCidBTFJFQURZX0lO",
            "X09USEVSX01VTFRJX1BMQVlFUl9DSEFUX1JPT00Q+4wDEjAKKkZPUkJJRF9K",
            "T0lOX1BSSVZBVEVfTVVMVElfUExBWUVSX0NIQVRfUk9PTRD8jAMSJgogTVVM",
            "VElfUExBWUVSX0NIQVRfUk9PTV9KT0lOX0ZBSUwQ/YwDEh8KGVFVSUNLX01B",
            "VENIX1NZTkNfTk9fTUFUQ0gQ/owDEikKI1BMQVlFUl9MRUFWRV9NVUxUSV9Q",
            "TEFZRVJfQ0hBVF9ST09NEP+MAxIfChlMSU5LTUlDX0NPVU5UX1JFQUNIX0xJ",
            "TUlUEICNAxIjCh1QTEFZRVJfQUxSRUFEWV9MSU5LTUlDX09OTElORRCBjQMS",
            "JAoeUExBWUVSX0FMUkVBRFlfTElOS01JQ19PRkZMSU5FEIKNAxIkCh5QTEFZ",
            "RVJfQUxSRUFEWV9MRUFWRV9DSEFUX1JPT00Qg40DEicKIUZPUkJJRF9MSU5L",
            "X01JQ19PRkZMSU5FX0ZPUl9PV05FUhCEjQMSKgokRk9SQklEX0xJTktfTUlD",
            "X09GRkxJTkVfUExBWUlOR19HQU1FEIWNAxIpCiNGT1JCSURfTElOS19NSUNf",
            "T05MSU5FX1BMQVlJTkdfR0FNRRCGjQMSLQonTVVMVElfUExBWUVSX0NIQVRf",
            "Uk9PTV9NRU1CRVJfS0lDS0VET1VUEIeNAxIoCiJGT1JCSURfS0lDS09VVF9Q",
            "TEFZRVJfUExBWUlOR19HQU1FEIiNAxIrCiVNVUxUSV9QTEFZRVJfQ0hBVF9S",
            "T09NX0dBTUVfTk9UX0VYSVNUEImNAxIrCiVNVUxUSV9QTEFZRVJfQ0hBVF9S",
            "T09NX01FTUJFUl9USU1FT1VUEIqNAxIjCh1GT1JCSURfR0FNRV9VTlJFQURZ",
            "X0ZPUl9PV05FUhCLjQMSHQoXRk9SQklEX0NSRUFURV9DSEFUX1JPT00QjI0D",
            "EicKIUNIQVRfUk9PTV9UT1BJQ19OT1RfQUxMT1dFRF9FTVBUWRCNjQMSKwol",
            "TVVMVElfUExBWUVSX0NIQVRfUk9PTV9HQU1FX1JPT01fRlVMTBCOjQMSHwoZ",
            "UExBWUVSX05PVF9MSU5LTUlDX09OTElORRCPjQMSIwodTElOS01JQ19TVEFU",
            "VVNfQUxSRUFEWV9VUERBVEUQkI0DEhoKFENBTk5PVF9BUFBMWV9MSU5LTUlD",
            "EJGNAxIrCiVDQU5OT1RfQ1JFQVRFX0NIQVRfUk9PTV9GT1JfQkxBQ0tMSVNU",
            "EJKNAxIqCiRDQU5OT1RfQ1JFQVRFX0NIQVRfUk9PTV9GT1JfTk9UX0JJTkQQ",
            "k40DEikKI0NBTk5PVF9KT0lOX0NIQVRfUk9PTV9GT1JfQkxBQ0tMSVNUEJSN",
            "AxIcChZOT19BVkFJTEFCTEVfQ0hBVF9ST09NEJWNAxIiChxNQVhfUExBWUVS",
            "X0NPVU5UX1JFQUNIX0xJTUlUEJaNAxIwCipNVUxUSV9QTEFZRVJfQ0hBVF9S",
            "T09NX05FRURfVVBEQVRFX1ZFUlNJT04Ql40DEjYKME1VTFRJX1BMQVlFUl9D",
            "SEFUX1JPT01fU1RBUlRfR0FNRV9VUERBVEVfVkVSU0lPThCYjQMSLAomTVVM",
            "VElfUExBWUVSX0NIQVRfUk9PTV9BTFJFQURZX0lOX0dBTUUQmY0DEjEKK01V",
            "TFRJX1BMQVlFUl9DSEFUX1JPT01fRk9SQklEX0NBTkNFTF9DUkVBVEUQmo0D",
            "EiwKJkNIQVRfUk9PTV9TRUFUTkFNRV9ISVRfU0VOU0lUSVZFX1dPUkRTEJuN",
            "AxIfChlDSEFUX1JPT01fVEhFTUVfTk9UX0VYSVNUEJyNAxIkCh5PTkxZX1ZJ",
            "UF9DQU5fVVBMT0FEX0JBQ0tHUk9VTkQQnY0DEiQKHk1PUkVfVEhBTl9CQUNL",
            "R1JPVU5EX01BWF9DT1VOVBCejQMSJwohTU9ESUZZX0JBQ0tHUk9VTkRfRk9S",
            "X05PUk1BTF9ST09NEJ+NAxIuCihDSEFUX1JPT01fQU5OT1VOQ0VNRU5UX0VY",
            "Q0VFRF9NQVhfTEVOR1RIEKCNAxIwCipDSEFUX1JPT01fQU5OT1VOQ0VNRU5U",
            "X0hJVF9TRU5TSVRJVkVfV09SRFMQoY0DEhQKDk5PVF9USEVNRV9ST09NEKKN",
            "AxIUCg5GRUVEX05PVF9FWElTVBDUjQMSFAoORkVFRF9OT1RfT1dORVIQ1Y0D",
            "EhQKDkZFRURfUFVCTElTSEVEENaNAxIhChtGRUVEX1RFWFRfRVhDRUVEX01B",
            "WF9MRU5HVEgQ140DEiMKHUZFRURfVEVYVF9ISVRfU0VOU0lUSVZFX1dPUkRT",
            "ENiNAxIiChxGRUVEX0FUVEFDSE1FTlRfTUlTU0lOR19JTkZPENmNAxIVCg9G",
            "RUVEX1VTRVJfTElLRUQQ2o0DEhsKFUZFRURfQ0lUWV9OT1RfTE9DQVRFRBDb",
            "jQMSJAoeRkVFRF9QUk9GSUxFX0FVVEhPUl9CTE9DS19VU0VSENyNAxIkCh5G",
            "RUVEX1BST0ZJTEVfVVNFUl9CTE9DS19BVVRIT1IQ3Y0DEhkKE0ZFRURfVVNF",
            "Ul9OT1RfTElLRUQQ3o0DEhkKE0ZFRURfUFVCTElTSF9CQU5ORUQQ340DEhYK",
            "EEZFRURfRlJPWkVOX1VTRVIQ4I0DEh0KF0ZFRURfUFVCTElTSF9PVkVSX0xJ",
            "TUlUEOGNAxIlCh9GRUVEX1BVQkxJU0hfUkVRVUVTVF9PVkVSX0xJTUlUEOKN",
            "AxIUCg5GRUVEX0xJS0VfU1BBTRDjjQMSHQoXVFJBREVfUFJPRFVDVF9OT1Rf",
            "Rk9VTkQQ6Y0DEhsKFVRSQURFX1BST0RVQ1RfQ0hBTkdFRBDqjQMSGwoVVFJB",
            "REVfT1JERVJfRFVQTElDQVRFEOuNAxIYChJUUkFERV9PUkRFUl9GQUlMRUQQ",
            "7I0DEhsKFVRSQURFX09SREVSX05PVF9GT1VORBDtjQMSGgoUVFJBREVfUkVD",
            "RUlQVF9CSU5ERUQQ7o0DEiEKG1RSQURFX1JFQ0VJUFRfVkVSSUZZX0ZBSUxF",
            "RBDvjQMSJwohVFJBREVfUkVDRUlQVF9WRVJJRllfU1lTVEVNX0VSUk9SEPCN",
            "AxInCiFUUkFERV9SRUNFSVBUX1ZFUklGWV9DSEVDS19GQUlMRUQQ8Y0DEicK",
            "IVRSQURFX1JFQ0VJUFRfVU5TVVBQT1JURURfVkVSU0lPThDyjQMSHgoYVFJB",
            "REVfUkVDRUlQVF9CVVlfRkFJTEVEEPONAxIfChlUUkFERV9TRVJWSUNFX1VO",
            "QVZBSUxBQkxFEPSNAxIfChlUUkFERV9BR1JFRU1FTlRfTk9UX0ZPVU5EEPWN",
            "AxIjCh1UUkFERV9BR1JFRU1FTlRfVU5TSUdOX0ZBSUxFRBD2jQMSJQofQzJD",
            "X1NUUkFOR0VSX1NFU1NJT05fT1ZFUl9MSU1JVBCcjwMSGgoUR0FNRV9JTlZB",
            "TElEX0NPTU1BTkQQ4dQDEhkKE0dBTUVfVVNFUl9OT1RfRk9VTkQQ4tQDEhoK",
            "FEdBTUVfSU5WQUxJRF9NRVNTQUdFEOPUAxITCg1HQU1FX0ZJTklTSEVEEOTU",
            "AxIbChVSRVBPUlRfVE9PX0ZSRVFVRU5UTFkQ8aIEEhcKEUdST1VQX0NSRUFU",
            "RV9GQUlMEOTxBBIWChBOT1RfR1JPVVBfTUVNQkVSEOXxBBIVCg9OT1RfR1JP",
            "VVBfQURNSU4Q5vEEEhcKEUdST1VQX0RFTEVURV9GQUlMEOfxBBIZChNBRE1J",
            "Tl9UUkFOU0ZFUl9GQUlMEOjxBBIYChJHUk9VUF9TRVRUSU5HX0ZBSUwQ6fEE",
            "Eh4KGEdST1VQX0VYQ0VFRF9NQVhfTlVNQkVSUxDq8QQSHQoXR1JPVVBfQURN",
            "SU5fQ0FOTk9UX1FVSVQQ6/EEEhcKEUNBTk5PVF9LSUNLX0FETUlOEOzxBBIW",
            "ChBHUk9VUF9OT1RfRVhJU1RTEO3xBBIeChhHUk9VUF9OT1RfRU5PVUdIX01F",
            "TUJFUlMQ7vEEEigKIlVTRVJfQ1JFQVRFX0dST1VQX0VYQ0VFRF9NQVhfQ09V",
            "TlQQ7/EEEhwKFkdST1VQX05BTUVfVU5BVkFJTEFCTEUQ8PEEEiAKGlVTRVJf",
            "TklDS19OQU1FX1VOQVZBSUxBQkxFEPHxBBIUCg5HUk9VUF9PRkZfTElORRDy",
            "8QQSHgoYRk9SQklEX1VTRVJfQ1JFQVRFX0dST1VQEPPxBBIhChtHUk9VUF9T",
            "SEFSRV9HUk9VUF9OT1RfRVhJU1QQ9PEEEisKJUdST1VQX1NIQVJFX0lOVklU",
            "RU9SX05PVF9HUk9VUF9NRU1CRVIQ9fEEEiAKGkdST1VQX1NIQVJFX1FSX0NP",
            "REVfRVhQSVJFEPbxBBIqCiRHUk9VUF9TSEFSRV9HUk9VUF9FWENFRURfTUFY",
            "X05VTUJFUlMQ9/EEEiEKG0dST1VQX1NIQVJFX1FSX0NPREVfSU5WQUxJRBD4",
            "8QQSHgoYR1JPVVBfU0hBUkVfTElOS19JTlZBTElEEPnxBBIoCiJHUk9VUF9T",
            "SEFSRV9XSVRISU5fTkVFRF9QRVJNSVNTSU9OEPzxBBIkCh5HUk9VUF9CVUxM",
            "RVRJTl9TSVpFX09WRVJfTElNSVQQ+vEEEh4KGEdST1VQX0JVTExFVElOX05P",
            "VF9BRE1JThD78QQSIgocR1JPVVBfSk9JTl9SRVFVRVNUX05PVF9GT1VORBD9",
            "8QQSKwolR1JPVVBfSk9JTl9SRVFVRVNUX0hBU19CRUVOX1BST0NFU1NFRBD+",
            "8QQSIgocR1JPVVBfTkFNRV9MRU5HVEhfT1ZFUl9MSU1JVBD/8QQSFwoRR1JP",
            "VVBfUEtfTk9UX1FVSVQQgPIEEhkKE0dST1VQX1BLX05PVF9SRU5BTUUQgfIE",
            "EhkKE0dST1VQX1BLX05PVF9JTlZJVEUQgvIEEiEKG0dST1VQX1BLX05PVF9J",
            "TlZJVEVfUVJfQ09ERRCD8gQSLgooR1JPVVBfTUVNQkVSX05JQ0tfTkFNRV9M",
            "RU5HVEhfT1ZFUl9MSU1JVBCE8gQSIAoaQ0hBTk5FTF9JTlZBTElEX0NIQU5O",
            "RUxfSUQQ6PgEEiIKHENIQU5ORUxfVVNFUl9IQVNfQkVFTl9LSUNLRUQQ6fgE",
            "Eh8KGU1FU1NBR0VfVE9PX0xBUkdFX1RPX1NFTkQQ0IAFEisKJU1FU1NBR0Vf",
            "QkFUQ0hfU0VORF9DT1VOVF9FWENFRURfTElNSVQQ0YAFEiQKHkRJQU5fRElB",
            "Tl9DT1ZFUl9JTUFHRV9OT1RfUkVBTBCsjQMSIwodRElBTl9ESUFOX0NPVkVS",
            "X0lNQUdFX05PVF9TRVQQrY0DEiMKHURJQU5fRElBTl9TRVRUSU5HX1VQREFU",
            "RV9GQUlMEK6NAxIhChtESUFOX0RJQU5fQUxCVU1fVVBEQVRFX0ZBSUwQr40D",
            "EhsKFURJQU5fRElBTl9VU0VSX0ZST1pFThCwjQMSJAoeRElBTl9ESUFOX0xJ",
            "S0VfRlJFUVVFTkNZX0xJTUlUELGNAxIfChlESUFOX0RJQU5fWU9VTkdfQUdF",
            "X0xJTUlUELKNAxIdChdHSUZUX0JBTEFOQ0VfTk9UX0VOT1VHSBC4jgMSEAoK",
            "R0lGVF9HSVZFRBC5jgMSHQoXR0lGVF9SRUNFSVZFUl9OT1RfRVhJU1QQuo4D",
            "Eh8KGUdJRlRfUkVDRUlWRVJfTk9UX0lOX1JPT00Qu44DEhkKE0dJRlRfSU5G",
            "T19OT1RfRVhJU1QQvI4DEhwKFkZSRUVfVklQX0NBUkRfTk9fRVhJU1QQ6o4D",
            "EhoKFEZSRUVfVklQX0NBUkRfRVhQSVJFEOuOAxIeChhGUkVFX1ZJUF9DQVJE",
            "X1VTRV9GQUlMRUQQ7I4DEiEKG1NFQ1JFVF9TSUdOQUxfR0VORVJBVEVfRkFJ",
            "TBCGjgMSHgoYU0VDUkVUX1NJR05BTF9TSEFSRV9GQUlMEIeOAxIiChxTRUNS",
            "RVRfU0lHTkFMX0lOVkFMSURfUFJFRklYEIiOAxIeChhTRUNSRVRfU0lHTkFM",
            "X01BVENIX0ZBSUwQiY4DEiMKHVNFQ1JFVF9TSUdOQUxfRFVQTElDQVRFX01B",
            "VENIEIqOAxIlCh9TRUNSRVRfU0lHTkFMX0ZPUkJJRF9NQVRDSF9TRUxGEIuO",
            "AyL+OgoJSW1NZXNzYWdlGv8ECgdNZXNzYWdlEg0KBXNlcUlkGAEgASgDEhMK",
            "C2NsaWVudFNlcUlkGAIgASgDEhMKC3RpbWVzdGFtcE1zGAMgASgDEisKCGZy",
            "b21Vc2VyGAQgASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEhAKCHRh",
            "cmdldElkGAUgASgDEikKBnRvVXNlchgGIAEoCzIZLkFjRnVuRGFubXUuSW0u",
            "QmFzaWMuVXNlchINCgV0aXRsZRgHIAEoCRITCgtjb250ZW50VHlwZRgIIAEo",
            "BRIPCgdjb250ZW50GAkgASgMEhIKCmJ1Y2t1cFRpcHMYCiABKAkSLAoJcmVj",
            "ZWl2ZXJzGAsgAygLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEhgKEG5v",
            "dENvbnRlbnRVbnJlYWQYDCABKAgSFwoPc2Vzc2lvblByaW9yaXR5GA0gASgF",
            "EhkKEXNlc3Npb25DYXRlZ29yeUlkGA4gASgFEhoKEnNlc3Npb25BY2NvdW50",
            "VHlwZRgPIAEoBRIcChRub3RBdXRvQ3JlYXRlU2Vzc2lvbhgQIAEoCBIYChB1",
            "c2VyUmVsYXRpb25zaGlwGBEgASgFEhMKC3N0clRhcmdldElkGBIgASgJEjMK",
            "EGV4Y2x1ZGVSZWNlaXZlcnMYEyADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2lj",
            "LlVzZXISEQoJbWFya0RlbHRlGBQgASgIEjMKCHJlbWluZGVyGBUgASgLMiEu",
            "QWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuUmVtaW5kZXISDQoFZXh0cmEYFiAB",
            "KAwSFwoPcmVjZWlwdFJlcXVpcmVkGBcgASgIGqMBChNTZW5kTWVzc2FnZVJl",
            "c3BvbnNlEhMKC2NsaWVudFNlcUlkGAEgASgDEhgKEG1lc3NhZ2VUaW1lc3Rh",
            "bXAYAiABKAMSDQoFc2VxSWQYAyABKAMSGgoSc2Vzc2lvbkFjY291bnRUeXBl",
            "GAQgASgFEhcKD3Nlc3Npb25Qcmlvcml0eRgFIAEoBRIZChFzZXNzaW9uQ2F0",
            "ZWdvcnlJZBgGIAEoBRqRAQoOUHVsbE9sZFJlcXVlc3QSKQoGdGFyZ2V0GAEg",
            "ASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEg4KBm1pblNlcRgCIAEo",
            "AxIOCgZtYXhTZXEYAyABKAMSDQoFY291bnQYBCABKAUSEAoIdGFyZ2V0SWQY",
            "BSABKAMSEwoLc3RyVGFyZ2V0SWQYBiABKAkaWQoPUHVsbE9sZFJlc3BvbnNl",
            "EjIKCG1lc3NhZ2VzGAEgAygLMiAuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2Uu",
            "TWVzc2FnZRISCgpzZXJ2ZXJUaW1lGAIgASgDGoEBCg5QdWxsTmV3UmVxdWVz",
            "dBIpCgZ0YXJnZXQYASABKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXIS",
            "DgoGbWluU2VxGAIgASgDEg0KBWNvdW50GAMgASgFEhAKCHRhcmdldElkGAQg",
            "ASgDEhMKC3N0clRhcmdldElkGAUgASgJGkUKD1B1bGxOZXdSZXNwb25zZRIy",
            "CghtZXNzYWdlcxgBIAMoCzIgLkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLk1l",
            "c3NhZ2UadgoSU2Vzc2lvbkxpc3RSZXF1ZXN0EjMKCnN5bmNDb29raWUYASAB",
            "KAsyHy5BY0Z1bkRhbm11LkltLkJhc2ljLlN5bmNDb29raWUSEgoKY2F0ZWdv",
            "cnlJZBgCIAEoBRIXCg9sb2NhbERhdGFTdGF0dXMYAyABKAUaogQKC0NoYXRT",
            "ZXNzaW9uEikKBnRhcmdldBgBIAEoCzIZLkFjRnVuRGFubXUuSW0uQmFzaWMu",
            "VXNlchIQCghtYXhTZXFJZBgCIAEoAxIRCglyZWFkU2VxSWQYAyABKAMSFgoO",
            "dW5yZWFkTXNnQ291bnQYBCABKAUSNwoNbGF0ZXN0TWVzc2FnZRgFIAMoCzIg",
            "LkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLk1lc3NhZ2USPwoOY2hhdFRhcmdl",
            "dFR5cGUYCCABKA4yJy5BY0Z1bkRhbm11LkltLkltTWVzc2FnZS5DaGF0VGFy",
            "Z2V0VHlwZRIQCgh0YXJnZXRJZBgJIAEoAxISCgphY3RpdmVUaW1lGAogASgD",
            "EhAKCHByaW9yaXR5GAsgASgFEhIKCmNhdGVnb3J5SWQYDCABKAUSDgoGY3Vy",
            "c29yGA0gASgJEhMKC2FjY291bnRUeXBlGA4gASgFEhgKEGFnZ3JlZ2F0ZVNl",
            "c3Npb24YDyABKAgSFgoOanVtcENhdGVnb3J5SWQYECABKAUSEAoIZXhwaXJl",
            "QXQYESABKAMSFQoNZWZmZWN0aXZlRnJvbRgSIAEoAxITCgtzdHJUYXJnZXRJ",
            "ZBgTIAEoCRI3CgpyZW1pbmRCb2R5GBQgAygLMiMuQWNGdW5EYW5tdS5JbS5J",
            "bU1lc3NhZ2UuUmVtaW5kQm9keRIXCg90YXJnZXRSZWFkU2VxSWQYFSABKAMa",
            "VwoIUmVtaW5kZXISEgoKb3JpZ2luVGV4dBgBIAEoCRI3CgpyZW1pbmRCb2R5",
            "GAIgAygLMiMuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuUmVtaW5kQm9keRqc",
            "AgoKUmVtaW5kQm9keRJCCgpyZW1pbmRUeXBlGAEgASgOMi4uQWNGdW5EYW5t",
            "dS5JbS5JbU1lc3NhZ2UuUmVtaW5kQm9keS5SZW1pbmRUeXBlEg0KBXNlcUlk",
            "GAIgASgDEhAKCHRhcmdldElkGAMgASgDEhAKCHVzZXJOYW1lGAQgASgJEhIK",
            "CnN0YXJ0SW5kZXgYBSABKAUSDgoGbGVuZ3RoGAYgASgFInMKClJlbWluZFR5",
            "cGUSCwoHVU5LTk9XThAAEgoKBkFUX0FMTBABEgsKB0FUX1VTRVIQAhISCg5H",
            "Uk9VUF9CVUxMRVRJThADEhMKD1JFQ0VJUFRfTUVTU0FHRRAEEhYKEkdST1VQ",
            "X0pPSU5fUkVRVUVTVBAFGlsKCkNoYXRUYXJnZXQSEAoIdGFyZ2V0SWQYASAB",
            "KAkSOwoKdGFyZ2V0VHlwZRgCIAEoDjInLkFjRnVuRGFubXUuSW0uSW1NZXNz",
            "YWdlLkNoYXRUYXJnZXRUeXBlGvIBChNTZXNzaW9uTGlzdFJlc3BvbnNlEjMK",
            "CnN5bmNDb29raWUYASABKAsyHy5BY0Z1bkRhbm11LkltLkJhc2ljLlN5bmND",
            "b29raWUSNgoIc2Vzc2lvbnMYAiADKAsyJC5BY0Z1bkRhbm11LkltLkltTWVz",
            "c2FnZS5DaGF0U2Vzc2lvbhIUCgxub3RGdWxsRmV0Y2gYAyABKAgSEgoKc2Vy",
            "dmVyVGltZRgEIAEoAxIWCg5jbGVhckxvY2FsRGF0YRgFIAEoCBISCgpjYXRl",
            "Z29yeUlkGAYgASgFEhgKEGNsaWVudERhdGFTdGF0dXMYByABKAUaSwoWU2Vz",
            "c2lvblBhZ2VMaXN0UmVxdWVzdBIOCgZjdXJzb3IYASABKAkSDQoFY291bnQY",
            "AiABKAUSEgoKY2F0ZWdvcnlJZBgDIAEoBRpiChdTZXNzaW9uUGFnZUxpc3RS",
            "ZXNwb25zZRIPCgdoYXNNb3JlGAEgASgIEjYKCHNlc3Npb25zGAIgAygLMiQu",
            "QWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuQ2hhdFNlc3Npb24arwEKFFNlc3Np",
            "b25SZW1vdmVSZXF1ZXN0EhAKCHRhcmdldElkGAEgASgDEj8KDmNoYXRUYXJn",
            "ZXRUeXBlGAIgASgOMicuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuQ2hhdFRh",
            "cmdldFR5cGUSEgoKY2F0ZWdvcnlJZBgDIAEoBRITCgtzdHJUYXJnZXRJZBgE",
            "IAEoCRIbChNub3RDbGVhbkFsbE1lc3NhZ2VzGAUgASgIGhcKFVNlc3Npb25S",
            "ZW1vdmVSZXNwb25zZRpOChNTZXNzaW9uQ2xlYW5SZXF1ZXN0EjcKCmNoYXRU",
            "YXJnZXQYASABKAsyIy5BY0Z1bkRhbm11LkltLkltTWVzc2FnZS5DaGF0VGFy",
            "Z2V0GhYKFFNlc3Npb25DbGVhblJlc3BvbnNlGo0BChRNZXNzYWdlRGVsZXRl",
            "UmVxdWVzdBIQCgh0YXJnZXRJZBgBIAEoAxI/Cg5jaGF0VGFyZ2V0VHlwZRgC",
            "IAEoDjInLkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLkNoYXRUYXJnZXRUeXBl",
            "Eg0KBXNlcUlkGAMgAygDEhMKC3N0clRhcmdldElkGAQgASgJGhcKFU1lc3Nh",
            "Z2VEZWxldGVSZXNwb25zZRpeChRNZXNzYWdlQ2FuY2VsUmVxdWVzdBI3Cgpj",
            "aGF0VGFyZ2V0GAEgASgLMiMuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuQ2hh",
            "dFRhcmdldBINCgVzZXFJZBgCIAMoAxoXChVNZXNzYWdlQ2FuY2VsUmVzcG9u",
            "c2UaTgoTTWVzc2FnZUNsZWFyUmVxdWVzdBI3CgpjaGF0VGFyZ2V0GAEgASgL",
            "MiMuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuQ2hhdFRhcmdldBoWChRNZXNz",
            "YWdlQ2xlYXJSZXNwb25zZRpXCgtSZWFkU2VxSW5mbxI3CgpjaGF0VGFyZ2V0",
            "GAEgASgLMiMuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuQ2hhdFRhcmdldBIP",
            "CgdyZWFkU2VxGAIgASgDGlAKFU1lc3NhZ2VSZWFkU2VxUmVxdWVzdBI3Cgpj",
            "aGF0VGFyZ2V0GAEgAygLMiMuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuQ2hh",
            "dFRhcmdldBpTChZNZXNzYWdlUmVhZFNlcVJlc3BvbnNlEjkKC3JlYWRTZXFJ",
            "bmZvGAEgAygLMiQuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuUmVhZFNlcUlu",
            "Zm8aigEKD01lc3NhZ2VSZWFkUHVzaBIQCgh0YXJnZXRJZBgBIAEoAxIPCgdy",
            "ZWFkU2VxGAIgASgDEj8KDmNoYXRUYXJnZXRUeXBlGAMgASgOMicuQWNGdW5E",
            "YW5tdS5JbS5JbU1lc3NhZ2UuQ2hhdFRhcmdldFR5cGUSEwoLc3RyVGFyZ2V0",
            "SWQYBCABKAkaFwoVQWxsVW5yZWFkQ291bnRSZXF1ZXN0GjAKFkFsbFVucmVh",
            "ZENvdW50UmVzcG9uc2USFgoOYWxsVW5yZWFkQ291bnQYASABKAUaMgoVTWVz",
            "c2FnZVJlYWRBbGxSZXF1ZXN0EhkKEXNlc3Npb25DYXRlZ29yeUlkGAEgASgF",
            "GjIKFk1lc3NhZ2VSZWFkQWxsUmVzcG9uc2USGAoQcmVhZEFsbFRpbWVzdGFt",
            "cBgBIAEoAxpoChhTZXNpb25TdGlja3lPblRvcFJlcXVlc3QSNwoKY2hhdFRh",
            "cmdldBgBIAEoCzIjLkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLkNoYXRUYXJn",
            "ZXQSEwoLc3RpY2t5T25Ub3AYAiABKAgaUwoaU2Vzc2lvblN0aWNreU9uVG9w",
            "UmVzcG9uc2USNQoHc2Vzc2lvbhgBIAEoCzIkLkFjRnVuRGFubXUuSW0uSW1N",
            "ZXNzYWdlLkNoYXRTZXNzaW9uGnMKClNlc3Npb25SYXcSOQoDcmF3GAEgAygL",
            "MiwuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuU2Vzc2lvblJhdy5SYXdFbnRy",
            "eRoqCghSYXdFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAw6AjgB",
            "Gl4KFE1lc3NhZ2VSZWNhbGxSZXF1ZXN0EjcKCmNoYXRUYXJnZXQYASABKAsy",
            "Iy5BY0Z1bkRhbm11LkltLkltTWVzc2FnZS5DaGF0VGFyZ2V0Eg0KBXNlcUlk",
            "GAIgASgDGhcKFU1lc3NhZ2VSZWNhbGxSZXNwb25zZRqZAQoVTWVzc2FnZVJl",
            "Y2VpcHRSZXF1ZXN0EkcKEm1lc3NhZ2VSZWNlaXB0SW5mbxgBIAMoCzIrLkFj",
            "RnVuRGFubXUuSW0uSW1NZXNzYWdlLk1lc3NhZ2VSZWNlaXB0SW5mbxI3Cgpj",
            "aGF0VGFyZ2V0GAIgASgLMiMuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuQ2hh",
            "dFRhcmdldBoYChZNZXNzYWdlUmVjZWlwdFJlc3BvbnNlGiUKEk1lc3NhZ2VS",
            "ZWNlaXB0SW5mbxIPCgdyZWFkU2VxGAEgASgDGmcKHU1lc3NhZ2VSZWNlaXB0",
            "Q291bnRHZXRSZXF1ZXN0Eg0KBXNlcUlkGAEgAygDEjcKCmNoYXRUYXJnZXQY",
            "AiABKAsyIy5BY0Z1bkRhbm11LkltLkltTWVzc2FnZS5DaGF0VGFyZ2V0Gl8K",
            "Hk1lc3NhZ2VSZWNlaXB0Q291bnRHZXRSZXNwb25zZRI9CgZzdGF0dXMYASAD",
            "KAsyLS5BY0Z1bkRhbm11LkltLkltTWVzc2FnZS5NZXNzYWdlUmVjZWlwdFN0",
            "YXR1cxphChRNZXNzYWdlUmVjZWlwdFN0YXR1cxIRCglyZWFkQ291bnQYASAB",
            "KAUSEwoLdW5yZWFkQ291bnQYAiABKAUSDQoFc2VxSWQYAyABKAMSEgoKc2Vy",
            "dmVyVGltZRgEIAEoAxpoCh5NZXNzYWdlUmVjZWlwdERldGFpbEdldFJlcXVl",
            "c3QSDQoFc2VxSWQYASABKAMSNwoKY2hhdFRhcmdldBgCIAEoCzIjLkFjRnVu",
            "RGFubXUuSW0uSW1NZXNzYWdlLkNoYXRUYXJnZXQafQofTWVzc2FnZVJlY2Vp",
            "cHREZXRhaWxHZXRSZXNwb25zZRIrCghyZWFkVXNlchgBIAMoCzIZLkFjRnVu",
            "RGFubXUuSW0uQmFzaWMuVXNlchItCgp1bnJlYWRVc2VyGAIgAygLMhkuQWNG",
            "dW5EYW5tdS5JbS5CYXNpYy5Vc2VyGkwKF01lc3NhZ2VCYXRjaFNlbmRSZXF1",
            "ZXN0EjEKB21lc3NhZ2UYASADKAsyIC5BY0Z1bkRhbm11LkltLkltTWVzc2Fn",
            "ZS5NZXNzYWdlGloKGE1lc3NhZ2VCYXRjaFNlbmRSZXNwb25zZRI+CghyZXNw",
            "b25zZRgBIAMoCzIsLkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLlNlbmRNZXNz",
            "YWdlUmVzcG9uc2UaZgoPSW1hZ2VBdHRhY2htZW50EhAKCG1pbWVUeXBlGAEg",
            "ASgJEgsKA3VybBgCIAEoCRINCgV3aWR0aBgDIAEoBRIOCgZoZWlnaHQYBCAB",
            "KAUSFQoNbGVuZ3RoSW5CeXRlcxgFIAEoAxpmCg9BdWRpb0F0dGFjaG1lbnQS",
            "EAoIbWltZVR5cGUYASABKAkSCwoDdXJsGAIgASgJEg0KBXdpZHRoGAMgASgF",
            "Eg4KBmhlaWdodBgEIAEoBRIVCg1sZW5ndGhJbkJ5dGVzGAUgASgDGm4KDUdp",
            "ZkF0dGFjaG1lbnQSEAoIbWltZVR5cGUYASABKAkSCwoDdXJsGAIgASgJEg0K",
            "BXdpZHRoGAMgASgFEg4KBmhlaWdodBgEIAEoBRIRCgl0aHVtYmFVcmwYBSAB",
            "KAkSDAoEdGV4dBgGIAEoCRqkAQoKQXR0YWNobWVudBJDCg9pbWFnZUF0dGFj",
            "aG1lbnQYASABKAsyKC5BY0Z1bkRhbm11LkltLkltTWVzc2FnZS5JbWFnZUF0",
            "dGFjaG1lbnRIABJDCg9hdWRpb0F0dGFjaG1lbnQYAiABKAsyKC5BY0Z1bkRh",
            "bm11LkltLkltTWVzc2FnZS5BdWRpb0F0dGFjaG1lbnRIAEIMCgphdHRhY21u",
            "ZW50GkcKC0F0dGFjaG1lbnRzEjgKC2F0dGFjaG1lbnRzGAEgAygLMiMuQWNG",
            "dW5EYW5tdS5JbS5JbU1lc3NhZ2UuQXR0YWNobWVudBo0ChJQbGFjZUhvbGRl",
            "ck1lc3NhZ2USDgoGbWluU2VxGAEgASgDEg4KBm1heFNlcRgCIAEoAxp/ChBJ",
            "bWFnZVRleHRNZXNzYWdlEg0KBXRpdGxlGAEgASgJEhMKC2Rlc2NyaXB0aW9u",
            "GAIgASgJEhAKCGltYWdlVXJsGAMgASgJEhEKCWFjdGlvblVybBgEIAEoCRIN",
            "CgV3aWR0aBgFIAEoBRITCgthc3BlY3RSYXRpbxgGIAEoAhpaCg9SaWNoVGV4",
            "dE1lc3NhZ2USRwoPcmljaFRleHRNZXNzYWdlGAEgASgLMi4uQWNGdW5EYW5t",
            "dS5JbS5JbU1lc3NhZ2UuUmljaFRleHROb3RpY2VNZXNzYWdlGqMBCg1Ob3Rp",
            "Y2VNZXNzYWdlEkYKDnJpY2hUZXh0Tm90aWNlGAIgASgLMi4uQWNGdW5EYW5t",
            "dS5JbS5JbU1lc3NhZ2UuUmljaFRleHROb3RpY2VNZXNzYWdlEgsKA21zZxgF",
            "IAEoCRI9Cg9pMThuQ29weVdyaXRpbmcYCiABKAsyJC5BY0Z1bkRhbm11Lklt",
            "LkJhc2ljLkkxOG5Db3B5V3JpdGluZxrGAQoVUmljaFRleHROb3RpY2VNZXNz",
            "YWdlEkoKBWl0ZW1zGAEgAygLMjsuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2Uu",
            "UmljaFRleHROb3RpY2VNZXNzYWdlLlJpY2hUZXh0SXRlbRphCgxSaWNoVGV4",
            "dEl0ZW0SDQoFY29sb3IYASABKAUSDQoFc3RhcnQYAiABKAUSCwoDbGVuGAMg",
            "ASgFEhMKC2NsaWNrQWN0aW9uGAQgASgJEhEKCXVuZGVybGluZRgFIAEoCCKb",
            "BAoLTWVzc2FnZVR5cGUSCAoEVGV4dBAAEgkKBUltYWdlEAISCQoFQXVkaW8Q",
            "AxIJCgVNb3ZpZRAEEggKBEZpbGUQBRIHCgNHaWYQBxINCglJbWFnZVRleHQQ",
            "CBIPCgtQbGFjZUhvbGRlchBkEgoKBk5vdGljZRBlEhMKD011bHRpRm9ybU5v",
            "dGljZRBnEhEKDU1lc3NhZ2VDYW5jZWwQaBIXChNNZXNzYWdlQ2FuY2VsT3Jp",
            "Z2luEGkSDwoKR2FtZUludml0ZRDIARISCg1GYXZvdXJpdGVHYW1lEMkBEg8K",
            "ClRlYW1JbnZpdGUQygESFAoPTXVsdGlQbGF5ZXJHYW1lENIBEhoKFU11bHRp",
            "UGxheWVyR2FtZUludml0ZRDTARIVChBHYW1lRnJpZW5kVHJhdmVsEKwCEhUK",
            "EEdhbWVUcmF2ZWxJbnZpdGUQrQISGAoTTXVsdGlQbGF5ZXJDaGF0Um9vbRCQ",
            "AxIeChlNdWx0aVBsYXllckNoYXRSb29tSW52aXRlEJEDEiIKHU11bHRpUGxh",
            "eWVyQ2hhdFJvb21HYW1lSW52aXRlEJIDEg4KCUZlZWRTaGFyZRD0AxIZChRE",
            "aWFuRGlhbk1hdGNoU3VjY2VzcxDYBBIZChREaWFuRGlhbk5vdGlmaWNhdGlv",
            "bhDZBBIJCgRHaWZ0ELwFEhwKF1NPR0FNRV9NRVNTQUdFX1RZUEVfTUFYEOcH",
            "ImAKEktzVXNlclJlbGF0aW9uU2hpcBILCgdrVU5LTk9XEAASFQoRRk9MTE9X",
            "X0VBQ0hfT1RIRVIQARISCg5UT19GT0xMT1dfRlJPTRACEhIKDkZST01fRk9M",
            "TE9XX1RPEAMiQgoLQWNjb3VudFR5cGUSCwoHVU5LTk9XThAAEgwKCE9GRklD",
            "SUFMEAESCgoGTk9STUFMEAISDAoIU1RSQU5HRVIQAyJ/Cg5DaGF0VGFyZ2V0",
            "VHlwZRIMCghDVFRfVVNFUhAAEhEKDUNUVF9DSEFUX1JPT00QAhIZChVDVFRf",
            "TVVMVElfUExBWUVSX1JPT00QAxINCglDVFRfR1JPVVAQBBIPCgtDVFRfQ0hB",
            "Tk5FTBAFEhEKDUNUVF9BR0dSRUdBVEUQBiI5CgpTeXN0ZW1Vc2VyEhYKEmtT",
            "eXN0ZW1Vc2VySW52YWxpZBAAEhMKDlNZU1RFTV9VU0VSX0lEEJBOIrlUCgVD",
            "bG91ZBriBwoHQ2hhbm5lbBpAChdDaGFubmVsU3Vic2NyaWJlUmVxdWVzdBIR",
            "CgljaGFubmVsSWQYASABKAkSEgoKc2V0QmFycmllchgCIAEoCBoaChhDaGFu",
            "bmVsU3Vic2NyaWJlUmVzcG9uc2UaLgoZQ2hhbm5lbFVuc3Vic2NyaWJlUmVx",
            "dWVzdBIRCgljaGFubmVsSWQYASABKAkaMQocQ2hhbm5lbFN1YnNjcmliZXJz",
            "R2V0UmVxdWVzdBIRCgljaGFubmVsSWQYASABKAkaTgodQ2hhbm5lbFN1YnNj",
            "cmliZXJzR2V0UmVzcG9zbmUSLQoKc3Vic2NyaWJlchgBIAMoCzIZLkFjRnVu",
            "RGFubXUuSW0uQmFzaWMuVXNlcho+ChBDaGFubmVsQmFzaWNJbmZvEhEKCWNo",
            "YW5uZWxJZBgBIAEoCRIXCg9zdWJzY3JpYmVyQ291bnQYAiABKAUahQEKDlVz",
            "ZXJBY3Rpb25JbmZvEicKBHVzZXIYASABKAsyGS5BY0Z1bkRhbm11LkltLkJh",
            "c2ljLlVzZXISNwoGYWN0aW9uGAIgASgOMicuQWNGdW5EYW5tdS5JbS5DbG91",
            "ZC5DaGFubmVsLlVzZXJBY3Rpb24SEQoJdGltZXN0YW1wGAMgASgDGi8KGkNo",
            "YW5uZWxCYXNpY0luZm9HZXRSZXF1ZXN0EhEKCWNoYW5uZWxJZBgBIAMoCRpf",
            "ChtDaGFubmVsQmFzaWNJbmZvR2V0UmVzcG9uc2USQAoJYmFzaWNJbmZvGAEg",
            "AygLMi0uQWNGdW5EYW5tdS5JbS5DbG91ZC5DaGFubmVsLkNoYW5uZWxCYXNp",
            "Y0luZm8aLAoXQ2hhbm5lbEhlYXJ0YmVhdFJlcXVlc3QSEQoJY2hhbm5lbElk",
            "GAEgAygJGjUKGENoYW5uZWxIZWFydGJlYXRSZXNwb25zZRIZChFub3RFeGlz",
            "dENoYW5uZWxJZBgBIAMoCRqfAQoWQ2hhbm5lbEJhc2ljSW5mb05vdGlmeRJD",
            "Cg51c2VyQWN0aW9uSW5mbxgBIAEoCzIrLkFjRnVuRGFubXUuSW0uQ2xvdWQu",
            "Q2hhbm5lbC5Vc2VyQWN0aW9uSW5mbxJACgliYXNpY0luZm8YAiABKAsyLS5B",
            "Y0Z1bkRhbm11LkltLkNsb3VkLkNoYW5uZWwuQ2hhbm5lbEJhc2ljSW5mbyJl",
            "CgpVc2VyQWN0aW9uEhcKE1VTRVJfQUNUSU9OX1VOS05PV04QABIVChFVU0VS",
            "X0pPSU5fQ0hBTk5FTBABEhUKEVVTRVJfUVVJVF9DSEFOTkVMEAISEAoMVVNF",
            "Ul9PRkZMSU5FEAMamQQKBkNvbmZpZxopChZDbGllbnRDb25maWdHZXRSZXF1",
            "ZXN0Eg8KB3ZlcnNpb24YASABKA0aagoXQ2xpZW50Q29uZmlnR2V0UmVzcG9u",
            "c2USDwoHdmVyc2lvbhgBIAEoDRI+CgxjbGllbnRDb25maWcYAiABKAsyKC5B",
            "Y0Z1bkRhbm11LkltLkNsb3VkLkNvbmZpZy5DbGllbnRDb25maWcaVgodTmV0",
            "d29ya1F1YWxpdHlEZXRlY3Rpb25Db25maWcSFwoPZGV0ZWN0aW9uRG9tYWlu",
            "GAEgASgJEhwKFGRldGVjdGlvbkludmVydmFsU2VjGAIgASgFGp8CCgxDbGll",
            "bnRDb25maWcSHwoXZmV0Y2hVc2VyU3RhdHVzSW50ZXJ2YWwYASABKAUSJAoc",
            "Y2hhbm5lbFVzZXJIZWFydGJlYXRJbnRlcnZhbBgCIAEoBRJgCh1uZXR3b3Jr",
            "UXVhbGl0eURldGVjdGlvbkNvbmZpZxgDIAEoCzI5LkFjRnVuRGFubXUuSW0u",
            "Q2xvdWQuQ29uZmlnLk5ldHdvcmtRdWFsaXR5RGV0ZWN0aW9uQ29uZmlnEiMK",
            "G2lucHV0dGluZ1RpcERpc3BsYXlJbnRlcnZhbBgEIAEoBRIgChhiYXRjaFNl",
            "bmRNZXNzYWdlTWF4Q291bnQYBSABKAUSHwoXcmVzb3VyY2VVcGxvYWRpbmdE",
            "b21haW4YBiABKAkaiwMKB1Byb2ZpbGUaygEKEFVzZXJPbmxpbmVTdGF0dXMS",
            "JwoEdXNlchgBIAEoCzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchIXCg9s",
            "YXN0T2ZmbGluZVRpbWUYAiABKAMSRAoGc3RhdHVzGAMgASgOMjQuQWNGdW5E",
            "YW5tdS5JbS5DbG91ZC5Qcm9maWxlLlVzZXJPbmxpbmVTdGF0dXMuU3RhdHVz",
            "Ii4KBlN0YXR1cxILCgdVTktOT1dOEAASCgoGT05MSU5FEAESCwoHT0ZGTElO",
            "RRACGkgKHVByb2ZpbGVCYXRjaE9ubGluZVRpbWVSZXF1ZXN0EicKBHVzZXIY",
            "ASADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXIaaQoeUHJvZmlsZUJh",
            "dGNoT25saW5lVGltZVJlc3BvbnNlEkcKEHVzZXJPbmxpbmVTdGF0dXMYASAD",
            "KAsyLS5BY0Z1bkRhbm11LkltLkNsb3VkLlByb2ZpbGUuVXNlck9ubGluZVN0",
            "YXR1cxqiBQoERGF0YRqZBQoGVXBkYXRlGnYKGUtzSW1EYXRhVXBkYXRlUHVz",
            "aFBheWxvYWQSSAoEdHlwZRgBIAEoCzI6LkFjRnVuRGFubXUuSW0uQ2xvdWQu",
            "RGF0YS5VcGRhdGUuS3NJbURhdGFVcGRhdGVQdXNoUGF5bG9hZBIPCgdjb250",
            "ZW50GAIgASgMGiYKE0dyb3VwSW5mb0RhdGFVcGRhdGUSDwoHZ3JvdXBJZBgB",
            "IAEoCRooChVHcm91cE1lbWJlckxpc3RVcGRhdGUSDwoHZ3JvdXBJZBgBIAEo",
            "CRoeCgtZb3VCZUtpY2tlZBIPCgdncm91cElkGAEgASgJGnQKC01lc3NhZ2VS",
            "ZWFkEhMKC3N0clRhcmdldElkGAEgASgJEg8KB3JlYWRTZXEYAiABKAMSPwoO",
            "Y2hhdFRhcmdldFR5cGUYAyABKA4yJy5BY0Z1bkRhbm11LkltLkltTWVzc2Fn",
            "ZS5DaGF0VGFyZ2V0VHlwZRqPAQoOTWVzc2FnZVJlY2VpcHQSNwoKY2hhdFRh",
            "cmdldBgBIAEoCzIjLkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLkNoYXRUYXJn",
            "ZXQSRAoNcmVjZWlwdFN0YXR1cxgCIAEoCzItLkFjRnVuRGFubXUuSW0uSW1N",
            "ZXNzYWdlLk1lc3NhZ2VSZWNlaXB0U3RhdHVzIpwBChJLc0ltRGF0YVVwZGF0",
            "ZVR5cGUSCwoHSU5WQUxJRBAAEhUKEUdST1VQX0lORk9fVVBEQVRFEAESHAoY",
            "R1JPVVBfTUVNQkVSX0xJU1RfVVBEQVRFEAISEQoNWU9VX0JFX0tJQ0tFRBAD",
            "EhYKEk1FU1NBR0VfUkVBRF9FVkVOVBAEEhkKFU1FU1NBR0VfUkVDRUlQVF9F",
            "VkVOVBAFGvs/CgdNZXNzYWdlGosBChJJbWNSZWNhbGxlZE1lc3NhZ2USMwoJ",
            "b3JpZ2luTXNnGAEgASgLMiAuQWNGdW5EYW5tdS5JbS5JbU1lc3NhZ2UuTWVz",
            "c2FnZRJACglub3RpY2VNc2cYAiABKAsyLS5BY0Z1bkRhbm11LkltLkNsb3Vk",
            "Lk1lc3NhZ2UuSW1jTm90aWNlTWVzc2FnZRpJChFJbWNSZXBsYWNlTWVzc2Fn",
            "ZRI0CgpyZXBsYWNlTXNnGAEgASgLMiAuQWNGdW5EYW5tdS5JbS5JbU1lc3Nh",
            "Z2UuTWVzc2FnZRoUCgRUZXh0EgwKBHRleHQYASABKAkaMwoFSW1hZ2USCwoD",
            "dXJpGAEgASgJEg0KBXdpZHRoGAIgASgFEg4KBmhlaWdodBgDIAEoBRo0CgVB",
            "dWRpbxILCgN1cmkYASABKAkSEAoIZHVyYXRpb24YAiABKAUSDAoEdHlwZRgD",
            "IAEoCRplCgVWaWRlbxILCgN1cmkYASABKAkSEAoIZHVyYXRpb24YAiABKAUS",
            "DQoFd2lkdGgYAyABKAUSDgoGaGVpZ2h0GAQgASgFEhAKCGNvdmVyVXJpGAUg",
            "ASgJEgwKBHR5cGUYBiABKAkaGQoGQ3VzdG9tEg8KB3BheWxvYWQYASABKAka",
            "QgoGUGljVXJsEgsKA2NkbhgBIAEoCRILCgN1cmwYAiABKAkSEgoKdXJsUGF0",
            "dGVybhgDIAEoCRIKCgJpcBgEIAEoCRqDAwoIRW1vdGljb24SCgoCaWQYASAB",
            "KAkSEQoJcGFja2FnZUlkGAIgASgJEgwKBG5hbWUYAyABKAkSOAoEdHlwZRgE",
            "IAEoDjIqLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5FbW90aWNvbi5U",
            "eXBlEjMKBmJpZ1VybBgFIAMoCzIjLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVz",
            "c2FnZS5QaWNVcmwSDQoFd2lkdGgYBiABKAUSDgoGaGVpZ2h0GAcgASgFEkAK",
            "DGVtb3RpY29uQ09kZRgIIAMoCzIqLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVz",
            "c2FnZS5FbW90aWNvbi5Db2RlGiYKBENvZGUSEAoIbGFuZ3VhZ2UYASABKAkS",
            "DAoEY29kZRgCIAMoCSJSCgRUeXBlEgsKB1VOS05PV04QABIJCgVCQVNJQxAB",
            "EgkKBUlNQUdFEAISBwoDR0lGEAMSEgoOU1BFQ0lBTF9FRkZFQ1QQBBIKCgZT",
            "Q1JJUFQQBRo9CgRGaWxlEgsKA3VyaRgBIAEoCRIMCgRuYW1lGAIgASgJEgsK",
            "A2V4dBgDIAEoCRINCgVleHRyYRgEIAEoCRrJAQoJUmVmZXJlbmNlEjMKCW9y",
            "aWdpbk1zZxgBIAEoCzIgLkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLk1lc3Nh",
            "Z2USTQoMcmVmZXJlbmNlTXNnGAIgASgLMjcuQWNGdW5EYW5tdS5JbS5DbG91",
            "ZC5NZXNzYWdlLlJlZmVyZW5jZS5SZWZlcmVuY2VNZXNzYWdlGjgKEFJlZmVy",
            "ZW5jZU1lc3NhZ2USEwoLY29udGVudFR5cGUYASABKAUSDwoHY29udGVudBgC",
            "IAEoDBpKChVGb3J3YXJkTWVzc2FnZUNvbnRlbnQSMQoHbWVzc2FnZRgBIAMo",
            "CzIgLkFjRnVuRGFubXUuSW0uSW1NZXNzYWdlLk1lc3NhZ2UaTQoVTm90aWNl",
            "UGxhY2Vob2xkZXJNZXRhEhAKCHRhcmdldElkGAEgASgJEhIKCnN0YXJ0SW5k",
            "ZXgYAiABKAUSDgoGbGVuZ3RoGAMgASgFGqMBChBJbWNOb3RpY2VNZXNzYWdl",
            "EgwKBHRleHQYASABKAkSUQoVbm90aWNlUGxhY2Vob2xkZXJNZXRhGAIgAygL",
            "MjIuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLk5vdGljZVBsYWNlaG9s",
            "ZGVyTWV0YRIWCg5ub3RpY2VNZXRhVHlwZRgDIAEoBRIWCg5ub3RpY2VNZXRh",
            "SW5mbxgEIAEoDBqKAQokQ29uZmlybUludml0ZUludG9Hcm91cE5vdGljZU1l",
            "dGFJbmZvEhEKCXJlcXVlc3RJZBgBIAEoAxIPCgdncm91cElkGAIgASgJEj4K",
            "BnN0YXR1cxgDIAEoDjIuLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5K",
            "b2luUmVxdWVzdFN0YXR1cxqIAQoiQ29uZmlybUpvaW5JbnRvR3JvdXBOb3Rp",
            "Y2VNZXRhSW5mbxIRCglyZXF1ZXN0SWQYASABKAMSDwoHZ3JvdXBJZBgCIAEo",
            "CRI+CgZzdGF0dXMYAyABKA4yLi5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3Nh",
            "Z2UuSm9pblJlcXVlc3RTdGF0dXMaQAoSR3JvdXBDcmVhdGVSZXF1ZXN0EioK",
            "B21lbWJlcnMYASADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXIamwEK",
            "Ekdyb3VwQ3JlYXRlUmVwb25zZRIPCgdncm91cElkGAEgASgJEjkKCWdyb3Vw",
            "SW5mbxgCIAEoCzImLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91",
            "cEluZm8SOQoHbWVtYmVycxgDIAMoCzIoLkFjRnVuRGFubXUuSW0uQ2xvdWQu",
            "TWVzc2FnZS5Hcm91cE1lbWJlcholChJHcm91cERlbGV0ZVJlcXVlc3QSDwoH",
            "Z3JvdXBJZBgBIAEoCRoVChNHcm91cERlbGV0ZVJlc3BvbnNlGmYKEkdyb3Vw",
            "SW52aXRlUmVxdWVzdBIPCgdncm91cElkGAEgASgJEioKB21lbWJlcnMYAiAD",
            "KAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXISEwoLZGVzY0NvbnRlbnQY",
            "AyABKAkatgEKE0dyb3VwSW52aWRlUmVzcG9uc2USDwoHZ3JvdXBJZBgBIAEo",
            "CRJTCgxpbnZpdGVTdGF0dXMYAiABKA4yPS5BY0Z1bkRhbm11LkltLkNsb3Vk",
            "Lk1lc3NhZ2UuR3JvdXBJbnZpZGVSZXNwb25zZS5JbnZpdGVTdGF0dXMiOQoM",
            "SW52aXRlU3RhdHVzEhIKDlVOS05PV05fU1RBVFVTEAASCAoEU1VDQxABEgsK",
            "B1BFTkRJTkcQAhqiAQoQR3JvdXBKb2luUmVxdWVzdBIPCgdncm91cElkGAEg",
            "ASgJEioKB2ludml0ZXIYAiABKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVz",
            "ZXISEwoLZGVzY0NvbnRlbnQYAyABKAkSPAoIZmluZFR5cGUYBCABKA4yKi5B",
            "Y0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBGaW5kVHlwZRqbAQoR",
            "R3JvdXBKb2luUmVzcG9uc2USTQoKam9pblN0YXR1cxgBIAEoDjI5LkFjRnVu",
            "RGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91cEpvaW5SZXNwb25zZS5Kb2lu",
            "U3RhdHVzIjcKCkpvaW5TdGF0dXMSEgoOVU5LTk9XTl9TVEFUVVMQABIICgRT",
            "VUNDEAESCwoHUEVORElORxACGukBChpHcm91cEpvaW5SZXF1ZXN0QWNrUmVx",
            "dWVzdBINCgVyZXFJZBgBIAEoAxIPCgdncm91cElkGAIgASgJEmIKEGdyb3Vw",
            "Sm9pbkFja1R5cGUYAyABKA4ySC5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3Nh",
            "Z2UuR3JvdXBKb2luUmVxdWVzdEFja1JlcXVlc3QuR3JvdXBKb2luQWNrVHlw",
            "ZSJHChBHcm91cEpvaW5BY2tUeXBlEhAKDFVOS05PV05fVFlQRRAAEgkKBUFH",
            "UkVFEAESCgoGUkVGVVNFEAISCgoGSUdOT1JFEAMaHQobR3JvdXBKb2luUmVx",
            "dWVzdEFja1Jlc3BvbnNlGj0KGkdyb3VwSm9pblJlcXVlc3RHZXRSZXF1ZXN0",
            "Eg4KBnJlcVNlcRgBIAEoAxIPCgdncm91cElkGAIgASgJGpkCChtHcm91cEpv",
            "aW5SZXF1ZXN0R2V0UmVzcG9uc2USDwoHZ3JvdXBJZBgBIAEoCRIqCgdpbnZp",
            "dGVyGAIgASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEisKCGludml0",
            "ZWVzGAMgAygLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEjsKB2ZpbmRX",
            "YXkYBCABKA4yKi5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBG",
            "aW5kVHlwZRITCgtkZXNjQ29udGVudBgFIAEoCRI+CgZzdGF0dXMYBiABKA4y",
            "Li5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuSm9pblJlcXVlc3RTdGF0",
            "dXMaQAodR3JvdXBKb2luUmVxdWVzdENhbmNlbFJlcXVlc3QSDgoGcmVxU2Vx",
            "GAEgASgDEg8KB2dyb3VwSWQYAiABKAkanAIKHkdyb3VwSm9pblJlcXVlc3RD",
            "YW5jZWxSZXNwb3NuZRIPCgdncm91cElkGAEgASgJEioKB2ludml0ZXIYAiAB",
            "KAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXISKwoIaW52aXRlZXMYAyAD",
            "KAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXISOwoHZmluZFdheRgEIAEo",
            "DjIqLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91cEZpbmRUeXBl",
            "EhMKC2Rlc2NDb250ZW50GAUgASgJEj4KBnN0YXR1cxgGIAEoDjIuLkFjRnVu",
            "RGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Kb2luUmVxdWVzdFN0YXR1cxojChBH",
            "cm91cFF1aXRSZXF1ZXN0Eg8KB2dyb3VwSWQYASABKAkaJAoRR3JvdXBRdWl0",
            "UmVzcG9uc2USDwoHZ3JvdXBJZBgBIAEoCRpOChBHcm91cEtpY2tSZXF1ZXN0",
            "Eg8KB2dyb3VwSWQYASABKAkSKQoGdGFyZ2V0GAIgAygLMhkuQWNGdW5EYW5t",
            "dS5JbS5CYXNpYy5Vc2VyGiQKEUdyb3VwS2lja1Jlc3BvbnNlEg8KB2dyb3Vw",
            "SWQYASABKAkakwIKE0dyb3VwU2V0dGluZ1JlcXVlc3QSDwoHZ3JvdXBJZBgB",
            "IAEoCRJBCgZyZW5hbWUYAiABKAsyLy5BY0Z1bkRhbm11LkltLkNsb3VkLk1l",
            "c3NhZ2UuR3JvdXBTZXR0aW5nUmVuYW1lSAASPQoEZGVzYxgDIAEoCzItLkFj",
            "RnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91cFNldHRpbmdEZXNjSAAS",
            "WQoSam9pbk5lZWRQZXJtaXNzaW9uGAQgASgLMjsuQWNGdW5EYW5tdS5JbS5D",
            "bG91ZC5NZXNzYWdlLkdyb3VwU2V0dGluZ0pvaW5OZWVkUGVybWlzc2lvbkgA",
            "Qg4KDEdyb3VwU2V0dGluZxonChJHcm91cFNldHRpbmdSZW5hbWUSEQoJZ3Jv",
            "dXBOYW1lGAEgASgJGiAKEEdyb3VwU2V0dGluZ0Rlc2MSDAoEZGVzYxgBIAEo",
            "CRpxCh5Hcm91cFNldHRpbmdKb2luTmVlZFBlcm1pc3Npb24STwoSam9pbk5l",
            "ZWRQZXJtaXNzaW9uGAEgASgOMjMuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNz",
            "YWdlLkpvaW5OZWVkUGVybWlzc2lvblR5cGUaFgoUR3JvdXBTZXR0aW5nUmVz",
            "cG9uc2Ua0QEKGUdyb3VwTWVtYmVyU2V0dGluZ1JlcXVlc3QSDwoHZ3JvdXBJ",
            "ZBgBIAEoCRJDCgtzZXROaWNrbmFtZRgCIAEoCzIsLkFjRnVuRGFubXUuSW0u",
            "Q2xvdWQuTWVzc2FnZS5TZXRVc2VyTmlja25hbWVIABJPChFzZXRBbnRpRGlz",
            "dHVyYmluZxgDIAEoCzIyLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5T",
            "ZXRVc2VyQW50aURpc3R1cmJpbmdIAEINCgtVc2VyU2V0dGluZxojCg9TZXRV",
            "c2VyTmlja25hbWUSEAoIbmlja25hbWUYASABKAkaLwoVU2V0VXNlckFudGlE",
            "aXN0dXJiaW5nEhYKDmFudGlEaXN0dXJiaW5nGAEgASgIGhwKGkdyb3VwTWVt",
            "YmVyU2V0dGluZ1Jlc3BvbnNlGmEKGUdyb3VwTWVtYmVyTGlzdEdldFJlcXVl",
            "c3QSDwoHZ3JvdXBJZBgBIAEoCRIzCgpzeW5jQ29va2llGAIgASgLMh8uQWNG",
            "dW5EYW5tdS5JbS5CYXNpYy5TeW5jQ29va2llGowBChpHcm91cE1lbWJlckxp",
            "c3RHZXRSZXNwb25zZRI5CgdtZW1iZXJzGAEgAygLMiguQWNGdW5EYW5tdS5J",
            "bS5DbG91ZC5NZXNzYWdlLkdyb3VwTWVtYmVyEjMKCnN5bmNDb29raWUYAiAB",
            "KAsyHy5BY0Z1bkRhbm11LkltLkJhc2ljLlN5bmNDb29raWUaUQoVR3JvdXBN",
            "ZW1iZXJHZXRSZXF1ZXN0Eg8KB2dyb3VwSWQYASABKAkSJwoEdXNlchgCIAEo",
            "CzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchpSChZHcm91cE1lbWJlckdl",
            "dFJlc3BvbnNlEjgKBm1lbWJlchgBIAEoCzIoLkFjRnVuRGFubXUuSW0uQ2xv",
            "dWQuTWVzc2FnZS5Hcm91cE1lbWJlchpLChRVc2VyR3JvdXBMaXN0UmVxdWVz",
            "dBIzCgpzeW5jQ29va2llGAIgASgLMh8uQWNGdW5EYW5tdS5JbS5CYXNpYy5T",
            "eW5jQ29va2llGo8BChVVc2VyR3JvdXBMaXN0UmVzcG9uc2USQQoNdXNlckdy",
            "b3VwSW5mbxgBIAMoCzIqLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5V",
            "c2VyR3JvdXBJbmZvEjMKCnN5bmNDb29raWUYAiABKAsyHy5BY0Z1bkRhbm11",
            "LkltLkJhc2ljLlN5bmNDb29raWUaNgoPVXNlckdyb3VwUmVjb3JkEg8KB2dy",
            "b3VwSWQYASABKAkSEgoKdXBkYXRlVGltZRgCIAEoAxomChNVc2VyR3JvdXBH",
            "ZXRSZXF1ZXN0Eg8KB2dyb3VwSWQYASADKAkaWQoUVXNlckdyb3VwR2V0UmVz",
            "cG9uc2USQQoNdXNlckdyb3VwSW5mbxgBIAMoCzIqLkFjRnVuRGFubXUuSW0u",
            "Q2xvdWQuTWVzc2FnZS5Vc2VyR3JvdXBJbmZvGokBCg1Vc2VyR3JvdXBJbmZv",
            "EjkKCWdyb3VwSW5mbxgBIAEoCzImLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVz",
            "c2FnZS5Hcm91cEluZm8SPQoLZ3JvdXBNZW1iZXIYAiABKAsyKC5BY0Z1bkRh",
            "bm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBNZW1iZXIanwQKC0dyb3VwTWVt",
            "YmVyEicKBHVzZXIYASABKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXIS",
            "EAoIbmlja25hbWUYAiABKAkSFgoOYW50aURpc3R1cmJpbmcYAyABKAgSSgoG",
            "c3RhdHVzGAQgASgOMjouQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkdy",
            "b3VwTWVtYmVyLkdyb3VwTWVtYmVyU3RhdHVzEhEKCWludml0ZXJJZBgFIAEo",
            "AxIQCghqb2luVGltZRgGIAEoAxISCgpjcmVhdGVUaW1lGAcgASgDEhIKCnVw",
            "ZGF0ZVRpbWUYCCABKAMSRgoEcm9sZRgJIAEoDjI4LkFjRnVuRGFubXUuSW0u",
            "Q2xvdWQuTWVzc2FnZS5Hcm91cE1lbWJlci5Hcm91cE1lbWJlclJvbGUSPAoI",
            "ZmluZFR5cGUYCiABKA4yKi5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2Uu",
            "R3JvdXBGaW5kVHlwZSJiChFHcm91cE1lbWJlclN0YXR1cxIZChVVTktOT1dO",
            "X01FTUJFUl9TVEFUVVMQABIKCgZOT1JNQUwQARILCgdRVUlUVEVEEAISCgoG",
            "S0lDS0VEEAMSDQoJRElTTUlTU0VEEAQiOgoPR3JvdXBNZW1iZXJSb2xlEhAK",
            "DFVOS05PV05fUk9MRRAAEgoKBkNPTU1PThABEgkKBUFETUlOEAIanAEKCUdy",
            "b3VwSW5mbxI+CgliYXNpY0luZm8YASABKAsyKy5BY0Z1bkRhbm11LkltLkNs",
            "b3VkLk1lc3NhZ2UuR3JvdXBCYXNpY0luZm8STwoUZ3JvdXBNZW1iZXJCcmll",
            "ZkluZm8YAiABKAsyMS5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3Jv",
            "dXBNZW1iZXJCcmllZkluZm8aqwMKDkdyb3VwQmFzaWNJbmZvEg8KB2dyb3Vw",
            "SWQYASABKAkSEQoJZ3JvdXBOYW1lGAIgASgJEigKBWFkbWluGAMgASgLMhku",
            "QWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEj0KC2dyb3VwU3RhdHVzGAQgASgO",
            "MiguQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkdyb3VwU3RhdHVzEhMK",
            "C2Rlc2NyaXB0aW9uGAUgASgJEk8KEmpvaW5OZWVkUGVybWlzc2lvbhgGIAEo",
            "DjIzLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Kb2luTmVlZFBlcm1p",
            "c3Npb25UeXBlEhIKCmNyZWF0ZVRpbWUYByABKAMSEgoKdXBkYXRlVGltZRgI",
            "IAEoAxI5Cglncm91cFR5cGUYCSABKA4yJi5BY0Z1bkRhbm11LkltLkNsb3Vk",
            "Lk1lc3NhZ2UuR3JvdXBUeXBlEkMKDmZvcmJpZGRlblN0YXRlGAogASgOMisu",
            "QWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkZvcmJpZGRlblN0YXRlGnIK",
            "FEdyb3VwTWVtYmVyQnJpZWZJbmZvEhMKC21lbWJlckNvdW50GAEgASgFEi0K",
            "CnRvcE1lbWJlcnMYAiADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXIS",
            "FgoObGFzdFVwZGF0ZVRpbWUYAyABKAMadgoVSW1jUGFzc1Rocm91Z2hSZXF1",
            "ZXN0EjcKCmNoYXRUYXJnZXQYASABKAsyIy5BY0Z1bkRhbm11LkltLkltTWVz",
            "c2FnZS5DaGF0VGFyZ2V0Eg8KB2NvbnRlbnQYAiABKAwSEwoLY29udGVudFR5",
            "cGUYAyABKAUaGAoWSW1jUGFzc1Rocm91Z2hSZXNwb25zZRqgAQoSSW1jUGFz",
            "c1Rocm91Z2hQdXNoEjcKCmNoYXRUYXJnZXQYASABKAsyIy5BY0Z1bkRhbm11",
            "LkltLkltTWVzc2FnZS5DaGF0VGFyZ2V0EisKCGZyb21Vc2VyGAIgASgLMhku",
            "QWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEg8KB2NvbnRlbnQYAyABKAwSEwoL",
            "Y29udGVudFR5cGUYBCABKAUaKwoQSW5wdXR0aW5nQ29udGVudBIXCg9kaXNw",
            "bGF5SW50ZXJ2YWwYASABKAUi5QEKDkltY01lc3NhZ2VUeXBlEggKBFRFWFQQ",
            "ABIJCgVJTUFHRRABEgoKBkNVU1RPTRACEgkKBUFVRElPEAMSCQoFVklERU8Q",
            "BBIMCghFTU9USUNPThAFEggKBEZJTEUQBhIKCgZOT1RJQ0UQChIMCghSRUNB",
            "TExFRBALEg0KCVJFRkVSRU5DRRAMEhEKDU1FUkdFX0ZPUldBUkQQDRIQCgxQ",
            "TEFDRV9IT0xERVIQZBILCgdSRVBMQUNFEGUSFwoSSU5WSVNJQkxFX1RZUEVf",
            "TUFTEMcBEhAKC1JJQ0hfTk9USUNFEMgBIpEBCg5Ob3RpY2VNZXRhVHlwZRIc",
            "ChhVTktOT1dOX05PVElDRV9NRVRBX1RZUEUQABIbChdDT01NT05fTk9USUNF",
            "X01FVEFfVFlQRRABEiIKHkNPTkZJUk1fSU5WSVRFX0lOVE9fR1JPVVBfTUVU",
            "QRACEiAKHENPTkZJUk1fSk9JTl9JTlRPX0dST1VQX01FVEEQAyJ6Cg1Hcm91",
            "cEZpbmRUeXBlEg4KCkJZX1VOS05PV04QABIJCgVCWV9JRBABEgsKB0JZX05B",
            "TUUQAhIOCgpCWV9RUl9DT0RFEAMSCwoHQllfQ0FSRBAEEhEKDUJZX0lOVklU",
            "QVRJT04QBRIRCg1CWV9TSEFSRV9MSU5LEAYiUQoRSm9pblJlcXVlc3RTdGF0",
            "dXMSEgoOVU5LTk9XTl9TVEFUVVMQABINCglSRVFVRVNURUQQARIMCghBUFBS",
            "T1ZFRBACEgsKB1JFRlVTRUQQAyJUChZKb2luTmVlZFBlcm1pc3Npb25UeXBl",
            "EiUKIVVOS05PV05fSk9JTl9ORUVEX1BFUk1JU1NJT05fVFlQRRAAEggKBE5P",
            "TkUQARIJCgVBRE1JThACIj4KC0dyb3VwU3RhdHVzEhcKE1VOS05PV19HUk9V",
            "UF9TVEFUVVMQABIJCgVWQUxJRBABEgsKB0lOVkFMSUQQAiI7CglHcm91cFR5",
            "cGUSFQoRVU5LTk9XX0dST1VQX1RZUEUQABILCgdQUklWQVRFEAMSCgoGUFVC",
            "TElDEAQiUwoORm9yYmlkZGVuU3RhdGUSGwoXVU5LTk9XTl9GT1JCSURERU5f",
            "U1RBVEUQABIQCgxVTl9GT1JCSURERU4QARISCg5GT1JCSURfTUVTU0FHRRAC",
            "IjEKD1Bhc3NUaHJvdWdoVHlwZRIPCgtJTlZBTElEX1BUVBAAEg0KCUlOUFVU",
            "VElORxABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic), global::AcFunDanmu.Im.Basic.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.SharePlatform), typeof(global::AcFunDanmu.Im.Basic.Types.ErrorCode) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader), global::AcFunDanmu.Im.Basic.Types.PacketHeader.Parser, new[]{ "AppId", "Uid", "InstanceId", "Flags", "EncodingType", "DecodedPayloadLen", "EncryptionMode", "TokenInfo", "SeqId", "Features" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Flags), typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType), typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode), typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.User), global::AcFunDanmu.Im.Basic.Types.User.Parser, new[]{ "AppId", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UserInstance), global::AcFunDanmu.Im.Basic.Types.UserInstance.Parser, new[]{ "User", "InstanceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UpstreamPayload), global::AcFunDanmu.Im.Basic.Types.UpstreamPayload.Parser, new[]{ "Command", "SeqId", "RetryCount", "PayloadData", "UserInstance", "ErrorCode", "SettingInfo", "RequestBasicInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.DownstreamPayload), global::AcFunDanmu.Im.Basic.Types.DownstreamPayload.Parser, new[]{ "Command", "SeqId", "ErrorCode", "PayloadData", "ErrorMsg", "ErrorData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PingRequest), global::AcFunDanmu.Im.Basic.Types.PingRequest.Parser, new[]{ "PingType", "PingRound" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PingResponse), global::AcFunDanmu.Im.Basic.Types.PingResponse.Parser, new[]{ "ServerTimestamp", "ClientIp", "RedirectIp", "RedirectPort" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.RegisterRequest), global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Parser, new[]{ "AppInfo", "DeviceInfo", "EnvInfo", "PresenceStatus", "AppActiveStatus", "AppCustomStatus", "PushServiceToken", "InstanceId", "PushServiceTokenList", "KeepaliveIntervalSec" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus), typeof(global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.RegisterResponse), global::AcFunDanmu.Im.Basic.Types.RegisterResponse.Parser, new[]{ "AccessPointsConfig", "SessKey", "InstanceId", "SdkOption" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig), global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig.Parser, new[]{ "OptimalAps", "BackupAps", "AvailablePorts", "ForeceLastConnectedAp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UnregisterRequest), global::AcFunDanmu.Im.Basic.Types.UnregisterRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UnregisterResponse), global::AcFunDanmu.Im.Basic.Types.UnregisterResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.KeepAliveRequest), global::AcFunDanmu.Im.Basic.Types.KeepAliveRequest.Parser, new[]{ "PresenceStatus", "AppActiveStatus", "PushServiceToken", "PushServiceTokenList", "KeepaliveIntervalSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.KeepAliveResponse), global::AcFunDanmu.Im.Basic.Types.KeepAliveResponse.Parser, new[]{ "AccessPointsConfig", "ServerMsec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.AccessPoint), global::AcFunDanmu.Im.Basic.Types.AccessPoint.Parser, new[]{ "AddressType", "Port", "IpV4", "IpV6", "Domain" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.TokenInfo), global::AcFunDanmu.Im.Basic.Types.TokenInfo.Parser, new[]{ "TokenType", "Token" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PushServiceToken), global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Parser, new[]{ "PushType", "Token", "IsPassThrough" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.SettingInfo), global::AcFunDanmu.Im.Basic.Types.SettingInfo.Parser, new[]{ "Locale", "Timezone" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.AppInfo), global::AcFunDanmu.Im.Basic.Types.AppInfo.Parser, new[]{ "AppName", "AppVersion", "AppChannel", "SdkVersion", "ExtensionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.DeviceInfo), global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Parser, new[]{ "PlatformType", "OsVersion", "DeviceModel", "ImeiMd5", "DeviceId", "SoftDid", "KwaiDid", "Manufacturer" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.EnvInfo), global::AcFunDanmu.Im.Basic.Types.EnvInfo.Parser, new[]{ "NetworkType", "AppName" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo), global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo.Parser, new[]{ "ClientType", "DeviceId", "ClientIp", "AppVersion", "Channel", "AppInfo", "DeviceInfo", "EnvInfo", "ClientPort", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.SyncCookie), global::AcFunDanmu.Im.Basic.Types.SyncCookie.Parser, new[]{ "SyncOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting), global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting.Parser, new[]{ "FormatKey", "FormatParam" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.SdkOption), global::AcFunDanmu.Im.Basic.Types.SdkOption.Parser, new[]{ "ReportIntervalSeconds", "ReportSecurity", "Lz4CompressionThresholdBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.LocaleMessage), global::AcFunDanmu.Im.Basic.Types.LocaleMessage.Parser, new[]{ "Locale", "ErrorMessage" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.ErrorMessage), global::AcFunDanmu.Im.Basic.Types.ErrorMessage.Parser, new[]{ "LocaleMessages" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage), global::AcFunDanmu.Im.ImMessage.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageType), typeof(global::AcFunDanmu.Im.ImMessage.Types.KsUserRelationShip), typeof(global::AcFunDanmu.Im.ImMessage.Types.AccountType), typeof(global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType), typeof(global::AcFunDanmu.Im.ImMessage.Types.SystemUser) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.Message), global::AcFunDanmu.Im.ImMessage.Types.Message.Parser, new[]{ "SeqId", "ClientSeqId", "TimestampMs", "FromUser", "TargetId", "ToUser", "Title", "ContentType", "Content", "BuckupTips", "Receivers", "NotContentUnread", "SessionPriority", "SessionCategoryId", "SessionAccountType", "NotAutoCreateSession", "UserRelationship", "StrTargetId", "ExcludeReceivers", "MarkDelte", "Reminder", "Extra", "ReceiptRequired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SendMessageResponse), global::AcFunDanmu.Im.ImMessage.Types.SendMessageResponse.Parser, new[]{ "ClientSeqId", "MessageTimestamp", "SeqId", "SessionAccountType", "SessionPriority", "SessionCategoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.PullOldRequest), global::AcFunDanmu.Im.ImMessage.Types.PullOldRequest.Parser, new[]{ "Target", "MinSeq", "MaxSeq", "Count", "TargetId", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.PullOldResponse), global::AcFunDanmu.Im.ImMessage.Types.PullOldResponse.Parser, new[]{ "Messages", "ServerTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.PullNewRequest), global::AcFunDanmu.Im.ImMessage.Types.PullNewRequest.Parser, new[]{ "Target", "MinSeq", "Count", "TargetId", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.PullNewResponse), global::AcFunDanmu.Im.ImMessage.Types.PullNewResponse.Parser, new[]{ "Messages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionListRequest), global::AcFunDanmu.Im.ImMessage.Types.SessionListRequest.Parser, new[]{ "SyncCookie", "CategoryId", "LocalDataStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.ChatSession), global::AcFunDanmu.Im.ImMessage.Types.ChatSession.Parser, new[]{ "Target", "MaxSeqId", "ReadSeqId", "UnreadMsgCount", "LatestMessage", "ChatTargetType", "TargetId", "ActiveTime", "Priority", "CategoryId", "Cursor", "AccountType", "AggregateSession", "JumpCategoryId", "ExpireAt", "EffectiveFrom", "StrTargetId", "RemindBody", "TargetReadSeqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.Reminder), global::AcFunDanmu.Im.ImMessage.Types.Reminder.Parser, new[]{ "OriginText", "RemindBody" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.RemindBody), global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Parser, new[]{ "RemindType", "SeqId", "TargetId", "UserName", "StartIndex", "Length" }, null, new[]{ typeof(global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.ChatTarget), global::AcFunDanmu.Im.ImMessage.Types.ChatTarget.Parser, new[]{ "TargetId", "TargetType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionListResponse), global::AcFunDanmu.Im.ImMessage.Types.SessionListResponse.Parser, new[]{ "SyncCookie", "Sessions", "NotFullFetch", "ServerTime", "ClearLocalData", "CategoryId", "ClientDataStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionPageListRequest), global::AcFunDanmu.Im.ImMessage.Types.SessionPageListRequest.Parser, new[]{ "Cursor", "Count", "CategoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionPageListResponse), global::AcFunDanmu.Im.ImMessage.Types.SessionPageListResponse.Parser, new[]{ "HasMore", "Sessions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionRemoveRequest), global::AcFunDanmu.Im.ImMessage.Types.SessionRemoveRequest.Parser, new[]{ "TargetId", "ChatTargetType", "CategoryId", "StrTargetId", "NotCleanAllMessages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionRemoveResponse), global::AcFunDanmu.Im.ImMessage.Types.SessionRemoveResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionCleanRequest), global::AcFunDanmu.Im.ImMessage.Types.SessionCleanRequest.Parser, new[]{ "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionCleanResponse), global::AcFunDanmu.Im.ImMessage.Types.SessionCleanResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageDeleteRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageDeleteRequest.Parser, new[]{ "TargetId", "ChatTargetType", "SeqId", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageDeleteResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageDeleteResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageCancelRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageCancelRequest.Parser, new[]{ "ChatTarget", "SeqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageCancelResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageCancelResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageClearRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageClearRequest.Parser, new[]{ "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageClearResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageClearResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.ReadSeqInfo), global::AcFunDanmu.Im.ImMessage.Types.ReadSeqInfo.Parser, new[]{ "ChatTarget", "ReadSeq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReadSeqRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageReadSeqRequest.Parser, new[]{ "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReadSeqResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageReadSeqResponse.Parser, new[]{ "ReadSeqInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReadPush), global::AcFunDanmu.Im.ImMessage.Types.MessageReadPush.Parser, new[]{ "TargetId", "ReadSeq", "ChatTargetType", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.AllUnreadCountRequest), global::AcFunDanmu.Im.ImMessage.Types.AllUnreadCountRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.AllUnreadCountResponse), global::AcFunDanmu.Im.ImMessage.Types.AllUnreadCountResponse.Parser, new[]{ "AllUnreadCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReadAllRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageReadAllRequest.Parser, new[]{ "SessionCategoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReadAllResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageReadAllResponse.Parser, new[]{ "ReadAllTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SesionStickyOnTopRequest), global::AcFunDanmu.Im.ImMessage.Types.SesionStickyOnTopRequest.Parser, new[]{ "ChatTarget", "StickyOnTop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionStickyOnTopResponse), global::AcFunDanmu.Im.ImMessage.Types.SessionStickyOnTopResponse.Parser, new[]{ "Session" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.SessionRaw), global::AcFunDanmu.Im.ImMessage.Types.SessionRaw.Parser, new[]{ "Raw" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageRecallRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageRecallRequest.Parser, new[]{ "ChatTarget", "SeqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageRecallResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageRecallResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptRequest.Parser, new[]{ "MessageReceiptInfo", "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptInfo), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptInfo.Parser, new[]{ "ReadSeq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptCountGetRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptCountGetRequest.Parser, new[]{ "SeqId", "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptCountGetResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptCountGetResponse.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus.Parser, new[]{ "ReadCount", "UnreadCount", "SeqId", "ServerTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptDetailGetRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptDetailGetRequest.Parser, new[]{ "SeqId", "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptDetailGetResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptDetailGetResponse.Parser, new[]{ "ReadUser", "UnreadUser" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageBatchSendRequest), global::AcFunDanmu.Im.ImMessage.Types.MessageBatchSendRequest.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.MessageBatchSendResponse), global::AcFunDanmu.Im.ImMessage.Types.MessageBatchSendResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment), global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment.Parser, new[]{ "MimeType", "Url", "Width", "Height", "LengthInBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment), global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment.Parser, new[]{ "MimeType", "Url", "Width", "Height", "LengthInBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.GifAttachment), global::AcFunDanmu.Im.ImMessage.Types.GifAttachment.Parser, new[]{ "MimeType", "Url", "Width", "Height", "ThumbaUrl", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.Attachment), global::AcFunDanmu.Im.ImMessage.Types.Attachment.Parser, new[]{ "ImageAttachment", "AudioAttachment" }, new[]{ "Attacmnent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.Attachments), global::AcFunDanmu.Im.ImMessage.Types.Attachments.Parser, new[]{ "Attachments_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.PlaceHolderMessage), global::AcFunDanmu.Im.ImMessage.Types.PlaceHolderMessage.Parser, new[]{ "MinSeq", "MaxSeq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.ImageTextMessage), global::AcFunDanmu.Im.ImMessage.Types.ImageTextMessage.Parser, new[]{ "Title", "Description", "ImageUrl", "ActionUrl", "Width", "AspectRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.RichTextMessage), global::AcFunDanmu.Im.ImMessage.Types.RichTextMessage.Parser, new[]{ "RichTextMessage_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.NoticeMessage), global::AcFunDanmu.Im.ImMessage.Types.NoticeMessage.Parser, new[]{ "RichTextNotice", "Msg", "I18NCopyWriting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage), global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Types.RichTextItem), global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Types.RichTextItem.Parser, new[]{ "Color", "Start", "Len", "ClickAction", "Underline" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud), global::AcFunDanmu.Im.Cloud.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel), global::AcFunDanmu.Im.Cloud.Types.Channel.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeRequest.Parser, new[]{ "ChannelId", "SetBarrier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeResponse), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelUnsubscribeRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelUnsubscribeRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetResposne), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetResposne.Parser, new[]{ "Subscriber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo.Parser, new[]{ "ChannelId", "SubscriberCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo.Parser, new[]{ "User", "Action", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetResponse), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetResponse.Parser, new[]{ "BasicInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatResponse), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatResponse.Parser, new[]{ "NotExistChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoNotify), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoNotify.Parser, new[]{ "UserActionInfo", "BasicInfo" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config), global::AcFunDanmu.Im.Cloud.Types.Config.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetRequest), global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetRequest.Parser, new[]{ "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetResponse), global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetResponse.Parser, new[]{ "Version", "ClientConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig), global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig.Parser, new[]{ "DetectionDomain", "DetectionInvervalSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig), global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig.Parser, new[]{ "FetchUserStatusInterval", "ChannelUserHeartbeatInterval", "NetworkQualityDetectionConfig", "InputtingTipDisplayInterval", "BatchSendMessageMaxCount", "ResourceUploadingDomain" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile), global::AcFunDanmu.Im.Cloud.Types.Profile.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus), global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Parser, new[]{ "User", "LastOfflineTime", "Status" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeRequest), global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeRequest.Parser, new[]{ "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeResponse), global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeResponse.Parser, new[]{ "UserOnlineStatus" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data), global::AcFunDanmu.Im.Cloud.Types.Data.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdateType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload.Parser, new[]{ "Type", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupInfoDataUpdate), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupInfoDataUpdate.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupMemberListUpdate), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupMemberListUpdate.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.YouBeKicked), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.YouBeKicked.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageRead), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageRead.Parser, new[]{ "StrTargetId", "ReadSeq", "ChatTargetType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageReceipt), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageReceipt.Parser, new[]{ "ChatTarget", "ReceiptStatus" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message), global::AcFunDanmu.Im.Cloud.Types.Message.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcMessageType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticeMetaType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.PassThroughType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcRecalledMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcRecalledMessage.Parser, new[]{ "OriginMsg", "NoticeMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcReplaceMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcReplaceMessage.Parser, new[]{ "ReplaceMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Text), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Text.Parser, new[]{ "Text_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Image), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Image.Parser, new[]{ "Uri", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Audio), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Audio.Parser, new[]{ "Uri", "Duration", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Video), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Video.Parser, new[]{ "Uri", "Duration", "Width", "Height", "CoverUri", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Custom), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Custom.Parser, new[]{ "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl), global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl.Parser, new[]{ "Cdn", "Url", "UrlPattern", "Ip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Parser, new[]{ "Id", "PackageId", "Name", "Type", "BigUrl", "Width", "Height", "EmoticonCOde" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code.Parser, new[]{ "Language", "Code_" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.File), global::AcFunDanmu.Im.Cloud.Types.Message.Types.File.Parser, new[]{ "Uri", "Name", "Ext", "Extra" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Parser, new[]{ "OriginMsg", "ReferenceMsg" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage.Parser, new[]{ "ContentType", "Content" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForwardMessageContent), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForwardMessageContent.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta), global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta.Parser, new[]{ "TargetId", "StartIndex", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage.Parser, new[]{ "Text", "NoticePlaceholderMeta", "NoticeMetaType", "NoticeMetaInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmInviteIntoGroupNoticeMetaInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmInviteIntoGroupNoticeMetaInfo.Parser, new[]{ "RequestId", "GroupId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmJoinIntoGroupNoticeMetaInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmJoinIntoGroupNoticeMetaInfo.Parser, new[]{ "RequestId", "GroupId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateRequest.Parser, new[]{ "Members" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateReponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateReponse.Parser, new[]{ "GroupId", "GroupInfo", "Members" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteRequest.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInviteRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInviteRequest.Parser, new[]{ "GroupId", "Members", "DescContent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Parser, new[]{ "GroupId", "InviteStatus" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequest.Parser, new[]{ "GroupId", "Inviter", "DescContent", "FindType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Parser, new[]{ "JoinStatus" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Parser, new[]{ "ReqId", "GroupId", "GroupJoinAckType" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetRequest.Parser, new[]{ "ReqSeq", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetResponse.Parser, new[]{ "GroupId", "Inviter", "Invitees", "FindWay", "DescContent", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelRequest.Parser, new[]{ "ReqSeq", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelResposne), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelResposne.Parser, new[]{ "GroupId", "Inviter", "Invitees", "FindWay", "DescContent", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitRequest.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitResponse.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickRequest.Parser, new[]{ "GroupId", "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickResponse.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRequest.Parser, new[]{ "GroupId", "Rename", "Desc", "JoinNeedPermission" }, new[]{ "GroupSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename.Parser, new[]{ "GroupName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc.Parser, new[]{ "Desc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission.Parser, new[]{ "JoinNeedPermission" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingRequest.Parser, new[]{ "GroupId", "SetNickname", "SetAntiDisturbing" }, new[]{ "UserSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname), global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname.Parser, new[]{ "Nickname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing), global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing.Parser, new[]{ "AntiDisturbing" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetRequest.Parser, new[]{ "GroupId", "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetResponse.Parser, new[]{ "Members", "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetRequest.Parser, new[]{ "GroupId", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetResponse.Parser, new[]{ "Member" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListRequest.Parser, new[]{ "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListResponse.Parser, new[]{ "UserGroupInfo", "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupRecord), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupRecord.Parser, new[]{ "GroupId", "UpdateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetRequest.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetResponse.Parser, new[]{ "UserGroupInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo.Parser, new[]{ "GroupInfo", "GroupMember" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Parser, new[]{ "User", "Nickname", "AntiDisturbing", "Status", "InviterId", "JoinTime", "CreateTime", "UpdateTime", "Role", "FindType" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo.Parser, new[]{ "BasicInfo", "GroupMemberBriefInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo.Parser, new[]{ "GroupId", "GroupName", "Admin", "GroupStatus", "Description", "JoinNeedPermission", "CreateTime", "UpdateTime", "GroupType", "ForbiddenState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo.Parser, new[]{ "MemberCount", "TopMembers", "LastUpdateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughRequest.Parser, new[]{ "ChatTarget", "Content", "ContentType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughPush), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughPush.Parser, new[]{ "ChatTarget", "FromUser", "Content", "ContentType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.InputtingContent), global::AcFunDanmu.Im.Cloud.Types.Message.Types.InputtingContent.Parser, new[]{ "DisplayInterval" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Basic : pb::IMessage<Basic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Basic> _parser = new pb::MessageParser<Basic>(() => new Basic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Basic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.ImReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basic(Basic other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basic Clone() {
      return new Basic(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Basic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Basic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Basic other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Basic message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SharePlatform {
        [pbr::OriginalName("kSharePlatformInvalid")] KSharePlatformInvalid = 0,
        [pbr::OriginalName("kSharePlatformWechat")] KSharePlatformWechat = 1,
        [pbr::OriginalName("kSharePlatformWechatMoments")] KSharePlatformWechatMoments = 2,
        [pbr::OriginalName("kSharePlatformQQ")] KSharePlatformQq = 3,
        [pbr::OriginalName("kSharePlatformQzone")] KSharePlatformQzone = 4,
        [pbr::OriginalName("kSharePlatformWeibo")] KSharePlatformWeibo = 5,
        [pbr::OriginalName("kSharePlatformKuaishou")] KSharePlatformKuaishou = 6,
        [pbr::OriginalName("kSharePlatformFacebook")] KSharePlatformFacebook = 7,
        [pbr::OriginalName("kSharePlatformTwitter")] KSharePlatformTwitter = 8,
        [pbr::OriginalName("kSharePlatformGoogle")] KSharePlatformGoogle = 9,
        [pbr::OriginalName("kSharePlatformKakao")] KSharePlatformKakao = 10,
        [pbr::OriginalName("kSharePlatformZalo")] KSharePlatformZalo = 11,
      }

      public enum ErrorCode {
        [pbr::OriginalName("SUCC")] Succ = 0,
        [pbr::OriginalName("BASIC_MIN")] BasicMin = 10000,
        [pbr::OriginalName("INTERNEL_ERROR")] InternelError = 10001,
        [pbr::OriginalName("SERVICE_UNAVAILABLE")] ServiceUnavailable = 10002,
        [pbr::OriginalName("SERVICE_TIMEOUT")] ServiceTimeout = 10003,
        [pbr::OriginalName("INVALID_TOKEN")] InvalidToken = 10004,
        [pbr::OriginalName("REG_ENCYRPT_WITHOUT_TOKEN")] RegEncyrptWithoutToken = 10005,
        [pbr::OriginalName("PARSE_PB_HDR_FAIL")] ParsePbHdrFail = 10006,
        [pbr::OriginalName("PARSE_PB_PLD_FAIL")] ParsePbPldFail = 10007,
        [pbr::OriginalName("PARSE_PB_FAIL")] ParsePbFail = 10008,
        [pbr::OriginalName("DECODED_LEN_FAIL")] DecodedLenFail = 10009,
        [pbr::OriginalName("INVALID_KEY")] InvalidKey = 10010,
        [pbr::OriginalName("ENCRYPT_FAIL")] EncryptFail = 10011,
        [pbr::OriginalName("DECRYPT_FAIL")] DecryptFail = 10012,
        [pbr::OriginalName("INVALID_TAG")] InvalidTag = 10013,
        [pbr::OriginalName("INVALID_VER")] InvalidVer = 10014,
        [pbr::OriginalName("INVALID_COMPRESS_TYPE")] InvalidCompressType = 10016,
        [pbr::OriginalName("INVALID_ENCRYPT_TYPE")] InvalidEncryptType = 10017,
        [pbr::OriginalName("NOT_REGISTER")] NotRegister = 10018,
        [pbr::OriginalName("USER_NOT_ONLINE")] UserNotOnline = 10019,
        [pbr::OriginalName("INVALID_COMMAND")] InvalidCommand = 10020,
        [pbr::OriginalName("PUSH_UNREGISTER_ERROR")] PushUnregisterError = 10021,
        [pbr::OriginalName("INVALID_SID")] InvalidSid = 10022,
        [pbr::OriginalName("INVALID_INSTANCE_ID")] InvalidInstanceId = 10023,
        [pbr::OriginalName("CLIENT_LOCALE_NOT_MATCH")] ClientLocaleNotMatch = 10024,
        [pbr::OriginalName("INVALID_TOKEN_PASSWORD_CHANGED")] InvalidTokenPasswordChanged = 10025,
        [pbr::OriginalName("INVALID_TOKEN_TOKEN_EXPIRED")] InvalidTokenTokenExpired = 10026,
        [pbr::OriginalName("INVALID_TOKEN_TOKEN_VALUE_ERROR")] InvalidTokenTokenValueError = 10027,
        [pbr::OriginalName("INVALID_TOKEN_LOGIN_ON_OTHER_DEVICE")] InvalidTokenLoginOnOtherDevice = 10028,
        [pbr::OriginalName("FORCE_RECONNECT")] ForceReconnect = 10029,
        [pbr::OriginalName("CLIENT_TIMEOUT")] ClientTimeout = 10030,
        [pbr::OriginalName("INVALID_ARGUMENT")] InvalidArgument = 10031,
        [pbr::OriginalName("INVALID_FORMAT_TOKEN")] InvalidFormatToken = 10032,
        [pbr::OriginalName("EMPTY_PAYLOAD")] EmptyPayload = 10033,
        [pbr::OriginalName("COMPRESS_FAIL")] CompressFail = 10034,
        [pbr::OriginalName("DECOMPRESS_FAIL")] DecompressFail = 10035,
        [pbr::OriginalName("OUT_OF_ORDER")] OutOfOrder = 10036,
        [pbr::OriginalName("MESSAGE_MIN")] MessageMin = 20000,
        [pbr::OriginalName("ILLEGAL_PARAMETER")] IllegalParameter = 20001,
        [pbr::OriginalName("SYSTEM_BUSY")] SystemBusy = 20002,
        [pbr::OriginalName("ILLEGAL_USER")] IllegalUser = 20003,
        [pbr::OriginalName("PARAMETER_LEN_TOO_LONG")] ParameterLenTooLong = 20004,
        [pbr::OriginalName("DATABASE_ERROR_MYSQL")] DatabaseErrorMysql = 20005,
        [pbr::OriginalName("DATABASE_ERROR_HBASE")] DatabaseErrorHbase = 20006,
        [pbr::OriginalName("DATABASE_ERROR_REDIS")] DatabaseErrorRedis = 20007,
        [pbr::OriginalName("USER_REGISTER_LIMIT_IN_ALPHA")] UserRegisterLimitInAlpha = 20008,
        [pbr::OriginalName("FLOW_CONTROL")] FlowControl = 20009,
        [pbr::OriginalName("LOCKED_USER_ACCOUNT_NEED_UPDATE_VERSION")] LockedUserAccountNeedUpdateVersion = 20010,
        [pbr::OriginalName("USER_NOT_REGISTER")] UserNotRegister = 21003,
        [pbr::OriginalName("USER_NOT_FOUND")] UserNotFound = 21004,
        [pbr::OriginalName("FRIEND_ADD_NEED_VERIFY")] FriendAddNeedVerify = 21005,
        [pbr::OriginalName("NO_FRIEND_REQUEST")] NoFriendRequest = 21006,
        [pbr::OriginalName("TOO_MANY_FRIENDS")] TooManyFriends = 21007,
        [pbr::OriginalName("FRIEND_REQUEST_TOO_FREQUENTLY")] FriendRequestTooFrequently = 21008,
        [pbr::OriginalName("CHAT_NEED_TO_BE_FRIEND")] ChatNeedToBeFriend = 21009,
        [pbr::OriginalName("ADD_FRIEND_BLOCKED")] AddFriendBlocked = 21010,
        [pbr::OriginalName("CANNOT_ADD_FRIEND_TO_SELF")] CannotAddFriendToSelf = 21011,
        [pbr::OriginalName("CANNOT_FOLLOW_SELF")] CannotFollowSelf = 21012,
        [pbr::OriginalName("ADD_FOLLOW_BLOCKED")] AddFollowBlocked = 21013,
        [pbr::OriginalName("TARGET_FRIEND_TOO_MANY")] TargetFriendTooMany = 21014,
        [pbr::OriginalName("TOO_MANY_IDOLS")] TooManyIdols = 21015,
        [pbr::OriginalName("FRIEND_FOLLOW_OVER_LIMIT")] FriendFollowOverLimit = 21016,
        [pbr::OriginalName("FRIEND_FOLLOW_SPAM")] FriendFollowSpam = 21017,
        [pbr::OriginalName("CLIENT_CONFIG_READ_ERROR")] ClientConfigReadError = 22000,
        [pbr::OriginalName("CLIENT_CONFIG_NOT_EXISTS_ERROR")] ClientConfigNotExistsError = 22001,
        [pbr::OriginalName("CONTENT_HIT_SENSITIVE_WORDS")] ContentHitSensitiveWords = 23000,
        [pbr::OriginalName("MORE_THAN_MAX_LENGTH")] MoreThanMaxLength = 24000,
        [pbr::OriginalName("MSG_TEXT_MAX_LENGTH")] MsgTextMaxLength = 24001,
        [pbr::OriginalName("MSG_CANCEL_OVERDUE")] MsgCancelOverdue = 24002,
        [pbr::OriginalName("CANNOT_RECALL_NON_SELF_MSG")] CannotRecallNonSelfMsg = 24003,
        [pbr::OriginalName("RECALL_NOT_EXIST_MSG")] RecallNotExistMsg = 24004,
        [pbr::OriginalName("REF_MSG_NESTING_DEPTH_REACH_LIMIT")] RefMsgNestingDepthReachLimit = 24005,
        [pbr::OriginalName("SEND_KS_MESSAGE_NOT_MATCH_RULE")] SendKsMessageNotMatchRule = 24100,
        [pbr::OriginalName("FIND_USER_FREQUENCY")] FindUserFrequency = 24101,
        [pbr::OriginalName("KUAISHOU_FANS_TOKEN_INVALID")] KuaishouFansTokenInvalid = 24102,
        [pbr::OriginalName("KUAISHOU_AUTHORIZE_FAILED")] KuaishouAuthorizeFailed = 24103,
        [pbr::OriginalName("ADD_FRIEND_TOO_FREQUENTLY")] AddFriendTooFrequently = 24104,
        [pbr::OriginalName("BLACK_LIST_REACHED_LIMIT")] BlackListReachedLimit = 24105,
        [pbr::OriginalName("GAME_ROOM_IS_RELEASED")] GameRoomIsReleased = 50001,
        [pbr::OriginalName("CREATE_GAME_ROOM_FAIL")] CreateGameRoomFail = 50002,
        [pbr::OriginalName("GAME_SERVER_ERROR")] GameServerError = 50003,
        [pbr::OriginalName("GAME_ROOM_IS_EXPIRED")] GameRoomIsExpired = 50004,
        [pbr::OriginalName("ALREADY_IN_GAME")] AlreadyInGame = 50006,
        [pbr::OriginalName("TARGET_ALREADY_IN_GAME")] TargetAlreadyInGame = 50007,
        [pbr::OriginalName("GAME_NOT_EXIST")] GameNotExist = 50008,
        [pbr::OriginalName("GAME_ACCEPT_BUT_ALREAD_IN_GAME")] GameAcceptButAlreadInGame = 50009,
        [pbr::OriginalName("GAME_ACCEPT_BUT_TARGET_ALREADY_IN_GAME")] GameAcceptButTargetAlreadyInGame = 50010,
        [pbr::OriginalName("GAME_ACCEPT_BUT_APP_VERSION_TOO_LOW")] GameAcceptButAppVersionTooLow = 50011,
        [pbr::OriginalName("GAME_USER_MATCH_FAIL")] GameUserMatchFail = 50012,
        [pbr::OriginalName("USER_FREQUENT_LEAVE_GAME_BE_PUNISHED")] UserFrequentLeaveGameBePunished = 50013,
        [pbr::OriginalName("RELATIONSHIP_INVALID_CANNOT_SEND_GAME_INVITE")] RelationshipInvalidCannotSendGameInvite = 50014,
        [pbr::OriginalName("GAME_USER_MATCH_SYNC_NO_MATCH")] GameUserMatchSyncNoMatch = 50015,
        [pbr::OriginalName("FORBID_MATCH")] ForbidMatch = 50016,
        [pbr::OriginalName("GAME_RESOURCE_NO_EXIST")] GameResourceNoExist = 50017,
        [pbr::OriginalName("GAME_MATCH_SYNC_NO_MATCH")] GameMatchSyncNoMatch = 50018,
        [pbr::OriginalName("GAME_MATCH_SYNC_ALREADY_FINISH")] GameMatchSyncAlreadyFinish = 50019,
        [pbr::OriginalName("INVITATION_SEND_REACH_LIMITATION")] InvitationSendReachLimitation = 50020,
        [pbr::OriginalName("GAME_MATCH_TEAM_NOT_EXIST")] GameMatchTeamNotExist = 50021,
        [pbr::OriginalName("GAME_MATCH_TEAM_NO_TARGET")] GameMatchTeamNoTarget = 50022,
        [pbr::OriginalName("GAME_MATCH_TEAM_OTHER_ALREADY_JOIN_SUCC")] GameMatchTeamOtherAlreadyJoinSucc = 50023,
        [pbr::OriginalName("FORZEN_USER")] ForzenUser = 50024,
        [pbr::OriginalName("FORZEN_USER_PROFILE")] ForzenUserProfile = 50025,
        [pbr::OriginalName("FORZEN_USER_ACCOUNT")] ForzenUserAccount = 50026,
        [pbr::OriginalName("TEMP_FORZEN_USER_ACCOUNT")] TempForzenUserAccount = 50027,
        [pbr::OriginalName("LOCKED_USER_ACCOUNT")] LockedUserAccount = 50028,
        [pbr::OriginalName("UNFREEZE_USER_ACCOUNT_APPLY_IN_PROCESS")] UnfreezeUserAccountApplyInProcess = 50029,
        [pbr::OriginalName("GAME_MATH_TEAM_DISBANDED")] GameMathTeamDisbanded = 50030,
        [pbr::OriginalName("USER_ACCOUNT_IS_NOT_FORZEN")] UserAccountIsNotForzen = 50031,
        [pbr::OriginalName("CAPTCHA_VERIFY_FAILED")] CaptchaVerifyFailed = 50032,
        [pbr::OriginalName("PROFILE_UPDATE_NOT_PERMIT")] ProfileUpdateNotPermit = 50033,
        [pbr::OriginalName("GAME_REQUEST_TOO_FREQUENTLY")] GameRequestTooFrequently = 50034,
        [pbr::OriginalName("WECHAT_GAME_INVITE_CANCEL")] WechatGameInviteCancel = 50050,
        [pbr::OriginalName("WECHAT_GAME_INVITE_ACCEPTED")] WechatGameInviteAccepted = 50051,
        [pbr::OriginalName("THIRD_PARTY_NOT_BIND")] ThirdPartyNotBind = 50040,
        [pbr::OriginalName("THIRD_PARTY_TOKEN_EXPIRE")] ThirdPartyTokenExpire = 50041,
        [pbr::OriginalName("THIRD_PARTY_NO_FRIEND_PERMISSION")] ThirdPartyNoFriendPermission = 50042,
        [pbr::OriginalName("GAME_INVITE_INFO_NOT_EXIST")] GameInviteInfoNotExist = 50060,
        [pbr::OriginalName("GAME_ACCEPT_IS_INVALID")] GameAcceptIsInvalid = 50061,
        [pbr::OriginalName("GAME_ARENA_NOT_EXIST")] GameArenaNotExist = 50062,
        [pbr::OriginalName("GAME_SHOP_PROPS_BUY_FAIL")] GameShopPropsBuyFail = 50063,
        [pbr::OriginalName("GAME_SHOP_PROPS_USE_FAIL")] GameShopPropsUseFail = 50064,
        [pbr::OriginalName("GAME_SHOP_PROPS_NOT_EXIST")] GameShopPropsNotExist = 50065,
        [pbr::OriginalName("GAME_SHOP_PROPS_COUNT_UNMATCH")] GameShopPropsCountUnmatch = 50066,
        [pbr::OriginalName("GAME_SKIN_NOT_EXIST")] GameSkinNotExist = 50067,
        [pbr::OriginalName("GAME_COIN_SHARE_TAKE_OVER_LIMIT")] GameCoinShareTakeOverLimit = 50068,
        [pbr::OriginalName("GAME_COIN_TIMELY_TAKE_IN_CD")] GameCoinTimelyTakeInCd = 50069,
        [pbr::OriginalName("GAME_SKIN_IN_LOCKED")] GameSkinInLocked = 50070,
        [pbr::OriginalName("GAME_SHOP_BALANCE_NOT_ENOUGH")] GameShopBalanceNotEnough = 50071,
        [pbr::OriginalName("GAME_SKIN_ALREADY_UNLOCKED")] GameSkinAlreadyUnlocked = 50072,
        [pbr::OriginalName("GAME_SKIN_UPDATE_FAIL")] GameSkinUpdateFail = 50073,
        [pbr::OriginalName("GAME_SKIN_IS_IN_USED")] GameSkinIsInUsed = 50074,
        [pbr::OriginalName("GAME_USER_MATCH_TIMES_LIMIT")] GameUserMatchTimesLimit = 50075,
        [pbr::OriginalName("GAME_SKIN_BUY_FAIL")] GameSkinBuyFail = 50076,
        [pbr::OriginalName("GAME_RESULT_VERIFY_NOT_PASS")] GameResultVerifyNotPass = 50077,
        [pbr::OriginalName("USE_RANK_TITLE_FAILED")] UseRankTitleFailed = 50078,
        [pbr::OriginalName("USER_LOCATION_FAILD")] UserLocationFaild = 50079,
        [pbr::OriginalName("GAME_ACHIEVEMENT_NOT_EXIST")] GameAchievementNotExist = 50080,
        [pbr::OriginalName("BALANCE_NOT_ENOUGH")] BalanceNotEnough = 50081,
        [pbr::OriginalName("COIN_USE_FAIL")] CoinUseFail = 50082,
        [pbr::OriginalName("COIN_ADD_FAIL")] CoinAddFail = 50083,
        [pbr::OriginalName("GAME_LINK_MIC_ROOM_NOT_EXIST")] GameLinkMicRoomNotExist = 50100,
        [pbr::OriginalName("GAME_LINK_MIC_USER_NOT_IN_ROOM")] GameLinkMicUserNotInRoom = 50101,
        [pbr::OriginalName("GAME_LINK_MIC_ROOM_UNEXPECTED_MESSAGE")] GameLinkMicRoomUnexpectedMessage = 50102,
        [pbr::OriginalName("GAME_LINK_MIC_USER_ALREADY_IN_ROOM")] GameLinkMicUserAlreadyInRoom = 50103,
        [pbr::OriginalName("CHAT_ROOM_NOT_EXIST")] ChatRoomNotExist = 50200,
        [pbr::OriginalName("CHAT_ROOM_NOT_MEMBER")] ChatRoomNotMember = 50201,
        [pbr::OriginalName("CHAT_ROOM_TARGET_LEAVE")] ChatRoomTargetLeave = 50202,
        [pbr::OriginalName("CHAT_ROOM_TARGET_LEAVE_2P")] ChatRoomTargetLeave2P = 50203,
        [pbr::OriginalName("CHAT_ROOM_FORBID_IMAGE_BETWEEN_STRANGER")] ChatRoomForbidImageBetweenStranger = 50204,
        [pbr::OriginalName("CHAT_ROOM_LEAVE_TOO_FREQUENTLY")] ChatRoomLeaveTooFrequently = 50205,
        [pbr::OriginalName("SESSION_FORBID_IMAGE_BETWEEN_STRANGER")] SessionForbidImageBetweenStranger = 50210,
        [pbr::OriginalName("SEND_MESSAGE_IS_BANNED")] SendMessageIsBanned = 50211,
        [pbr::OriginalName("QUIZZES_NOT_EXIST")] QuizzesNotExist = 50300,
        [pbr::OriginalName("QUIZZES_ANSWER_TIMEOUT")] QuizzesAnswerTimeout = 50301,
        [pbr::OriginalName("ALREADY_USED_INVITATION_CODE")] AlreadyUsedInvitationCode = 50302,
        [pbr::OriginalName("CANNOT_USE_ONESELF_INVITATION_CODE")] CannotUseOneselfInvitationCode = 50303,
        [pbr::OriginalName("INVITATION_CODE_IS_INVALID")] InvitationCodeIsInvalid = 50304,
        [pbr::OriginalName("MULTIPLAYER_GAME_ROOM_NOT_EXIST")] MultiplayerGameRoomNotExist = 50400,
        [pbr::OriginalName("MULTIPLAYER_GAME_ROOM_NOT_MEMBER")] MultiplayerGameRoomNotMember = 50401,
        [pbr::OriginalName("MULTIPLAYER_GAME_ROOM_MEMBER_KICKED")] MultiplayerGameRoomMemberKicked = 50402,
        [pbr::OriginalName("MULTIPLAYER_GAME_ROOM_LEAVE_FREQUENCY")] MultiplayerGameRoomLeaveFrequency = 50403,
        [pbr::OriginalName("DRAW_GUESS_ROOM_NOT_EXIST")] DrawGuessRoomNotExist = 50500,
        [pbr::OriginalName("GUESS_WORD_NOT_EXIST")] GuessWordNotExist = 50501,
        [pbr::OriginalName("DRAW_GUESS_ROOM_NOT_MEMBER")] DrawGuessRoomNotMember = 50502,
        [pbr::OriginalName("NOT_DRAW_USER")] NotDrawUser = 50503,
        [pbr::OriginalName("CANNOT_GUESS_NOW")] CannotGuessNow = 50504,
        [pbr::OriginalName("DRAW_USER_CANNOT_GUESS")] DrawUserCannotGuess = 50505,
        [pbr::OriginalName("CANNOT_DRAW_NOW")] CannotDrawNow = 50506,
        [pbr::OriginalName("GUESS_WORD_EXCEED_MAX_LENGTH")] GuessWordExceedMaxLength = 50507,
        [pbr::OriginalName("GUESS_WORD_HIT_SENSITIVE_WORDS")] GuessWordHitSensitiveWords = 50508,
        [pbr::OriginalName("USER_IN_TRAVEL_FOR_INVITOR")] UserInTravelForInvitor = 50600,
        [pbr::OriginalName("PEER_IN_TRAVEL")] PeerInTravel = 50601,
        [pbr::OriginalName("TRAVEL_FINISHED")] TravelFinished = 50602,
        [pbr::OriginalName("TRAVEL_INVITE_INVALID")] TravelInviteInvalid = 50603,
        [pbr::OriginalName("TRAVEL_NOT_FRIEND")] TravelNotFriend = 50604,
        [pbr::OriginalName("TRAVEL_NOT_EXIST")] TravelNotExist = 50605,
        [pbr::OriginalName("TRAVEL_SELF_FORBID")] TravelSelfForbid = 50606,
        [pbr::OriginalName("TRAVEL_SCENARIO_END")] TravelScenarioEnd = 50607,
        [pbr::OriginalName("USER_IN_TRAVEL_FOR_ACCEPTOR")] UserInTravelForAcceptor = 50608,
        [pbr::OriginalName("TRAVEL_ENTRANCE_CLOSED")] TravelEntranceClosed = 50609,
        [pbr::OriginalName("USER_HAS_OPERATED_MESSAGE")] UserHasOperatedMessage = 50610,
        [pbr::OriginalName("TRAVEL_NOT_FRIEND_FOR_ACCEPTOR")] TravelNotFriendForAcceptor = 50611,
        [pbr::OriginalName("WHO_SPY_ROOM_NOT_EXIST")] WhoSpyRoomNotExist = 50700,
        [pbr::OriginalName("WHO_SPY_ROOM_NOT_MEMBER")] WhoSpyRoomNotMember = 50701,
        [pbr::OriginalName("CANNOT_DESCRIBE_NOW")] CannotDescribeNow = 50703,
        [pbr::OriginalName("CANNOT_VOTE_NOW")] CannotVoteNow = 50704,
        [pbr::OriginalName("SPY_CANNOT_GUESS")] SpyCannotGuess = 50705,
        [pbr::OriginalName("NOT_DESCRIBE_USER")] NotDescribeUser = 50706,
        [pbr::OriginalName("NOT_VOTE_USER")] NotVoteUser = 50707,
        [pbr::OriginalName("INVALID_VOTE_TARGET")] InvalidVoteTarget = 50708,
        [pbr::OriginalName("DESCRIPTION_EXCEED_MAX_LENGTH")] DescriptionExceedMaxLength = 50709,
        [pbr::OriginalName("DESCRIPTION_HIT_SENSITIVE_WORDS")] DescriptionHitSensitiveWords = 50710,
        [pbr::OriginalName("SPY_GUESS_WORD_EXCEED_MAX_LENGTH")] SpyGuessWordExceedMaxLength = 50711,
        [pbr::OriginalName("SPY_GUESS_WORD_HIT_SENSITIVE_WORDS")] SpyGuessWordHitSensitiveWords = 50712,
        [pbr::OriginalName("ALREADY_IN_MULTI_PLAYER_CHAT_ROOM")] AlreadyInMultiPlayerChatRoom = 50800,
        [pbr::OriginalName("CHAT_ROOM_TOPIC_HIT_SENSITIVE_WORDS")] ChatRoomTopicHitSensitiveWords = 50801,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_CREATE_FAIL")] MultiPlayerChatRoomCreateFail = 50802,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_CREATE_FREQUENT")] MultiPlayerChatRoomCreateFrequent = 50803,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_NOT_EXIST")] MultiPlayerChatRoomNotExist = 50804,
        [pbr::OriginalName("OPERATION_ALLOWED_FOR_OWNER_ONLY")] OperationAllowedForOwnerOnly = 50805,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_GAME_CREATE_FAIL")] MultiPlayerChatRoomGameCreateFail = 50806,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_GAME_NOT_MATCH")] MultiPlayerChatRoomGameNotMatch = 50807,
        [pbr::OriginalName("NOT_MEMBER_FOR_MULTI_PLAYER_CHAT_ROOM")] NotMemberForMultiPlayerChatRoom = 50808,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_RELEASED")] MultiPlayerChatRoomReleased = 50809,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_FULL")] MultiPlayerChatRoomFull = 50810,
        [pbr::OriginalName("ALREADY_IN_OTHER_MULTI_PLAYER_CHAT_ROOM")] AlreadyInOtherMultiPlayerChatRoom = 50811,
        [pbr::OriginalName("FORBID_JOIN_PRIVATE_MULTI_PLAYER_CHAT_ROOM")] ForbidJoinPrivateMultiPlayerChatRoom = 50812,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_JOIN_FAIL")] MultiPlayerChatRoomJoinFail = 50813,
        [pbr::OriginalName("QUICK_MATCH_SYNC_NO_MATCH")] QuickMatchSyncNoMatch = 50814,
        [pbr::OriginalName("PLAYER_LEAVE_MULTI_PLAYER_CHAT_ROOM")] PlayerLeaveMultiPlayerChatRoom = 50815,
        [pbr::OriginalName("LINKMIC_COUNT_REACH_LIMIT")] LinkmicCountReachLimit = 50816,
        [pbr::OriginalName("PLAYER_ALREADY_LINKMIC_ONLINE")] PlayerAlreadyLinkmicOnline = 50817,
        [pbr::OriginalName("PLAYER_ALREADY_LINKMIC_OFFLINE")] PlayerAlreadyLinkmicOffline = 50818,
        [pbr::OriginalName("PLAYER_ALREADY_LEAVE_CHAT_ROOM")] PlayerAlreadyLeaveChatRoom = 50819,
        [pbr::OriginalName("FORBID_LINK_MIC_OFFLINE_FOR_OWNER")] ForbidLinkMicOfflineForOwner = 50820,
        [pbr::OriginalName("FORBID_LINK_MIC_OFFLINE_PLAYING_GAME")] ForbidLinkMicOfflinePlayingGame = 50821,
        [pbr::OriginalName("FORBID_LINK_MIC_ONLINE_PLAYING_GAME")] ForbidLinkMicOnlinePlayingGame = 50822,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_MEMBER_KICKEDOUT")] MultiPlayerChatRoomMemberKickedout = 50823,
        [pbr::OriginalName("FORBID_KICKOUT_PLAYER_PLAYING_GAME")] ForbidKickoutPlayerPlayingGame = 50824,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_GAME_NOT_EXIST")] MultiPlayerChatRoomGameNotExist = 50825,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_MEMBER_TIMEOUT")] MultiPlayerChatRoomMemberTimeout = 50826,
        [pbr::OriginalName("FORBID_GAME_UNREADY_FOR_OWNER")] ForbidGameUnreadyForOwner = 50827,
        [pbr::OriginalName("FORBID_CREATE_CHAT_ROOM")] ForbidCreateChatRoom = 50828,
        [pbr::OriginalName("CHAT_ROOM_TOPIC_NOT_ALLOWED_EMPTY")] ChatRoomTopicNotAllowedEmpty = 50829,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_GAME_ROOM_FULL")] MultiPlayerChatRoomGameRoomFull = 50830,
        [pbr::OriginalName("PLAYER_NOT_LINKMIC_ONLINE")] PlayerNotLinkmicOnline = 50831,
        [pbr::OriginalName("LINKMIC_STATUS_ALREADY_UPDATE")] LinkmicStatusAlreadyUpdate = 50832,
        [pbr::OriginalName("CANNOT_APPLY_LINKMIC")] CannotApplyLinkmic = 50833,
        [pbr::OriginalName("CANNOT_CREATE_CHAT_ROOM_FOR_BLACKLIST")] CannotCreateChatRoomForBlacklist = 50834,
        [pbr::OriginalName("CANNOT_CREATE_CHAT_ROOM_FOR_NOT_BIND")] CannotCreateChatRoomForNotBind = 50835,
        [pbr::OriginalName("CANNOT_JOIN_CHAT_ROOM_FOR_BLACKLIST")] CannotJoinChatRoomForBlacklist = 50836,
        [pbr::OriginalName("NO_AVAILABLE_CHAT_ROOM")] NoAvailableChatRoom = 50837,
        [pbr::OriginalName("MAX_PLAYER_COUNT_REACH_LIMIT")] MaxPlayerCountReachLimit = 50838,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_NEED_UPDATE_VERSION")] MultiPlayerChatRoomNeedUpdateVersion = 50839,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_START_GAME_UPDATE_VERSION")] MultiPlayerChatRoomStartGameUpdateVersion = 50840,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_ALREADY_IN_GAME")] MultiPlayerChatRoomAlreadyInGame = 50841,
        [pbr::OriginalName("MULTI_PLAYER_CHAT_ROOM_FORBID_CANCEL_CREATE")] MultiPlayerChatRoomForbidCancelCreate = 50842,
        [pbr::OriginalName("CHAT_ROOM_SEATNAME_HIT_SENSITIVE_WORDS")] ChatRoomSeatnameHitSensitiveWords = 50843,
        [pbr::OriginalName("CHAT_ROOM_THEME_NOT_EXIST")] ChatRoomThemeNotExist = 50844,
        [pbr::OriginalName("ONLY_VIP_CAN_UPLOAD_BACKGROUND")] OnlyVipCanUploadBackground = 50845,
        [pbr::OriginalName("MORE_THAN_BACKGROUND_MAX_COUNT")] MoreThanBackgroundMaxCount = 50846,
        [pbr::OriginalName("MODIFY_BACKGROUND_FOR_NORMAL_ROOM")] ModifyBackgroundForNormalRoom = 50847,
        [pbr::OriginalName("CHAT_ROOM_ANNOUNCEMENT_EXCEED_MAX_LENGTH")] ChatRoomAnnouncementExceedMaxLength = 50848,
        [pbr::OriginalName("CHAT_ROOM_ANNOUNCEMENT_HIT_SENSITIVE_WORDS")] ChatRoomAnnouncementHitSensitiveWords = 50849,
        [pbr::OriginalName("NOT_THEME_ROOM")] NotThemeRoom = 50850,
        [pbr::OriginalName("FEED_NOT_EXIST")] FeedNotExist = 50900,
        [pbr::OriginalName("FEED_NOT_OWNER")] FeedNotOwner = 50901,
        [pbr::OriginalName("FEED_PUBLISHED")] FeedPublished = 50902,
        [pbr::OriginalName("FEED_TEXT_EXCEED_MAX_LENGTH")] FeedTextExceedMaxLength = 50903,
        [pbr::OriginalName("FEED_TEXT_HIT_SENSITIVE_WORDS")] FeedTextHitSensitiveWords = 50904,
        [pbr::OriginalName("FEED_ATTACHMENT_MISSING_INFO")] FeedAttachmentMissingInfo = 50905,
        [pbr::OriginalName("FEED_USER_LIKED")] FeedUserLiked = 50906,
        [pbr::OriginalName("FEED_CITY_NOT_LOCATED")] FeedCityNotLocated = 50907,
        [pbr::OriginalName("FEED_PROFILE_AUTHOR_BLOCK_USER")] FeedProfileAuthorBlockUser = 50908,
        [pbr::OriginalName("FEED_PROFILE_USER_BLOCK_AUTHOR")] FeedProfileUserBlockAuthor = 50909,
        [pbr::OriginalName("FEED_USER_NOT_LIKED")] FeedUserNotLiked = 50910,
        [pbr::OriginalName("FEED_PUBLISH_BANNED")] FeedPublishBanned = 50911,
        [pbr::OriginalName("FEED_FROZEN_USER")] FeedFrozenUser = 50912,
        [pbr::OriginalName("FEED_PUBLISH_OVER_LIMIT")] FeedPublishOverLimit = 50913,
        [pbr::OriginalName("FEED_PUBLISH_REQUEST_OVER_LIMIT")] FeedPublishRequestOverLimit = 50914,
        [pbr::OriginalName("FEED_LIKE_SPAM")] FeedLikeSpam = 50915,
        [pbr::OriginalName("TRADE_PRODUCT_NOT_FOUND")] TradeProductNotFound = 50921,
        [pbr::OriginalName("TRADE_PRODUCT_CHANGED")] TradeProductChanged = 50922,
        [pbr::OriginalName("TRADE_ORDER_DUPLICATE")] TradeOrderDuplicate = 50923,
        [pbr::OriginalName("TRADE_ORDER_FAILED")] TradeOrderFailed = 50924,
        [pbr::OriginalName("TRADE_ORDER_NOT_FOUND")] TradeOrderNotFound = 50925,
        [pbr::OriginalName("TRADE_RECEIPT_BINDED")] TradeReceiptBinded = 50926,
        [pbr::OriginalName("TRADE_RECEIPT_VERIFY_FAILED")] TradeReceiptVerifyFailed = 50927,
        [pbr::OriginalName("TRADE_RECEIPT_VERIFY_SYSTEM_ERROR")] TradeReceiptVerifySystemError = 50928,
        [pbr::OriginalName("TRADE_RECEIPT_VERIFY_CHECK_FAILED")] TradeReceiptVerifyCheckFailed = 50929,
        [pbr::OriginalName("TRADE_RECEIPT_UNSUPPORTED_VERSION")] TradeReceiptUnsupportedVersion = 50930,
        [pbr::OriginalName("TRADE_RECEIPT_BUY_FAILED")] TradeReceiptBuyFailed = 50931,
        [pbr::OriginalName("TRADE_SERVICE_UNAVAILABLE")] TradeServiceUnavailable = 50932,
        [pbr::OriginalName("TRADE_AGREEMENT_NOT_FOUND")] TradeAgreementNotFound = 50933,
        [pbr::OriginalName("TRADE_AGREEMENT_UNSIGN_FAILED")] TradeAgreementUnsignFailed = 50934,
        [pbr::OriginalName("C2C_STRANGER_SESSION_OVER_LIMIT")] C2CStrangerSessionOverLimit = 51100,
        [pbr::OriginalName("GAME_INVALID_COMMAND")] GameInvalidCommand = 60001,
        [pbr::OriginalName("GAME_USER_NOT_FOUND")] GameUserNotFound = 60002,
        [pbr::OriginalName("GAME_INVALID_MESSAGE")] GameInvalidMessage = 60003,
        [pbr::OriginalName("GAME_FINISHED")] GameFinished = 60004,
        [pbr::OriginalName("REPORT_TOO_FREQUENTLY")] ReportTooFrequently = 70001,
        [pbr::OriginalName("GROUP_CREATE_FAIL")] GroupCreateFail = 80100,
        [pbr::OriginalName("NOT_GROUP_MEMBER")] NotGroupMember = 80101,
        [pbr::OriginalName("NOT_GROUP_ADMIN")] NotGroupAdmin = 80102,
        [pbr::OriginalName("GROUP_DELETE_FAIL")] GroupDeleteFail = 80103,
        [pbr::OriginalName("ADMIN_TRANSFER_FAIL")] AdminTransferFail = 80104,
        [pbr::OriginalName("GROUP_SETTING_FAIL")] GroupSettingFail = 80105,
        [pbr::OriginalName("GROUP_EXCEED_MAX_NUMBERS")] GroupExceedMaxNumbers = 80106,
        [pbr::OriginalName("GROUP_ADMIN_CANNOT_QUIT")] GroupAdminCannotQuit = 80107,
        [pbr::OriginalName("CANNOT_KICK_ADMIN")] CannotKickAdmin = 80108,
        [pbr::OriginalName("GROUP_NOT_EXISTS")] GroupNotExists = 80109,
        [pbr::OriginalName("GROUP_NOT_ENOUGH_MEMBERS")] GroupNotEnoughMembers = 80110,
        [pbr::OriginalName("USER_CREATE_GROUP_EXCEED_MAX_COUNT")] UserCreateGroupExceedMaxCount = 80111,
        [pbr::OriginalName("GROUP_NAME_UNAVAILABLE")] GroupNameUnavailable = 80112,
        [pbr::OriginalName("USER_NICK_NAME_UNAVAILABLE")] UserNickNameUnavailable = 80113,
        [pbr::OriginalName("GROUP_OFF_LINE")] GroupOffLine = 80114,
        [pbr::OriginalName("FORBID_USER_CREATE_GROUP")] ForbidUserCreateGroup = 80115,
        [pbr::OriginalName("GROUP_SHARE_GROUP_NOT_EXIST")] GroupShareGroupNotExist = 80116,
        [pbr::OriginalName("GROUP_SHARE_INVITEOR_NOT_GROUP_MEMBER")] GroupShareInviteorNotGroupMember = 80117,
        [pbr::OriginalName("GROUP_SHARE_QR_CODE_EXPIRE")] GroupShareQrCodeExpire = 80118,
        [pbr::OriginalName("GROUP_SHARE_GROUP_EXCEED_MAX_NUMBERS")] GroupShareGroupExceedMaxNumbers = 80119,
        [pbr::OriginalName("GROUP_SHARE_QR_CODE_INVALID")] GroupShareQrCodeInvalid = 80120,
        [pbr::OriginalName("GROUP_SHARE_LINK_INVALID")] GroupShareLinkInvalid = 80121,
        [pbr::OriginalName("GROUP_SHARE_WITHIN_NEED_PERMISSION")] GroupShareWithinNeedPermission = 80124,
        [pbr::OriginalName("GROUP_BULLETIN_SIZE_OVER_LIMIT")] GroupBulletinSizeOverLimit = 80122,
        [pbr::OriginalName("GROUP_BULLETIN_NOT_ADMIN")] GroupBulletinNotAdmin = 80123,
        [pbr::OriginalName("GROUP_JOIN_REQUEST_NOT_FOUND")] GroupJoinRequestNotFound = 80125,
        [pbr::OriginalName("GROUP_JOIN_REQUEST_HAS_BEEN_PROCESSED")] GroupJoinRequestHasBeenProcessed = 80126,
        [pbr::OriginalName("GROUP_NAME_LENGTH_OVER_LIMIT")] GroupNameLengthOverLimit = 80127,
        [pbr::OriginalName("GROUP_PK_NOT_QUIT")] GroupPkNotQuit = 80128,
        [pbr::OriginalName("GROUP_PK_NOT_RENAME")] GroupPkNotRename = 80129,
        [pbr::OriginalName("GROUP_PK_NOT_INVITE")] GroupPkNotInvite = 80130,
        [pbr::OriginalName("GROUP_PK_NOT_INVITE_QR_CODE")] GroupPkNotInviteQrCode = 80131,
        [pbr::OriginalName("GROUP_MEMBER_NICK_NAME_LENGTH_OVER_LIMIT")] GroupMemberNickNameLengthOverLimit = 80132,
        [pbr::OriginalName("CHANNEL_INVALID_CHANNEL_ID")] ChannelInvalidChannelId = 81000,
        [pbr::OriginalName("CHANNEL_USER_HAS_BEEN_KICKED")] ChannelUserHasBeenKicked = 81001,
        [pbr::OriginalName("MESSAGE_TOO_LARGE_TO_SEND")] MessageTooLargeToSend = 82000,
        [pbr::OriginalName("MESSAGE_BATCH_SEND_COUNT_EXCEED_LIMIT")] MessageBatchSendCountExceedLimit = 82001,
        [pbr::OriginalName("DIAN_DIAN_COVER_IMAGE_NOT_REAL")] DianDianCoverImageNotReal = 50860,
        [pbr::OriginalName("DIAN_DIAN_COVER_IMAGE_NOT_SET")] DianDianCoverImageNotSet = 50861,
        [pbr::OriginalName("DIAN_DIAN_SETTING_UPDATE_FAIL")] DianDianSettingUpdateFail = 50862,
        [pbr::OriginalName("DIAN_DIAN_ALBUM_UPDATE_FAIL")] DianDianAlbumUpdateFail = 50863,
        [pbr::OriginalName("DIAN_DIAN_USER_FROZEN")] DianDianUserFrozen = 50864,
        [pbr::OriginalName("DIAN_DIAN_LIKE_FREQUENCY_LIMIT")] DianDianLikeFrequencyLimit = 50865,
        [pbr::OriginalName("DIAN_DIAN_YOUNG_AGE_LIMIT")] DianDianYoungAgeLimit = 50866,
        [pbr::OriginalName("GIFT_BALANCE_NOT_ENOUGH")] GiftBalanceNotEnough = 51000,
        [pbr::OriginalName("GIFT_GIVED")] GiftGived = 51001,
        [pbr::OriginalName("GIFT_RECEIVER_NOT_EXIST")] GiftReceiverNotExist = 51002,
        [pbr::OriginalName("GIFT_RECEIVER_NOT_IN_ROOM")] GiftReceiverNotInRoom = 51003,
        [pbr::OriginalName("GIFT_INFO_NOT_EXIST")] GiftInfoNotExist = 51004,
        [pbr::OriginalName("FREE_VIP_CARD_NO_EXIST")] FreeVipCardNoExist = 51050,
        [pbr::OriginalName("FREE_VIP_CARD_EXPIRE")] FreeVipCardExpire = 51051,
        [pbr::OriginalName("FREE_VIP_CARD_USE_FAILED")] FreeVipCardUseFailed = 51052,
        [pbr::OriginalName("SECRET_SIGNAL_GENERATE_FAIL")] SecretSignalGenerateFail = 50950,
        [pbr::OriginalName("SECRET_SIGNAL_SHARE_FAIL")] SecretSignalShareFail = 50951,
        [pbr::OriginalName("SECRET_SIGNAL_INVALID_PREFIX")] SecretSignalInvalidPrefix = 50952,
        [pbr::OriginalName("SECRET_SIGNAL_MATCH_FAIL")] SecretSignalMatchFail = 50953,
        [pbr::OriginalName("SECRET_SIGNAL_DUPLICATE_MATCH")] SecretSignalDuplicateMatch = 50954,
        [pbr::OriginalName("SECRET_SIGNAL_FORBID_MATCH_SELF")] SecretSignalForbidMatchSelf = 50955,
      }

      public sealed partial class PacketHeader : pb::IMessage<PacketHeader>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PacketHeader> _parser = new pb::MessageParser<PacketHeader>(() => new PacketHeader());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PacketHeader> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PacketHeader() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PacketHeader(PacketHeader other) : this() {
          appId_ = other.appId_;
          uid_ = other.uid_;
          instanceId_ = other.instanceId_;
          flags_ = other.flags_;
          encodingType_ = other.encodingType_;
          decodedPayloadLen_ = other.decodedPayloadLen_;
          encryptionMode_ = other.encryptionMode_;
          tokenInfo_ = other.tokenInfo_ != null ? other.tokenInfo_.Clone() : null;
          seqId_ = other.seqId_;
          features_ = other.features_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PacketHeader Clone() {
          return new PacketHeader(this);
        }

        /// <summary>Field number for the "appId" field.</summary>
        public const int AppIdFieldNumber = 1;
        private int appId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AppId {
          get { return appId_; }
          set {
            appId_ = value;
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 2;
        private long uid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Uid {
          get { return uid_; }
          set {
            uid_ = value;
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 3;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        /// <summary>Field number for the "flags" field.</summary>
        public const int FlagsFieldNumber = 5;
        private uint flags_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Flags {
          get { return flags_; }
          set {
            flags_ = value;
          }
        }

        /// <summary>Field number for the "encodingType" field.</summary>
        public const int EncodingTypeFieldNumber = 6;
        private global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType encodingType_ = global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType EncodingType {
          get { return encodingType_; }
          set {
            encodingType_ = value;
          }
        }

        /// <summary>Field number for the "decodedPayloadLen" field.</summary>
        public const int DecodedPayloadLenFieldNumber = 7;
        private int decodedPayloadLen_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int DecodedPayloadLen {
          get { return decodedPayloadLen_; }
          set {
            decodedPayloadLen_ = value;
          }
        }

        /// <summary>Field number for the "encryptionMode" field.</summary>
        public const int EncryptionModeFieldNumber = 8;
        private global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode encryptionMode_ = global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode EncryptionMode {
          get { return encryptionMode_; }
          set {
            encryptionMode_ = value;
          }
        }

        /// <summary>Field number for the "tokenInfo" field.</summary>
        public const int TokenInfoFieldNumber = 9;
        private global::AcFunDanmu.Im.Basic.Types.TokenInfo tokenInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.TokenInfo TokenInfo {
          get { return tokenInfo_; }
          set {
            tokenInfo_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 10;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "features" field.</summary>
        public const int FeaturesFieldNumber = 11;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature> _repeated_features_codec
            = pb::FieldCodec.ForEnum(90, x => (int) x, x => (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature) x);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature> features_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature> Features {
          get { return features_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PacketHeader);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PacketHeader other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AppId != other.AppId) return false;
          if (Uid != other.Uid) return false;
          if (InstanceId != other.InstanceId) return false;
          if (Flags != other.Flags) return false;
          if (EncodingType != other.EncodingType) return false;
          if (DecodedPayloadLen != other.DecodedPayloadLen) return false;
          if (EncryptionMode != other.EncryptionMode) return false;
          if (!object.Equals(TokenInfo, other.TokenInfo)) return false;
          if (SeqId != other.SeqId) return false;
          if(!features_.Equals(other.features_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AppId != 0) hash ^= AppId.GetHashCode();
          if (Uid != 0L) hash ^= Uid.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          if (Flags != 0) hash ^= Flags.GetHashCode();
          if (EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) hash ^= EncodingType.GetHashCode();
          if (DecodedPayloadLen != 0) hash ^= DecodedPayloadLen.GetHashCode();
          if (EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) hash ^= EncryptionMode.GetHashCode();
          if (tokenInfo_ != null) hash ^= TokenInfo.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          hash ^= features_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AppId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AppId);
          }
          if (Uid != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Uid);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InstanceId);
          }
          if (Flags != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Flags);
          }
          if (EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) {
            output.WriteRawTag(48);
            output.WriteEnum((int) EncodingType);
          }
          if (DecodedPayloadLen != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(DecodedPayloadLen);
          }
          if (EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) {
            output.WriteRawTag(64);
            output.WriteEnum((int) EncryptionMode);
          }
          if (tokenInfo_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(TokenInfo);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(SeqId);
          }
          features_.WriteTo(output, _repeated_features_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AppId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AppId);
          }
          if (Uid != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Uid);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InstanceId);
          }
          if (Flags != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Flags);
          }
          if (EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) {
            output.WriteRawTag(48);
            output.WriteEnum((int) EncodingType);
          }
          if (DecodedPayloadLen != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(DecodedPayloadLen);
          }
          if (EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) {
            output.WriteRawTag(64);
            output.WriteEnum((int) EncryptionMode);
          }
          if (tokenInfo_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(TokenInfo);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(SeqId);
          }
          features_.WriteTo(ref output, _repeated_features_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AppId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppId);
          }
          if (Uid != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          if (Flags != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
          }
          if (EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EncodingType);
          }
          if (DecodedPayloadLen != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DecodedPayloadLen);
          }
          if (EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EncryptionMode);
          }
          if (tokenInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenInfo);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          size += features_.CalculateSize(_repeated_features_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PacketHeader other) {
          if (other == null) {
            return;
          }
          if (other.AppId != 0) {
            AppId = other.AppId;
          }
          if (other.Uid != 0L) {
            Uid = other.Uid;
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          if (other.Flags != 0) {
            Flags = other.Flags;
          }
          if (other.EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) {
            EncodingType = other.EncodingType;
          }
          if (other.DecodedPayloadLen != 0) {
            DecodedPayloadLen = other.DecodedPayloadLen;
          }
          if (other.EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) {
            EncryptionMode = other.EncryptionMode;
          }
          if (other.tokenInfo_ != null) {
            if (tokenInfo_ == null) {
              TokenInfo = new global::AcFunDanmu.Im.Basic.Types.TokenInfo();
            }
            TokenInfo.MergeFrom(other.TokenInfo);
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          features_.Add(other.features_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AppId = input.ReadInt32();
                break;
              }
              case 16: {
                Uid = input.ReadInt64();
                break;
              }
              case 24: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 40: {
                Flags = input.ReadUInt32();
                break;
              }
              case 48: {
                EncodingType = (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType) input.ReadEnum();
                break;
              }
              case 56: {
                DecodedPayloadLen = input.ReadInt32();
                break;
              }
              case 64: {
                EncryptionMode = (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode) input.ReadEnum();
                break;
              }
              case 74: {
                if (tokenInfo_ == null) {
                  TokenInfo = new global::AcFunDanmu.Im.Basic.Types.TokenInfo();
                }
                input.ReadMessage(TokenInfo);
                break;
              }
              case 80: {
                SeqId = input.ReadInt64();
                break;
              }
              case 90:
              case 88: {
                features_.AddEntriesFrom(input, _repeated_features_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                AppId = input.ReadInt32();
                break;
              }
              case 16: {
                Uid = input.ReadInt64();
                break;
              }
              case 24: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 40: {
                Flags = input.ReadUInt32();
                break;
              }
              case 48: {
                EncodingType = (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType) input.ReadEnum();
                break;
              }
              case 56: {
                DecodedPayloadLen = input.ReadInt32();
                break;
              }
              case 64: {
                EncryptionMode = (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode) input.ReadEnum();
                break;
              }
              case 74: {
                if (tokenInfo_ == null) {
                  TokenInfo = new global::AcFunDanmu.Im.Basic.Types.TokenInfo();
                }
                input.ReadMessage(TokenInfo);
                break;
              }
              case 80: {
                SeqId = input.ReadInt64();
                break;
              }
              case 90:
              case 88: {
                features_.AddEntriesFrom(ref input, _repeated_features_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the PacketHeader message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Flags {
            [pbr::OriginalName("kDirUpstream")] KDirUpstream = 0,
            [pbr::OriginalName("kDirDownstream")] KDirDownstream = 1,
            [pbr::OriginalName("kDirMask", PreferredAlias = false)] KDirMask = 1,
          }

          public enum EncodingType {
            [pbr::OriginalName("kEncodingNone")] KEncodingNone = 0,
            [pbr::OriginalName("kEncodingLz4")] KEncodingLz4 = 1,
          }

          public enum EncryptionMode {
            [pbr::OriginalName("kEncryptionNone")] KEncryptionNone = 0,
            [pbr::OriginalName("kEncryptionServiceToken")] KEncryptionServiceToken = 1,
            [pbr::OriginalName("kEncryptionSessionKey")] KEncryptionSessionKey = 2,
          }

          public enum Feature {
            [pbr::OriginalName("kReserve")] KReserve = 0,
            [pbr::OriginalName("kCompressLz4")] KCompressLz4 = 1,
          }

        }
        #endregion

      }

      public sealed partial class User : pb::IMessage<User>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<User> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User(User other) : this() {
          appId_ = other.appId_;
          uid_ = other.uid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User Clone() {
          return new User(this);
        }

        /// <summary>Field number for the "appId" field.</summary>
        public const int AppIdFieldNumber = 1;
        private int appId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AppId {
          get { return appId_; }
          set {
            appId_ = value;
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 2;
        private long uid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Uid {
          get { return uid_; }
          set {
            uid_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as User);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(User other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AppId != other.AppId) return false;
          if (Uid != other.Uid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AppId != 0) hash ^= AppId.GetHashCode();
          if (Uid != 0L) hash ^= Uid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AppId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AppId);
          }
          if (Uid != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Uid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AppId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AppId);
          }
          if (Uid != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Uid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AppId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppId);
          }
          if (Uid != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(User other) {
          if (other == null) {
            return;
          }
          if (other.AppId != 0) {
            AppId = other.AppId;
          }
          if (other.Uid != 0L) {
            Uid = other.Uid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AppId = input.ReadInt32();
                break;
              }
              case 16: {
                Uid = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                AppId = input.ReadInt32();
                break;
              }
              case 16: {
                Uid = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class UserInstance : pb::IMessage<UserInstance>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UserInstance> _parser = new pb::MessageParser<UserInstance>(() => new UserInstance());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UserInstance> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserInstance() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserInstance(UserInstance other) : this() {
          user_ = other.user_ != null ? other.user_.Clone() : null;
          instanceId_ = other.instanceId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserInstance Clone() {
          return new UserInstance(this);
        }

        /// <summary>Field number for the "user" field.</summary>
        public const int UserFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User user_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User User {
          get { return user_; }
          set {
            user_ = value;
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 2;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UserInstance);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UserInstance other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(User, other.User)) return false;
          if (InstanceId != other.InstanceId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (user_ != null) hash ^= User.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (user_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(User);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(InstanceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (user_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(User);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(InstanceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (user_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UserInstance other) {
          if (other == null) {
            return;
          }
          if (other.user_ != null) {
            if (user_ == null) {
              User = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            User.MergeFrom(other.User);
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(User);
                break;
              }
              case 16: {
                InstanceId = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(User);
                break;
              }
              case 16: {
                InstanceId = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class UpstreamPayload : pb::IMessage<UpstreamPayload>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpstreamPayload> _parser = new pb::MessageParser<UpstreamPayload>(() => new UpstreamPayload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpstreamPayload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpstreamPayload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpstreamPayload(UpstreamPayload other) : this() {
          command_ = other.command_;
          seqId_ = other.seqId_;
          retryCount_ = other.retryCount_;
          payloadData_ = other.payloadData_;
          userInstance_ = other.userInstance_ != null ? other.userInstance_.Clone() : null;
          errorCode_ = other.errorCode_;
          settingInfo_ = other.settingInfo_ != null ? other.settingInfo_.Clone() : null;
          requestBasicInfo_ = other.requestBasicInfo_ != null ? other.requestBasicInfo_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpstreamPayload Clone() {
          return new UpstreamPayload(this);
        }

        /// <summary>Field number for the "command" field.</summary>
        public const int CommandFieldNumber = 1;
        private string command_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Command {
          get { return command_; }
          set {
            command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "retryCount" field.</summary>
        public const int RetryCountFieldNumber = 3;
        private uint retryCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RetryCount {
          get { return retryCount_; }
          set {
            retryCount_ = value;
          }
        }

        /// <summary>Field number for the "payloadData" field.</summary>
        public const int PayloadDataFieldNumber = 4;
        private pb::ByteString payloadData_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PayloadData {
          get { return payloadData_; }
          set {
            payloadData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "userInstance" field.</summary>
        public const int UserInstanceFieldNumber = 5;
        private global::AcFunDanmu.Im.Basic.Types.UserInstance userInstance_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.UserInstance UserInstance {
          get { return userInstance_; }
          set {
            userInstance_ = value;
          }
        }

        /// <summary>Field number for the "errorCode" field.</summary>
        public const int ErrorCodeFieldNumber = 6;
        private int errorCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ErrorCode {
          get { return errorCode_; }
          set {
            errorCode_ = value;
          }
        }

        /// <summary>Field number for the "settingInfo" field.</summary>
        public const int SettingInfoFieldNumber = 7;
        private global::AcFunDanmu.Im.Basic.Types.SettingInfo settingInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SettingInfo SettingInfo {
          get { return settingInfo_; }
          set {
            settingInfo_ = value;
          }
        }

        /// <summary>Field number for the "requestBasicInfo" field.</summary>
        public const int RequestBasicInfoFieldNumber = 8;
        private global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo requestBasicInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo RequestBasicInfo {
          get { return requestBasicInfo_; }
          set {
            requestBasicInfo_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpstreamPayload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpstreamPayload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Command != other.Command) return false;
          if (SeqId != other.SeqId) return false;
          if (RetryCount != other.RetryCount) return false;
          if (PayloadData != other.PayloadData) return false;
          if (!object.Equals(UserInstance, other.UserInstance)) return false;
          if (ErrorCode != other.ErrorCode) return false;
          if (!object.Equals(SettingInfo, other.SettingInfo)) return false;
          if (!object.Equals(RequestBasicInfo, other.RequestBasicInfo)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Command.Length != 0) hash ^= Command.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (RetryCount != 0) hash ^= RetryCount.GetHashCode();
          if (PayloadData.Length != 0) hash ^= PayloadData.GetHashCode();
          if (userInstance_ != null) hash ^= UserInstance.GetHashCode();
          if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
          if (settingInfo_ != null) hash ^= SettingInfo.GetHashCode();
          if (requestBasicInfo_ != null) hash ^= RequestBasicInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Command.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Command);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (RetryCount != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(RetryCount);
          }
          if (PayloadData.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(PayloadData);
          }
          if (userInstance_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(UserInstance);
          }
          if (ErrorCode != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(ErrorCode);
          }
          if (settingInfo_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(SettingInfo);
          }
          if (requestBasicInfo_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(RequestBasicInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Command.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Command);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (RetryCount != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(RetryCount);
          }
          if (PayloadData.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(PayloadData);
          }
          if (userInstance_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(UserInstance);
          }
          if (ErrorCode != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(ErrorCode);
          }
          if (settingInfo_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(SettingInfo);
          }
          if (requestBasicInfo_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(RequestBasicInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Command.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (RetryCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RetryCount);
          }
          if (PayloadData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PayloadData);
          }
          if (userInstance_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInstance);
          }
          if (ErrorCode != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
          }
          if (settingInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingInfo);
          }
          if (requestBasicInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestBasicInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpstreamPayload other) {
          if (other == null) {
            return;
          }
          if (other.Command.Length != 0) {
            Command = other.Command;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.RetryCount != 0) {
            RetryCount = other.RetryCount;
          }
          if (other.PayloadData.Length != 0) {
            PayloadData = other.PayloadData;
          }
          if (other.userInstance_ != null) {
            if (userInstance_ == null) {
              UserInstance = new global::AcFunDanmu.Im.Basic.Types.UserInstance();
            }
            UserInstance.MergeFrom(other.UserInstance);
          }
          if (other.ErrorCode != 0) {
            ErrorCode = other.ErrorCode;
          }
          if (other.settingInfo_ != null) {
            if (settingInfo_ == null) {
              SettingInfo = new global::AcFunDanmu.Im.Basic.Types.SettingInfo();
            }
            SettingInfo.MergeFrom(other.SettingInfo);
          }
          if (other.requestBasicInfo_ != null) {
            if (requestBasicInfo_ == null) {
              RequestBasicInfo = new global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo();
            }
            RequestBasicInfo.MergeFrom(other.RequestBasicInfo);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Command = input.ReadString();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                RetryCount = input.ReadUInt32();
                break;
              }
              case 34: {
                PayloadData = input.ReadBytes();
                break;
              }
              case 42: {
                if (userInstance_ == null) {
                  UserInstance = new global::AcFunDanmu.Im.Basic.Types.UserInstance();
                }
                input.ReadMessage(UserInstance);
                break;
              }
              case 48: {
                ErrorCode = input.ReadInt32();
                break;
              }
              case 58: {
                if (settingInfo_ == null) {
                  SettingInfo = new global::AcFunDanmu.Im.Basic.Types.SettingInfo();
                }
                input.ReadMessage(SettingInfo);
                break;
              }
              case 66: {
                if (requestBasicInfo_ == null) {
                  RequestBasicInfo = new global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo();
                }
                input.ReadMessage(RequestBasicInfo);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Command = input.ReadString();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                RetryCount = input.ReadUInt32();
                break;
              }
              case 34: {
                PayloadData = input.ReadBytes();
                break;
              }
              case 42: {
                if (userInstance_ == null) {
                  UserInstance = new global::AcFunDanmu.Im.Basic.Types.UserInstance();
                }
                input.ReadMessage(UserInstance);
                break;
              }
              case 48: {
                ErrorCode = input.ReadInt32();
                break;
              }
              case 58: {
                if (settingInfo_ == null) {
                  SettingInfo = new global::AcFunDanmu.Im.Basic.Types.SettingInfo();
                }
                input.ReadMessage(SettingInfo);
                break;
              }
              case 66: {
                if (requestBasicInfo_ == null) {
                  RequestBasicInfo = new global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo();
                }
                input.ReadMessage(RequestBasicInfo);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DownstreamPayload : pb::IMessage<DownstreamPayload>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DownstreamPayload> _parser = new pb::MessageParser<DownstreamPayload>(() => new DownstreamPayload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DownstreamPayload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DownstreamPayload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DownstreamPayload(DownstreamPayload other) : this() {
          command_ = other.command_;
          seqId_ = other.seqId_;
          errorCode_ = other.errorCode_;
          payloadData_ = other.payloadData_;
          errorMsg_ = other.errorMsg_;
          errorData_ = other.errorData_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DownstreamPayload Clone() {
          return new DownstreamPayload(this);
        }

        /// <summary>Field number for the "command" field.</summary>
        public const int CommandFieldNumber = 1;
        private string command_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Command {
          get { return command_; }
          set {
            command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "errorCode" field.</summary>
        public const int ErrorCodeFieldNumber = 3;
        private int errorCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ErrorCode {
          get { return errorCode_; }
          set {
            errorCode_ = value;
          }
        }

        /// <summary>Field number for the "payloadData" field.</summary>
        public const int PayloadDataFieldNumber = 4;
        private pb::ByteString payloadData_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PayloadData {
          get { return payloadData_; }
          set {
            payloadData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "errorMsg" field.</summary>
        public const int ErrorMsgFieldNumber = 5;
        private string errorMsg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ErrorMsg {
          get { return errorMsg_; }
          set {
            errorMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "errorData" field.</summary>
        public const int ErrorDataFieldNumber = 6;
        private pb::ByteString errorData_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ErrorData {
          get { return errorData_; }
          set {
            errorData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DownstreamPayload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DownstreamPayload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Command != other.Command) return false;
          if (SeqId != other.SeqId) return false;
          if (ErrorCode != other.ErrorCode) return false;
          if (PayloadData != other.PayloadData) return false;
          if (ErrorMsg != other.ErrorMsg) return false;
          if (ErrorData != other.ErrorData) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Command.Length != 0) hash ^= Command.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
          if (PayloadData.Length != 0) hash ^= PayloadData.GetHashCode();
          if (ErrorMsg.Length != 0) hash ^= ErrorMsg.GetHashCode();
          if (ErrorData.Length != 0) hash ^= ErrorData.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Command.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Command);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (ErrorCode != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(ErrorCode);
          }
          if (PayloadData.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(PayloadData);
          }
          if (ErrorMsg.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ErrorMsg);
          }
          if (ErrorData.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(ErrorData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Command.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Command);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (ErrorCode != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(ErrorCode);
          }
          if (PayloadData.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(PayloadData);
          }
          if (ErrorMsg.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ErrorMsg);
          }
          if (ErrorData.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(ErrorData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Command.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (ErrorCode != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
          }
          if (PayloadData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PayloadData);
          }
          if (ErrorMsg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMsg);
          }
          if (ErrorData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ErrorData);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DownstreamPayload other) {
          if (other == null) {
            return;
          }
          if (other.Command.Length != 0) {
            Command = other.Command;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.ErrorCode != 0) {
            ErrorCode = other.ErrorCode;
          }
          if (other.PayloadData.Length != 0) {
            PayloadData = other.PayloadData;
          }
          if (other.ErrorMsg.Length != 0) {
            ErrorMsg = other.ErrorMsg;
          }
          if (other.ErrorData.Length != 0) {
            ErrorData = other.ErrorData;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Command = input.ReadString();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                ErrorCode = input.ReadInt32();
                break;
              }
              case 34: {
                PayloadData = input.ReadBytes();
                break;
              }
              case 42: {
                ErrorMsg = input.ReadString();
                break;
              }
              case 50: {
                ErrorData = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Command = input.ReadString();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                ErrorCode = input.ReadInt32();
                break;
              }
              case 34: {
                PayloadData = input.ReadBytes();
                break;
              }
              case 42: {
                ErrorMsg = input.ReadString();
                break;
              }
              case 50: {
                ErrorData = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PingRequest : pb::IMessage<PingRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest(PingRequest other) : this() {
          pingType_ = other.pingType_;
          pingRound_ = other.pingRound_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest Clone() {
          return new PingRequest(this);
        }

        /// <summary>Field number for the "pingType" field.</summary>
        public const int PingTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType pingType_ = global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType PingType {
          get { return pingType_; }
          set {
            pingType_ = value;
          }
        }

        /// <summary>Field number for the "pingRound" field.</summary>
        public const int PingRoundFieldNumber = 2;
        private uint pingRound_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PingRound {
          get { return pingRound_; }
          set {
            pingRound_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PingRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PingRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PingType != other.PingType) return false;
          if (PingRound != other.PingRound) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) hash ^= PingType.GetHashCode();
          if (PingRound != 0) hash ^= PingRound.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PingType);
          }
          if (PingRound != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(PingRound);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PingType);
          }
          if (PingRound != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(PingRound);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PingType);
          }
          if (PingRound != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingRound);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PingRequest other) {
          if (other == null) {
            return;
          }
          if (other.PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) {
            PingType = other.PingType;
          }
          if (other.PingRound != 0) {
            PingRound = other.PingRound;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PingType = (global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType) input.ReadEnum();
                break;
              }
              case 16: {
                PingRound = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PingType = (global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType) input.ReadEnum();
                break;
              }
              case 16: {
                PingRound = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the PingRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PingType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kPriorRegister")] KPriorRegister = 1,
            [pbr::OriginalName("kPostRegister")] KPostRegister = 2,
          }

        }
        #endregion

      }

      public sealed partial class PingResponse : pb::IMessage<PingResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PingResponse> _parser = new pb::MessageParser<PingResponse>(() => new PingResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PingResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingResponse(PingResponse other) : this() {
          serverTimestamp_ = other.serverTimestamp_;
          clientIp_ = other.clientIp_;
          redirectIp_ = other.redirectIp_;
          redirectPort_ = other.redirectPort_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingResponse Clone() {
          return new PingResponse(this);
        }

        /// <summary>Field number for the "serverTimestamp" field.</summary>
        public const int ServerTimestampFieldNumber = 1;
        private int serverTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ServerTimestamp {
          get { return serverTimestamp_; }
          set {
            serverTimestamp_ = value;
          }
        }

        /// <summary>Field number for the "clientIp" field.</summary>
        public const int ClientIpFieldNumber = 2;
        private uint clientIp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ClientIp {
          get { return clientIp_; }
          set {
            clientIp_ = value;
          }
        }

        /// <summary>Field number for the "redirectIp" field.</summary>
        public const int RedirectIpFieldNumber = 3;
        private uint redirectIp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RedirectIp {
          get { return redirectIp_; }
          set {
            redirectIp_ = value;
          }
        }

        /// <summary>Field number for the "redirectPort" field.</summary>
        public const int RedirectPortFieldNumber = 4;
        private uint redirectPort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RedirectPort {
          get { return redirectPort_; }
          set {
            redirectPort_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PingResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PingResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ServerTimestamp != other.ServerTimestamp) return false;
          if (ClientIp != other.ClientIp) return false;
          if (RedirectIp != other.RedirectIp) return false;
          if (RedirectPort != other.RedirectPort) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ServerTimestamp != 0) hash ^= ServerTimestamp.GetHashCode();
          if (ClientIp != 0) hash ^= ClientIp.GetHashCode();
          if (RedirectIp != 0) hash ^= RedirectIp.GetHashCode();
          if (RedirectPort != 0) hash ^= RedirectPort.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ServerTimestamp != 0) {
            output.WriteRawTag(13);
            output.WriteSFixed32(ServerTimestamp);
          }
          if (ClientIp != 0) {
            output.WriteRawTag(21);
            output.WriteFixed32(ClientIp);
          }
          if (RedirectIp != 0) {
            output.WriteRawTag(29);
            output.WriteFixed32(RedirectIp);
          }
          if (RedirectPort != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(RedirectPort);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ServerTimestamp != 0) {
            output.WriteRawTag(13);
            output.WriteSFixed32(ServerTimestamp);
          }
          if (ClientIp != 0) {
            output.WriteRawTag(21);
            output.WriteFixed32(ClientIp);
          }
          if (RedirectIp != 0) {
            output.WriteRawTag(29);
            output.WriteFixed32(RedirectIp);
          }
          if (RedirectPort != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(RedirectPort);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ServerTimestamp != 0) {
            size += 1 + 4;
          }
          if (ClientIp != 0) {
            size += 1 + 4;
          }
          if (RedirectIp != 0) {
            size += 1 + 4;
          }
          if (RedirectPort != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedirectPort);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PingResponse other) {
          if (other == null) {
            return;
          }
          if (other.ServerTimestamp != 0) {
            ServerTimestamp = other.ServerTimestamp;
          }
          if (other.ClientIp != 0) {
            ClientIp = other.ClientIp;
          }
          if (other.RedirectIp != 0) {
            RedirectIp = other.RedirectIp;
          }
          if (other.RedirectPort != 0) {
            RedirectPort = other.RedirectPort;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                ServerTimestamp = input.ReadSFixed32();
                break;
              }
              case 21: {
                ClientIp = input.ReadFixed32();
                break;
              }
              case 29: {
                RedirectIp = input.ReadFixed32();
                break;
              }
              case 32: {
                RedirectPort = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 13: {
                ServerTimestamp = input.ReadSFixed32();
                break;
              }
              case 21: {
                ClientIp = input.ReadFixed32();
                break;
              }
              case 29: {
                RedirectIp = input.ReadFixed32();
                break;
              }
              case 32: {
                RedirectPort = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RegisterRequest : pb::IMessage<RegisterRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RegisterRequest> _parser = new pb::MessageParser<RegisterRequest>(() => new RegisterRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RegisterRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterRequest(RegisterRequest other) : this() {
          appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
          deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
          envInfo_ = other.envInfo_ != null ? other.envInfo_.Clone() : null;
          presenceStatus_ = other.presenceStatus_;
          appActiveStatus_ = other.appActiveStatus_;
          appCustomStatus_ = other.appCustomStatus_;
          pushServiceToken_ = other.pushServiceToken_ != null ? other.pushServiceToken_.Clone() : null;
          instanceId_ = other.instanceId_;
          pushServiceTokenList_ = other.pushServiceTokenList_.Clone();
          keepaliveIntervalSec_ = other.keepaliveIntervalSec_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterRequest Clone() {
          return new RegisterRequest(this);
        }

        /// <summary>Field number for the "appInfo" field.</summary>
        public const int AppInfoFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AppInfo appInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AppInfo AppInfo {
          get { return appInfo_; }
          set {
            appInfo_ = value;
          }
        }

        /// <summary>Field number for the "deviceInfo" field.</summary>
        public const int DeviceInfoFieldNumber = 2;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo deviceInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo DeviceInfo {
          get { return deviceInfo_; }
          set {
            deviceInfo_ = value;
          }
        }

        /// <summary>Field number for the "envInfo" field.</summary>
        public const int EnvInfoFieldNumber = 3;
        private global::AcFunDanmu.Im.Basic.Types.EnvInfo envInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.EnvInfo EnvInfo {
          get { return envInfo_; }
          set {
            envInfo_ = value;
          }
        }

        /// <summary>Field number for the "presenceStatus" field.</summary>
        public const int PresenceStatusFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus presenceStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus PresenceStatus {
          get { return presenceStatus_; }
          set {
            presenceStatus_ = value;
          }
        }

        /// <summary>Field number for the "appActiveStatus" field.</summary>
        public const int AppActiveStatusFieldNumber = 5;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus appActiveStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus AppActiveStatus {
          get { return appActiveStatus_; }
          set {
            appActiveStatus_ = value;
          }
        }

        /// <summary>Field number for the "appCustomStatus" field.</summary>
        public const int AppCustomStatusFieldNumber = 6;
        private pb::ByteString appCustomStatus_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString AppCustomStatus {
          get { return appCustomStatus_; }
          set {
            appCustomStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pushServiceToken" field.</summary>
        public const int PushServiceTokenFieldNumber = 7;
        private global::AcFunDanmu.Im.Basic.Types.PushServiceToken pushServiceToken_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PushServiceToken PushServiceToken {
          get { return pushServiceToken_; }
          set {
            pushServiceToken_ = value;
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 8;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        /// <summary>Field number for the "pushServiceTokenList" field.</summary>
        public const int PushServiceTokenListFieldNumber = 9;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> _repeated_pushServiceTokenList_codec
            = pb::FieldCodec.ForMessage(74, global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> pushServiceTokenList_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> PushServiceTokenList {
          get { return pushServiceTokenList_; }
        }

        /// <summary>Field number for the "keepaliveIntervalSec" field.</summary>
        public const int KeepaliveIntervalSecFieldNumber = 10;
        private int keepaliveIntervalSec_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int KeepaliveIntervalSec {
          get { return keepaliveIntervalSec_; }
          set {
            keepaliveIntervalSec_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RegisterRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RegisterRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AppInfo, other.AppInfo)) return false;
          if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
          if (!object.Equals(EnvInfo, other.EnvInfo)) return false;
          if (PresenceStatus != other.PresenceStatus) return false;
          if (AppActiveStatus != other.AppActiveStatus) return false;
          if (AppCustomStatus != other.AppCustomStatus) return false;
          if (!object.Equals(PushServiceToken, other.PushServiceToken)) return false;
          if (InstanceId != other.InstanceId) return false;
          if(!pushServiceTokenList_.Equals(other.pushServiceTokenList_)) return false;
          if (KeepaliveIntervalSec != other.KeepaliveIntervalSec) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
          if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
          if (envInfo_ != null) hash ^= EnvInfo.GetHashCode();
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) hash ^= PresenceStatus.GetHashCode();
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) hash ^= AppActiveStatus.GetHashCode();
          if (AppCustomStatus.Length != 0) hash ^= AppCustomStatus.GetHashCode();
          if (pushServiceToken_ != null) hash ^= PushServiceToken.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          hash ^= pushServiceTokenList_.GetHashCode();
          if (KeepaliveIntervalSec != 0) hash ^= KeepaliveIntervalSec.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (appInfo_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AppInfo);
          }
          if (deviceInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DeviceInfo);
          }
          if (envInfo_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(EnvInfo);
          }
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            output.WriteRawTag(32);
            output.WriteEnum((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            output.WriteRawTag(40);
            output.WriteEnum((int) AppActiveStatus);
          }
          if (AppCustomStatus.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(AppCustomStatus);
          }
          if (pushServiceToken_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(PushServiceToken);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(InstanceId);
          }
          pushServiceTokenList_.WriteTo(output, _repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (appInfo_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AppInfo);
          }
          if (deviceInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DeviceInfo);
          }
          if (envInfo_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(EnvInfo);
          }
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            output.WriteRawTag(32);
            output.WriteEnum((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            output.WriteRawTag(40);
            output.WriteEnum((int) AppActiveStatus);
          }
          if (AppCustomStatus.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(AppCustomStatus);
          }
          if (pushServiceToken_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(PushServiceToken);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(InstanceId);
          }
          pushServiceTokenList_.WriteTo(ref output, _repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (appInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
          }
          if (deviceInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
          }
          if (envInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvInfo);
          }
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppActiveStatus);
          }
          if (AppCustomStatus.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppCustomStatus);
          }
          if (pushServiceToken_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushServiceToken);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          size += pushServiceTokenList_.CalculateSize(_repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RegisterRequest other) {
          if (other == null) {
            return;
          }
          if (other.appInfo_ != null) {
            if (appInfo_ == null) {
              AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
            }
            AppInfo.MergeFrom(other.AppInfo);
          }
          if (other.deviceInfo_ != null) {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
            }
            DeviceInfo.MergeFrom(other.DeviceInfo);
          }
          if (other.envInfo_ != null) {
            if (envInfo_ == null) {
              EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
            }
            EnvInfo.MergeFrom(other.EnvInfo);
          }
          if (other.PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            PresenceStatus = other.PresenceStatus;
          }
          if (other.AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            AppActiveStatus = other.AppActiveStatus;
          }
          if (other.AppCustomStatus.Length != 0) {
            AppCustomStatus = other.AppCustomStatus;
          }
          if (other.pushServiceToken_ != null) {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
            }
            PushServiceToken.MergeFrom(other.PushServiceToken);
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          pushServiceTokenList_.Add(other.pushServiceTokenList_);
          if (other.KeepaliveIntervalSec != 0) {
            KeepaliveIntervalSec = other.KeepaliveIntervalSec;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (appInfo_ == null) {
                  AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
                }
                input.ReadMessage(AppInfo);
                break;
              }
              case 18: {
                if (deviceInfo_ == null) {
                  DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
                }
                input.ReadMessage(DeviceInfo);
                break;
              }
              case 26: {
                if (envInfo_ == null) {
                  EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
                }
                input.ReadMessage(EnvInfo);
                break;
              }
              case 32: {
                PresenceStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
                break;
              }
              case 40: {
                AppActiveStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
                break;
              }
              case 50: {
                AppCustomStatus = input.ReadBytes();
                break;
              }
              case 58: {
                if (pushServiceToken_ == null) {
                  PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
                }
                input.ReadMessage(PushServiceToken);
                break;
              }
              case 64: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 74: {
                pushServiceTokenList_.AddEntriesFrom(input, _repeated_pushServiceTokenList_codec);
                break;
              }
              case 80: {
                KeepaliveIntervalSec = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (appInfo_ == null) {
                  AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
                }
                input.ReadMessage(AppInfo);
                break;
              }
              case 18: {
                if (deviceInfo_ == null) {
                  DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
                }
                input.ReadMessage(DeviceInfo);
                break;
              }
              case 26: {
                if (envInfo_ == null) {
                  EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
                }
                input.ReadMessage(EnvInfo);
                break;
              }
              case 32: {
                PresenceStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
                break;
              }
              case 40: {
                AppActiveStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
                break;
              }
              case 50: {
                AppCustomStatus = input.ReadBytes();
                break;
              }
              case 58: {
                if (pushServiceToken_ == null) {
                  PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
                }
                input.ReadMessage(PushServiceToken);
                break;
              }
              case 64: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 74: {
                pushServiceTokenList_.AddEntriesFrom(ref input, _repeated_pushServiceTokenList_codec);
                break;
              }
              case 80: {
                KeepaliveIntervalSec = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the RegisterRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PresenceStatus {
            [pbr::OriginalName("kPresenceOffline")] KPresenceOffline = 0,
            [pbr::OriginalName("kPresenceOnline")] KPresenceOnline = 1,
          }

          public enum ActiveStatus {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kAppInForeground")] KAppInForeground = 1,
            [pbr::OriginalName("kAppinBackground")] KAppinBackground = 2,
          }

        }
        #endregion

      }

      public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterResponse(RegisterResponse other) : this() {
          accessPointsConfig_ = other.accessPointsConfig_ != null ? other.accessPointsConfig_.Clone() : null;
          sessKey_ = other.sessKey_;
          instanceId_ = other.instanceId_;
          sdkOption_ = other.sdkOption_ != null ? other.sdkOption_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterResponse Clone() {
          return new RegisterResponse(this);
        }

        /// <summary>Field number for the "accessPointsConfig" field.</summary>
        public const int AccessPointsConfigFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig accessPointsConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig AccessPointsConfig {
          get { return accessPointsConfig_; }
          set {
            accessPointsConfig_ = value;
          }
        }

        /// <summary>Field number for the "sessKey" field.</summary>
        public const int SessKeyFieldNumber = 2;
        private pb::ByteString sessKey_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString SessKey {
          get { return sessKey_; }
          set {
            sessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 3;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        /// <summary>Field number for the "sdkOption" field.</summary>
        public const int SdkOptionFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.SdkOption sdkOption_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SdkOption SdkOption {
          get { return sdkOption_; }
          set {
            sdkOption_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RegisterResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RegisterResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AccessPointsConfig, other.AccessPointsConfig)) return false;
          if (SessKey != other.SessKey) return false;
          if (InstanceId != other.InstanceId) return false;
          if (!object.Equals(SdkOption, other.SdkOption)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (accessPointsConfig_ != null) hash ^= AccessPointsConfig.GetHashCode();
          if (SessKey.Length != 0) hash ^= SessKey.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          if (sdkOption_ != null) hash ^= SdkOption.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (accessPointsConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AccessPointsConfig);
          }
          if (SessKey.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(SessKey);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InstanceId);
          }
          if (sdkOption_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SdkOption);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (accessPointsConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AccessPointsConfig);
          }
          if (SessKey.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(SessKey);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InstanceId);
          }
          if (sdkOption_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SdkOption);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (accessPointsConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsConfig);
          }
          if (SessKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(SessKey);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          if (sdkOption_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SdkOption);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RegisterResponse other) {
          if (other == null) {
            return;
          }
          if (other.accessPointsConfig_ != null) {
            if (accessPointsConfig_ == null) {
              AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
            }
            AccessPointsConfig.MergeFrom(other.AccessPointsConfig);
          }
          if (other.SessKey.Length != 0) {
            SessKey = other.SessKey;
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          if (other.sdkOption_ != null) {
            if (sdkOption_ == null) {
              SdkOption = new global::AcFunDanmu.Im.Basic.Types.SdkOption();
            }
            SdkOption.MergeFrom(other.SdkOption);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (accessPointsConfig_ == null) {
                  AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsConfig);
                break;
              }
              case 18: {
                SessKey = input.ReadBytes();
                break;
              }
              case 24: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 34: {
                if (sdkOption_ == null) {
                  SdkOption = new global::AcFunDanmu.Im.Basic.Types.SdkOption();
                }
                input.ReadMessage(SdkOption);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (accessPointsConfig_ == null) {
                  AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsConfig);
                break;
              }
              case 18: {
                SessKey = input.ReadBytes();
                break;
              }
              case 24: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 34: {
                if (sdkOption_ == null) {
                  SdkOption = new global::AcFunDanmu.Im.Basic.Types.SdkOption();
                }
                input.ReadMessage(SdkOption);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AccessPointsConfig : pb::IMessage<AccessPointsConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AccessPointsConfig> _parser = new pb::MessageParser<AccessPointsConfig>(() => new AccessPointsConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AccessPointsConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPointsConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPointsConfig(AccessPointsConfig other) : this() {
          optimalAps_ = other.optimalAps_.Clone();
          backupAps_ = other.backupAps_.Clone();
          availablePorts_ = other.availablePorts_.Clone();
          foreceLastConnectedAp_ = other.foreceLastConnectedAp_ != null ? other.foreceLastConnectedAp_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPointsConfig Clone() {
          return new AccessPointsConfig(this);
        }

        /// <summary>Field number for the "optimalAps" field.</summary>
        public const int OptimalApsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.AccessPoint> _repeated_optimalAps_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.AccessPoint.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> optimalAps_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> OptimalAps {
          get { return optimalAps_; }
        }

        /// <summary>Field number for the "backupAps" field.</summary>
        public const int BackupApsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.AccessPoint> _repeated_backupAps_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.AccessPoint.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> backupAps_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> BackupAps {
          get { return backupAps_; }
        }

        /// <summary>Field number for the "availablePorts" field.</summary>
        public const int AvailablePortsFieldNumber = 3;
        private static readonly pb::FieldCodec<uint> _repeated_availablePorts_codec
            = pb::FieldCodec.ForUInt32(26);
        private readonly pbc::RepeatedField<uint> availablePorts_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> AvailablePorts {
          get { return availablePorts_; }
        }

        /// <summary>Field number for the "foreceLastConnectedAp" field.</summary>
        public const int ForeceLastConnectedApFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.AccessPoint foreceLastConnectedAp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPoint ForeceLastConnectedAp {
          get { return foreceLastConnectedAp_; }
          set {
            foreceLastConnectedAp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AccessPointsConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AccessPointsConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!optimalAps_.Equals(other.optimalAps_)) return false;
          if(!backupAps_.Equals(other.backupAps_)) return false;
          if(!availablePorts_.Equals(other.availablePorts_)) return false;
          if (!object.Equals(ForeceLastConnectedAp, other.ForeceLastConnectedAp)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= optimalAps_.GetHashCode();
          hash ^= backupAps_.GetHashCode();
          hash ^= availablePorts_.GetHashCode();
          if (foreceLastConnectedAp_ != null) hash ^= ForeceLastConnectedAp.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          optimalAps_.WriteTo(output, _repeated_optimalAps_codec);
          backupAps_.WriteTo(output, _repeated_backupAps_codec);
          availablePorts_.WriteTo(output, _repeated_availablePorts_codec);
          if (foreceLastConnectedAp_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(ForeceLastConnectedAp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          optimalAps_.WriteTo(ref output, _repeated_optimalAps_codec);
          backupAps_.WriteTo(ref output, _repeated_backupAps_codec);
          availablePorts_.WriteTo(ref output, _repeated_availablePorts_codec);
          if (foreceLastConnectedAp_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(ForeceLastConnectedAp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += optimalAps_.CalculateSize(_repeated_optimalAps_codec);
          size += backupAps_.CalculateSize(_repeated_backupAps_codec);
          size += availablePorts_.CalculateSize(_repeated_availablePorts_codec);
          if (foreceLastConnectedAp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForeceLastConnectedAp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AccessPointsConfig other) {
          if (other == null) {
            return;
          }
          optimalAps_.Add(other.optimalAps_);
          backupAps_.Add(other.backupAps_);
          availablePorts_.Add(other.availablePorts_);
          if (other.foreceLastConnectedAp_ != null) {
            if (foreceLastConnectedAp_ == null) {
              ForeceLastConnectedAp = new global::AcFunDanmu.Im.Basic.Types.AccessPoint();
            }
            ForeceLastConnectedAp.MergeFrom(other.ForeceLastConnectedAp);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                optimalAps_.AddEntriesFrom(input, _repeated_optimalAps_codec);
                break;
              }
              case 18: {
                backupAps_.AddEntriesFrom(input, _repeated_backupAps_codec);
                break;
              }
              case 26:
              case 24: {
                availablePorts_.AddEntriesFrom(input, _repeated_availablePorts_codec);
                break;
              }
              case 34: {
                if (foreceLastConnectedAp_ == null) {
                  ForeceLastConnectedAp = new global::AcFunDanmu.Im.Basic.Types.AccessPoint();
                }
                input.ReadMessage(ForeceLastConnectedAp);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                optimalAps_.AddEntriesFrom(ref input, _repeated_optimalAps_codec);
                break;
              }
              case 18: {
                backupAps_.AddEntriesFrom(ref input, _repeated_backupAps_codec);
                break;
              }
              case 26:
              case 24: {
                availablePorts_.AddEntriesFrom(ref input, _repeated_availablePorts_codec);
                break;
              }
              case 34: {
                if (foreceLastConnectedAp_ == null) {
                  ForeceLastConnectedAp = new global::AcFunDanmu.Im.Basic.Types.AccessPoint();
                }
                input.ReadMessage(ForeceLastConnectedAp);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class UnregisterRequest : pb::IMessage<UnregisterRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UnregisterRequest> _parser = new pb::MessageParser<UnregisterRequest>(() => new UnregisterRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UnregisterRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterRequest(UnregisterRequest other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterRequest Clone() {
          return new UnregisterRequest(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UnregisterRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UnregisterRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UnregisterRequest other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class UnregisterResponse : pb::IMessage<UnregisterResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UnregisterResponse> _parser = new pb::MessageParser<UnregisterResponse>(() => new UnregisterResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UnregisterResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterResponse(UnregisterResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterResponse Clone() {
          return new UnregisterResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UnregisterResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UnregisterResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UnregisterResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class KeepAliveRequest : pb::IMessage<KeepAliveRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<KeepAliveRequest> _parser = new pb::MessageParser<KeepAliveRequest>(() => new KeepAliveRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KeepAliveRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveRequest(KeepAliveRequest other) : this() {
          presenceStatus_ = other.presenceStatus_;
          appActiveStatus_ = other.appActiveStatus_;
          pushServiceToken_ = other.pushServiceToken_ != null ? other.pushServiceToken_.Clone() : null;
          pushServiceTokenList_ = other.pushServiceTokenList_.Clone();
          keepaliveIntervalSec_ = other.keepaliveIntervalSec_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveRequest Clone() {
          return new KeepAliveRequest(this);
        }

        /// <summary>Field number for the "presenceStatus" field.</summary>
        public const int PresenceStatusFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus presenceStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus PresenceStatus {
          get { return presenceStatus_; }
          set {
            presenceStatus_ = value;
          }
        }

        /// <summary>Field number for the "appActiveStatus" field.</summary>
        public const int AppActiveStatusFieldNumber = 2;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus appActiveStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus AppActiveStatus {
          get { return appActiveStatus_; }
          set {
            appActiveStatus_ = value;
          }
        }

        /// <summary>Field number for the "pushServiceToken" field.</summary>
        public const int PushServiceTokenFieldNumber = 3;
        private global::AcFunDanmu.Im.Basic.Types.PushServiceToken pushServiceToken_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PushServiceToken PushServiceToken {
          get { return pushServiceToken_; }
          set {
            pushServiceToken_ = value;
          }
        }

        /// <summary>Field number for the "pushServiceTokenList" field.</summary>
        public const int PushServiceTokenListFieldNumber = 4;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> _repeated_pushServiceTokenList_codec
            = pb::FieldCodec.ForMessage(34, global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> pushServiceTokenList_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> PushServiceTokenList {
          get { return pushServiceTokenList_; }
        }

        /// <summary>Field number for the "keepaliveIntervalSec" field.</summary>
        public const int KeepaliveIntervalSecFieldNumber = 5;
        private int keepaliveIntervalSec_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int KeepaliveIntervalSec {
          get { return keepaliveIntervalSec_; }
          set {
            keepaliveIntervalSec_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KeepAliveRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KeepAliveRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PresenceStatus != other.PresenceStatus) return false;
          if (AppActiveStatus != other.AppActiveStatus) return false;
          if (!object.Equals(PushServiceToken, other.PushServiceToken)) return false;
          if(!pushServiceTokenList_.Equals(other.pushServiceTokenList_)) return false;
          if (KeepaliveIntervalSec != other.KeepaliveIntervalSec) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) hash ^= PresenceStatus.GetHashCode();
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) hash ^= AppActiveStatus.GetHashCode();
          if (pushServiceToken_ != null) hash ^= PushServiceToken.GetHashCode();
          hash ^= pushServiceTokenList_.GetHashCode();
          if (KeepaliveIntervalSec != 0) hash ^= KeepaliveIntervalSec.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            output.WriteRawTag(16);
            output.WriteEnum((int) AppActiveStatus);
          }
          if (pushServiceToken_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(PushServiceToken);
          }
          pushServiceTokenList_.WriteTo(output, _repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            output.WriteRawTag(16);
            output.WriteEnum((int) AppActiveStatus);
          }
          if (pushServiceToken_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(PushServiceToken);
          }
          pushServiceTokenList_.WriteTo(ref output, _repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppActiveStatus);
          }
          if (pushServiceToken_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushServiceToken);
          }
          size += pushServiceTokenList_.CalculateSize(_repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KeepAliveRequest other) {
          if (other == null) {
            return;
          }
          if (other.PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            PresenceStatus = other.PresenceStatus;
          }
          if (other.AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            AppActiveStatus = other.AppActiveStatus;
          }
          if (other.pushServiceToken_ != null) {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
            }
            PushServiceToken.MergeFrom(other.PushServiceToken);
          }
          pushServiceTokenList_.Add(other.pushServiceTokenList_);
          if (other.KeepaliveIntervalSec != 0) {
            KeepaliveIntervalSec = other.KeepaliveIntervalSec;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PresenceStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
                break;
              }
              case 16: {
                AppActiveStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
                break;
              }
              case 26: {
                if (pushServiceToken_ == null) {
                  PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
                }
                input.ReadMessage(PushServiceToken);
                break;
              }
              case 34: {
                pushServiceTokenList_.AddEntriesFrom(input, _repeated_pushServiceTokenList_codec);
                break;
              }
              case 40: {
                KeepaliveIntervalSec = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PresenceStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
                break;
              }
              case 16: {
                AppActiveStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
                break;
              }
              case 26: {
                if (pushServiceToken_ == null) {
                  PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
                }
                input.ReadMessage(PushServiceToken);
                break;
              }
              case 34: {
                pushServiceTokenList_.AddEntriesFrom(ref input, _repeated_pushServiceTokenList_codec);
                break;
              }
              case 40: {
                KeepaliveIntervalSec = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class KeepAliveResponse : pb::IMessage<KeepAliveResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<KeepAliveResponse> _parser = new pb::MessageParser<KeepAliveResponse>(() => new KeepAliveResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KeepAliveResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveResponse(KeepAliveResponse other) : this() {
          accessPointsConfig_ = other.accessPointsConfig_ != null ? other.accessPointsConfig_.Clone() : null;
          serverMsec_ = other.serverMsec_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveResponse Clone() {
          return new KeepAliveResponse(this);
        }

        /// <summary>Field number for the "accessPointsConfig" field.</summary>
        public const int AccessPointsConfigFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig accessPointsConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig AccessPointsConfig {
          get { return accessPointsConfig_; }
          set {
            accessPointsConfig_ = value;
          }
        }

        /// <summary>Field number for the "serverMsec" field.</summary>
        public const int ServerMsecFieldNumber = 2;
        private long serverMsec_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerMsec {
          get { return serverMsec_; }
          set {
            serverMsec_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KeepAliveResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KeepAliveResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AccessPointsConfig, other.AccessPointsConfig)) return false;
          if (ServerMsec != other.ServerMsec) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (accessPointsConfig_ != null) hash ^= AccessPointsConfig.GetHashCode();
          if (ServerMsec != 0L) hash ^= ServerMsec.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (accessPointsConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AccessPointsConfig);
          }
          if (ServerMsec != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ServerMsec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (accessPointsConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AccessPointsConfig);
          }
          if (ServerMsec != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ServerMsec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (accessPointsConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsConfig);
          }
          if (ServerMsec != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerMsec);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KeepAliveResponse other) {
          if (other == null) {
            return;
          }
          if (other.accessPointsConfig_ != null) {
            if (accessPointsConfig_ == null) {
              AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
            }
            AccessPointsConfig.MergeFrom(other.AccessPointsConfig);
          }
          if (other.ServerMsec != 0L) {
            ServerMsec = other.ServerMsec;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (accessPointsConfig_ == null) {
                  AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsConfig);
                break;
              }
              case 16: {
                ServerMsec = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (accessPointsConfig_ == null) {
                  AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsConfig);
                break;
              }
              case 16: {
                ServerMsec = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AccessPoint : pb::IMessage<AccessPoint>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AccessPoint> _parser = new pb::MessageParser<AccessPoint>(() => new AccessPoint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AccessPoint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPoint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPoint(AccessPoint other) : this() {
          addressType_ = other.addressType_;
          port_ = other.port_;
          ipV4_ = other.ipV4_;
          ipV6_ = other.ipV6_;
          domain_ = other.domain_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPoint Clone() {
          return new AccessPoint(this);
        }

        /// <summary>Field number for the "addressType" field.</summary>
        public const int AddressTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType addressType_ = global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType AddressType {
          get { return addressType_; }
          set {
            addressType_ = value;
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private uint port_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        /// <summary>Field number for the "ipV4" field.</summary>
        public const int IpV4FieldNumber = 3;
        private uint ipV4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint IpV4 {
          get { return ipV4_; }
          set {
            ipV4_ = value;
          }
        }

        /// <summary>Field number for the "ipV6" field.</summary>
        public const int IpV6FieldNumber = 4;
        private pb::ByteString ipV6_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString IpV6 {
          get { return ipV6_; }
          set {
            ipV6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "domain" field.</summary>
        public const int DomainFieldNumber = 5;
        private string domain_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Domain {
          get { return domain_; }
          set {
            domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AccessPoint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AccessPoint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AddressType != other.AddressType) return false;
          if (Port != other.Port) return false;
          if (IpV4 != other.IpV4) return false;
          if (IpV6 != other.IpV6) return false;
          if (Domain != other.Domain) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) hash ^= AddressType.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (IpV4 != 0) hash ^= IpV4.GetHashCode();
          if (IpV6.Length != 0) hash ^= IpV6.GetHashCode();
          if (Domain.Length != 0) hash ^= Domain.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) {
            output.WriteRawTag(8);
            output.WriteEnum((int) AddressType);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Port);
          }
          if (IpV4 != 0) {
            output.WriteRawTag(29);
            output.WriteFixed32(IpV4);
          }
          if (IpV6.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(IpV6);
          }
          if (Domain.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Domain);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) {
            output.WriteRawTag(8);
            output.WriteEnum((int) AddressType);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Port);
          }
          if (IpV4 != 0) {
            output.WriteRawTag(29);
            output.WriteFixed32(IpV4);
          }
          if (IpV6.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(IpV6);
          }
          if (Domain.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Domain);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AddressType);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
          }
          if (IpV4 != 0) {
            size += 1 + 4;
          }
          if (IpV6.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(IpV6);
          }
          if (Domain.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AccessPoint other) {
          if (other == null) {
            return;
          }
          if (other.AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) {
            AddressType = other.AddressType;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          if (other.IpV4 != 0) {
            IpV4 = other.IpV4;
          }
          if (other.IpV6.Length != 0) {
            IpV6 = other.IpV6;
          }
          if (other.Domain.Length != 0) {
            Domain = other.Domain;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AddressType = (global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType) input.ReadEnum();
                break;
              }
              case 16: {
                Port = input.ReadUInt32();
                break;
              }
              case 29: {
                IpV4 = input.ReadFixed32();
                break;
              }
              case 34: {
                IpV6 = input.ReadBytes();
                break;
              }
              case 42: {
                Domain = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                AddressType = (global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType) input.ReadEnum();
                break;
              }
              case 16: {
                Port = input.ReadUInt32();
                break;
              }
              case 29: {
                IpV4 = input.ReadFixed32();
                break;
              }
              case 34: {
                IpV6 = input.ReadBytes();
                break;
              }
              case 42: {
                Domain = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the AccessPoint message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum AddressType {
            [pbr::OriginalName("kIPV4")] KIpv4 = 0,
            [pbr::OriginalName("kIPV6")] KIpv6 = 1,
            [pbr::OriginalName("kDomain")] KDomain = 2,
          }

        }
        #endregion

      }

      public sealed partial class TokenInfo : pb::IMessage<TokenInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TokenInfo> _parser = new pb::MessageParser<TokenInfo>(() => new TokenInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TokenInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TokenInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TokenInfo(TokenInfo other) : this() {
          tokenType_ = other.tokenType_;
          token_ = other.token_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TokenInfo Clone() {
          return new TokenInfo(this);
        }

        /// <summary>Field number for the "tokenType" field.</summary>
        public const int TokenTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType tokenType_ = global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType TokenType {
          get { return tokenType_; }
          set {
            tokenType_ = value;
          }
        }

        /// <summary>Field number for the "token" field.</summary>
        public const int TokenFieldNumber = 2;
        private pb::ByteString token_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Token {
          get { return token_; }
          set {
            token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TokenInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TokenInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TokenType != other.TokenType) return false;
          if (Token != other.Token) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) hash ^= TokenType.GetHashCode();
          if (Token.Length != 0) hash ^= Token.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) TokenType);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Token);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) TokenType);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Token);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenType);
          }
          if (Token.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TokenInfo other) {
          if (other == null) {
            return;
          }
          if (other.TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) {
            TokenType = other.TokenType;
          }
          if (other.Token.Length != 0) {
            Token = other.Token;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TokenType = (global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType) input.ReadEnum();
                break;
              }
              case 18: {
                Token = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TokenType = (global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType) input.ReadEnum();
                break;
              }
              case 18: {
                Token = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TokenInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum TokenType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kServiceToken")] KServiceToken = 1,
          }

        }
        #endregion

      }

      public sealed partial class PushServiceToken : pb::IMessage<PushServiceToken>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PushServiceToken> _parser = new pb::MessageParser<PushServiceToken>(() => new PushServiceToken());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PushServiceToken> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PushServiceToken() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PushServiceToken(PushServiceToken other) : this() {
          pushType_ = other.pushType_;
          token_ = other.token_;
          isPassThrough_ = other.isPassThrough_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PushServiceToken Clone() {
          return new PushServiceToken(this);
        }

        /// <summary>Field number for the "pushType" field.</summary>
        public const int PushTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType pushType_ = global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType PushType {
          get { return pushType_; }
          set {
            pushType_ = value;
          }
        }

        /// <summary>Field number for the "token" field.</summary>
        public const int TokenFieldNumber = 2;
        private pb::ByteString token_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Token {
          get { return token_; }
          set {
            token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isPassThrough" field.</summary>
        public const int IsPassThroughFieldNumber = 3;
        private bool isPassThrough_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsPassThrough {
          get { return isPassThrough_; }
          set {
            isPassThrough_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PushServiceToken);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PushServiceToken other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PushType != other.PushType) return false;
          if (Token != other.Token) return false;
          if (IsPassThrough != other.IsPassThrough) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) hash ^= PushType.GetHashCode();
          if (Token.Length != 0) hash ^= Token.GetHashCode();
          if (IsPassThrough != false) hash ^= IsPassThrough.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PushType);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Token);
          }
          if (IsPassThrough != false) {
            output.WriteRawTag(24);
            output.WriteBool(IsPassThrough);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PushType);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Token);
          }
          if (IsPassThrough != false) {
            output.WriteRawTag(24);
            output.WriteBool(IsPassThrough);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PushType);
          }
          if (Token.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
          }
          if (IsPassThrough != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PushServiceToken other) {
          if (other == null) {
            return;
          }
          if (other.PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) {
            PushType = other.PushType;
          }
          if (other.Token.Length != 0) {
            Token = other.Token;
          }
          if (other.IsPassThrough != false) {
            IsPassThrough = other.IsPassThrough;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PushType = (global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType) input.ReadEnum();
                break;
              }
              case 18: {
                Token = input.ReadBytes();
                break;
              }
              case 24: {
                IsPassThrough = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PushType = (global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType) input.ReadEnum();
                break;
              }
              case 18: {
                Token = input.ReadBytes();
                break;
              }
              case 24: {
                IsPassThrough = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the PushServiceToken message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PushType {
            [pbr::OriginalName("kPushTypeInvalid")] KPushTypeInvalid = 0,
            [pbr::OriginalName("kPushTypeAPNS")] KPushTypeApns = 1,
            [pbr::OriginalName("kPushTypeXmPush")] KPushTypeXmPush = 2,
            [pbr::OriginalName("kPushTypeJgPush")] KPushTypeJgPush = 3,
            [pbr::OriginalName("kPushTypeGtPUsh")] KPushTypeGtPush = 4,
            [pbr::OriginalName("kPushTypeOpPush")] KPushTypeOpPush = 5,
            [pbr::OriginalName("kPushTYpeVvPush")] KPushTypeVvPush = 6,
            [pbr::OriginalName("kPushTypeHwPush")] KPushTypeHwPush = 7,
            [pbr::OriginalName("kPushTYpeFcm")] KPushTypeFcm = 8,
          }

        }
        #endregion

      }

      public sealed partial class SettingInfo : pb::IMessage<SettingInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SettingInfo> _parser = new pb::MessageParser<SettingInfo>(() => new SettingInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SettingInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SettingInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SettingInfo(SettingInfo other) : this() {
          locale_ = other.locale_;
          timezone_ = other.timezone_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SettingInfo Clone() {
          return new SettingInfo(this);
        }

        /// <summary>Field number for the "locale" field.</summary>
        public const int LocaleFieldNumber = 1;
        private string locale_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Locale {
          get { return locale_; }
          set {
            locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "timezone" field.</summary>
        public const int TimezoneFieldNumber = 2;
        private int timezone_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Timezone {
          get { return timezone_; }
          set {
            timezone_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SettingInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SettingInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Locale != other.Locale) return false;
          if (Timezone != other.Timezone) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Locale.Length != 0) hash ^= Locale.GetHashCode();
          if (Timezone != 0) hash ^= Timezone.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Locale.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Locale);
          }
          if (Timezone != 0) {
            output.WriteRawTag(16);
            output.WriteSInt32(Timezone);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Locale.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Locale);
          }
          if (Timezone != 0) {
            output.WriteRawTag(16);
            output.WriteSInt32(Timezone);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Locale.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
          }
          if (Timezone != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Timezone);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SettingInfo other) {
          if (other == null) {
            return;
          }
          if (other.Locale.Length != 0) {
            Locale = other.Locale;
          }
          if (other.Timezone != 0) {
            Timezone = other.Timezone;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Locale = input.ReadString();
                break;
              }
              case 16: {
                Timezone = input.ReadSInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Locale = input.ReadString();
                break;
              }
              case 16: {
                Timezone = input.ReadSInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AppInfo : pb::IMessage<AppInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AppInfo> _parser = new pb::MessageParser<AppInfo>(() => new AppInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AppInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppInfo(AppInfo other) : this() {
          appName_ = other.appName_;
          appVersion_ = other.appVersion_;
          appChannel_ = other.appChannel_;
          sdkVersion_ = other.sdkVersion_;
          extensionInfo_ = other.extensionInfo_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppInfo Clone() {
          return new AppInfo(this);
        }

        /// <summary>Field number for the "appName" field.</summary>
        public const int AppNameFieldNumber = 1;
        private string appName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppName {
          get { return appName_; }
          set {
            appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appVersion" field.</summary>
        public const int AppVersionFieldNumber = 2;
        private string appVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppVersion {
          get { return appVersion_; }
          set {
            appVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appChannel" field.</summary>
        public const int AppChannelFieldNumber = 3;
        private string appChannel_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppChannel {
          get { return appChannel_; }
          set {
            appChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sdkVersion" field.</summary>
        public const int SdkVersionFieldNumber = 4;
        private string sdkVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SdkVersion {
          get { return sdkVersion_; }
          set {
            sdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "extensionInfo" field.</summary>
        public const int ExtensionInfoFieldNumber = 11;
        private string extensionInfo_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExtensionInfo {
          get { return extensionInfo_; }
          set {
            extensionInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AppInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AppInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AppName != other.AppName) return false;
          if (AppVersion != other.AppVersion) return false;
          if (AppChannel != other.AppChannel) return false;
          if (SdkVersion != other.SdkVersion) return false;
          if (ExtensionInfo != other.ExtensionInfo) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AppName.Length != 0) hash ^= AppName.GetHashCode();
          if (AppVersion.Length != 0) hash ^= AppVersion.GetHashCode();
          if (AppChannel.Length != 0) hash ^= AppChannel.GetHashCode();
          if (SdkVersion.Length != 0) hash ^= SdkVersion.GetHashCode();
          if (ExtensionInfo.Length != 0) hash ^= ExtensionInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AppName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(AppName);
          }
          if (AppVersion.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AppVersion);
          }
          if (AppChannel.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AppChannel);
          }
          if (SdkVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SdkVersion);
          }
          if (ExtensionInfo.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(ExtensionInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AppName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(AppName);
          }
          if (AppVersion.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AppVersion);
          }
          if (AppChannel.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AppChannel);
          }
          if (SdkVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SdkVersion);
          }
          if (ExtensionInfo.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(ExtensionInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AppName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
          }
          if (AppVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVersion);
          }
          if (AppChannel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppChannel);
          }
          if (SdkVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkVersion);
          }
          if (ExtensionInfo.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtensionInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AppInfo other) {
          if (other == null) {
            return;
          }
          if (other.AppName.Length != 0) {
            AppName = other.AppName;
          }
          if (other.AppVersion.Length != 0) {
            AppVersion = other.AppVersion;
          }
          if (other.AppChannel.Length != 0) {
            AppChannel = other.AppChannel;
          }
          if (other.SdkVersion.Length != 0) {
            SdkVersion = other.SdkVersion;
          }
          if (other.ExtensionInfo.Length != 0) {
            ExtensionInfo = other.ExtensionInfo;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                AppName = input.ReadString();
                break;
              }
              case 18: {
                AppVersion = input.ReadString();
                break;
              }
              case 26: {
                AppChannel = input.ReadString();
                break;
              }
              case 34: {
                SdkVersion = input.ReadString();
                break;
              }
              case 90: {
                ExtensionInfo = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                AppName = input.ReadString();
                break;
              }
              case 18: {
                AppVersion = input.ReadString();
                break;
              }
              case 26: {
                AppChannel = input.ReadString();
                break;
              }
              case 34: {
                SdkVersion = input.ReadString();
                break;
              }
              case 90: {
                ExtensionInfo = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DeviceInfo : pb::IMessage<DeviceInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DeviceInfo> _parser = new pb::MessageParser<DeviceInfo>(() => new DeviceInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeviceInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo(DeviceInfo other) : this() {
          platformType_ = other.platformType_;
          osVersion_ = other.osVersion_;
          deviceModel_ = other.deviceModel_;
          imeiMd5_ = other.imeiMd5_;
          deviceId_ = other.deviceId_;
          softDid_ = other.softDid_;
          kwaiDid_ = other.kwaiDid_;
          manufacturer_ = other.manufacturer_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo Clone() {
          return new DeviceInfo(this);
        }

        /// <summary>Field number for the "platformType" field.</summary>
        public const int PlatformTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType platformType_ = global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType PlatformType {
          get { return platformType_; }
          set {
            platformType_ = value;
          }
        }

        /// <summary>Field number for the "osVersion" field.</summary>
        public const int OsVersionFieldNumber = 2;
        private string osVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OsVersion {
          get { return osVersion_; }
          set {
            osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deviceModel" field.</summary>
        public const int DeviceModelFieldNumber = 3;
        private string deviceModel_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceModel {
          get { return deviceModel_; }
          set {
            deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "imeiMd5" field.</summary>
        public const int ImeiMd5FieldNumber = 4;
        private pb::ByteString imeiMd5_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ImeiMd5 {
          get { return imeiMd5_; }
          set {
            imeiMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deviceId" field.</summary>
        public const int DeviceIdFieldNumber = 5;
        private string deviceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "softDid" field.</summary>
        public const int SoftDidFieldNumber = 6;
        private string softDid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SoftDid {
          get { return softDid_; }
          set {
            softDid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "kwaiDid" field.</summary>
        public const int KwaiDidFieldNumber = 7;
        private string kwaiDid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string KwaiDid {
          get { return kwaiDid_; }
          set {
            kwaiDid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "manufacturer" field.</summary>
        public const int ManufacturerFieldNumber = 8;
        private string manufacturer_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Manufacturer {
          get { return manufacturer_; }
          set {
            manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeviceInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeviceInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PlatformType != other.PlatformType) return false;
          if (OsVersion != other.OsVersion) return false;
          if (DeviceModel != other.DeviceModel) return false;
          if (ImeiMd5 != other.ImeiMd5) return false;
          if (DeviceId != other.DeviceId) return false;
          if (SoftDid != other.SoftDid) return false;
          if (KwaiDid != other.KwaiDid) return false;
          if (Manufacturer != other.Manufacturer) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) hash ^= PlatformType.GetHashCode();
          if (OsVersion.Length != 0) hash ^= OsVersion.GetHashCode();
          if (DeviceModel.Length != 0) hash ^= DeviceModel.GetHashCode();
          if (ImeiMd5.Length != 0) hash ^= ImeiMd5.GetHashCode();
          if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
          if (SoftDid.Length != 0) hash ^= SoftDid.GetHashCode();
          if (KwaiDid.Length != 0) hash ^= KwaiDid.GetHashCode();
          if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PlatformType);
          }
          if (OsVersion.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OsVersion);
          }
          if (DeviceModel.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DeviceModel);
          }
          if (ImeiMd5.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(ImeiMd5);
          }
          if (DeviceId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(DeviceId);
          }
          if (SoftDid.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(SoftDid);
          }
          if (KwaiDid.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(KwaiDid);
          }
          if (Manufacturer.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Manufacturer);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PlatformType);
          }
          if (OsVersion.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OsVersion);
          }
          if (DeviceModel.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DeviceModel);
          }
          if (ImeiMd5.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(ImeiMd5);
          }
          if (DeviceId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(DeviceId);
          }
          if (SoftDid.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(SoftDid);
          }
          if (KwaiDid.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(KwaiDid);
          }
          if (Manufacturer.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Manufacturer);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlatformType);
          }
          if (OsVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
          }
          if (DeviceModel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
          }
          if (ImeiMd5.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ImeiMd5);
          }
          if (DeviceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
          }
          if (SoftDid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SoftDid);
          }
          if (KwaiDid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(KwaiDid);
          }
          if (Manufacturer.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeviceInfo other) {
          if (other == null) {
            return;
          }
          if (other.PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            PlatformType = other.PlatformType;
          }
          if (other.OsVersion.Length != 0) {
            OsVersion = other.OsVersion;
          }
          if (other.DeviceModel.Length != 0) {
            DeviceModel = other.DeviceModel;
          }
          if (other.ImeiMd5.Length != 0) {
            ImeiMd5 = other.ImeiMd5;
          }
          if (other.DeviceId.Length != 0) {
            DeviceId = other.DeviceId;
          }
          if (other.SoftDid.Length != 0) {
            SoftDid = other.SoftDid;
          }
          if (other.KwaiDid.Length != 0) {
            KwaiDid = other.KwaiDid;
          }
          if (other.Manufacturer.Length != 0) {
            Manufacturer = other.Manufacturer;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PlatformType = (global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) input.ReadEnum();
                break;
              }
              case 18: {
                OsVersion = input.ReadString();
                break;
              }
              case 26: {
                DeviceModel = input.ReadString();
                break;
              }
              case 34: {
                ImeiMd5 = input.ReadBytes();
                break;
              }
              case 42: {
                DeviceId = input.ReadString();
                break;
              }
              case 50: {
                SoftDid = input.ReadString();
                break;
              }
              case 58: {
                KwaiDid = input.ReadString();
                break;
              }
              case 66: {
                Manufacturer = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PlatformType = (global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) input.ReadEnum();
                break;
              }
              case 18: {
                OsVersion = input.ReadString();
                break;
              }
              case 26: {
                DeviceModel = input.ReadString();
                break;
              }
              case 34: {
                ImeiMd5 = input.ReadBytes();
                break;
              }
              case 42: {
                DeviceId = input.ReadString();
                break;
              }
              case 50: {
                SoftDid = input.ReadString();
                break;
              }
              case 58: {
                KwaiDid = input.ReadString();
                break;
              }
              case 66: {
                Manufacturer = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DeviceInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PlatformType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kAndroid")] KAndroid = 1,
            [pbr::OriginalName("kiOS")] KiOs = 2,
            [pbr::OriginalName("kWindows")] KWindows = 3,
            [pbr::OriginalName("WECHAT_ANDROID")] WechatAndroid = 4,
            [pbr::OriginalName("WECHAT_IOS")] WechatIos = 5,
            [pbr::OriginalName("H5")] H5 = 6,
            [pbr::OriginalName("kPlatformNum")] KPlatformNum = 7,
          }

        }
        #endregion

      }

      public sealed partial class EnvInfo : pb::IMessage<EnvInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EnvInfo> _parser = new pb::MessageParser<EnvInfo>(() => new EnvInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnvInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvInfo(EnvInfo other) : this() {
          networkType_ = other.networkType_;
          appName_ = other.appName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvInfo Clone() {
          return new EnvInfo(this);
        }

        /// <summary>Field number for the "networkType" field.</summary>
        public const int NetworkTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType networkType_ = global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType NetworkType {
          get { return networkType_; }
          set {
            networkType_ = value;
          }
        }

        /// <summary>Field number for the "appName" field.</summary>
        public const int AppNameFieldNumber = 2;
        private pb::ByteString appName_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString AppName {
          get { return appName_; }
          set {
            appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EnvInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnvInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NetworkType != other.NetworkType) return false;
          if (AppName != other.AppName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) hash ^= NetworkType.GetHashCode();
          if (AppName.Length != 0) hash ^= AppName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) NetworkType);
          }
          if (AppName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(AppName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) NetworkType);
          }
          if (AppName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(AppName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NetworkType);
          }
          if (AppName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnvInfo other) {
          if (other == null) {
            return;
          }
          if (other.NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) {
            NetworkType = other.NetworkType;
          }
          if (other.AppName.Length != 0) {
            AppName = other.AppName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                NetworkType = (global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType) input.ReadEnum();
                break;
              }
              case 18: {
                AppName = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                NetworkType = (global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType) input.ReadEnum();
                break;
              }
              case 18: {
                AppName = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the EnvInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum NetworkType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kWIFI")] KWifi = 1,
            [pbr::OriginalName("kCellular")] KCellular = 2,
          }

        }
        #endregion

      }

      public sealed partial class RequestBasicInfo : pb::IMessage<RequestBasicInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RequestBasicInfo> _parser = new pb::MessageParser<RequestBasicInfo>(() => new RequestBasicInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RequestBasicInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestBasicInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestBasicInfo(RequestBasicInfo other) : this() {
          clientType_ = other.clientType_;
          deviceId_ = other.deviceId_;
          clientIp_ = other.clientIp_;
          appVersion_ = other.appVersion_;
          channel_ = other.channel_;
          appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
          deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
          envInfo_ = other.envInfo_ != null ? other.envInfo_.Clone() : null;
          clientPort_ = other.clientPort_;
          location_ = other.location_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestBasicInfo Clone() {
          return new RequestBasicInfo(this);
        }

        /// <summary>Field number for the "clientType" field.</summary>
        public const int ClientTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType clientType_ = global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType ClientType {
          get { return clientType_; }
          set {
            clientType_ = value;
          }
        }

        /// <summary>Field number for the "deviceId" field.</summary>
        public const int DeviceIdFieldNumber = 2;
        private string deviceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clientIp" field.</summary>
        public const int ClientIpFieldNumber = 3;
        private string clientIp_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientIp {
          get { return clientIp_; }
          set {
            clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appVersion" field.</summary>
        public const int AppVersionFieldNumber = 4;
        private string appVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppVersion {
          get { return appVersion_; }
          set {
            appVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "channel" field.</summary>
        public const int ChannelFieldNumber = 5;
        private string channel_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Channel {
          get { return channel_; }
          set {
            channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appInfo" field.</summary>
        public const int AppInfoFieldNumber = 6;
        private global::AcFunDanmu.Im.Basic.Types.AppInfo appInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AppInfo AppInfo {
          get { return appInfo_; }
          set {
            appInfo_ = value;
          }
        }

        /// <summary>Field number for the "deviceInfo" field.</summary>
        public const int DeviceInfoFieldNumber = 7;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo deviceInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo DeviceInfo {
          get { return deviceInfo_; }
          set {
            deviceInfo_ = value;
          }
        }

        /// <summary>Field number for the "envInfo" field.</summary>
        public const int EnvInfoFieldNumber = 8;
        private global::AcFunDanmu.Im.Basic.Types.EnvInfo envInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.EnvInfo EnvInfo {
          get { return envInfo_; }
          set {
            envInfo_ = value;
          }
        }

        /// <summary>Field number for the "clientPort" field.</summary>
        public const int ClientPortFieldNumber = 9;
        private int clientPort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ClientPort {
          get { return clientPort_; }
          set {
            clientPort_ = value;
          }
        }

        /// <summary>Field number for the "location" field.</summary>
        public const int LocationFieldNumber = 10;
        private string location_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Location {
          get { return location_; }
          set {
            location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RequestBasicInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RequestBasicInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClientType != other.ClientType) return false;
          if (DeviceId != other.DeviceId) return false;
          if (ClientIp != other.ClientIp) return false;
          if (AppVersion != other.AppVersion) return false;
          if (Channel != other.Channel) return false;
          if (!object.Equals(AppInfo, other.AppInfo)) return false;
          if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
          if (!object.Equals(EnvInfo, other.EnvInfo)) return false;
          if (ClientPort != other.ClientPort) return false;
          if (Location != other.Location) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) hash ^= ClientType.GetHashCode();
          if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
          if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
          if (AppVersion.Length != 0) hash ^= AppVersion.GetHashCode();
          if (Channel.Length != 0) hash ^= Channel.GetHashCode();
          if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
          if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
          if (envInfo_ != null) hash ^= EnvInfo.GetHashCode();
          if (ClientPort != 0) hash ^= ClientPort.GetHashCode();
          if (Location.Length != 0) hash ^= Location.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ClientType);
          }
          if (DeviceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DeviceId);
          }
          if (ClientIp.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ClientIp);
          }
          if (AppVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AppVersion);
          }
          if (Channel.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Channel);
          }
          if (appInfo_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(AppInfo);
          }
          if (deviceInfo_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(DeviceInfo);
          }
          if (envInfo_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(EnvInfo);
          }
          if (ClientPort != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(ClientPort);
          }
          if (Location.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Location);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ClientType);
          }
          if (DeviceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DeviceId);
          }
          if (ClientIp.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ClientIp);
          }
          if (AppVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AppVersion);
          }
          if (Channel.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Channel);
          }
          if (appInfo_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(AppInfo);
          }
          if (deviceInfo_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(DeviceInfo);
          }
          if (envInfo_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(EnvInfo);
          }
          if (ClientPort != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(ClientPort);
          }
          if (Location.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Location);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientType);
          }
          if (DeviceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
          }
          if (ClientIp.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
          }
          if (AppVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVersion);
          }
          if (Channel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
          }
          if (appInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
          }
          if (deviceInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
          }
          if (envInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvInfo);
          }
          if (ClientPort != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientPort);
          }
          if (Location.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RequestBasicInfo other) {
          if (other == null) {
            return;
          }
          if (other.ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            ClientType = other.ClientType;
          }
          if (other.DeviceId.Length != 0) {
            DeviceId = other.DeviceId;
          }
          if (other.ClientIp.Length != 0) {
            ClientIp = other.ClientIp;
          }
          if (other.AppVersion.Length != 0) {
            AppVersion = other.AppVersion;
          }
          if (other.Channel.Length != 0) {
            Channel = other.Channel;
          }
          if (other.appInfo_ != null) {
            if (appInfo_ == null) {
              AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
            }
            AppInfo.MergeFrom(other.AppInfo);
          }
          if (other.deviceInfo_ != null) {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
            }
            DeviceInfo.MergeFrom(other.DeviceInfo);
          }
          if (other.envInfo_ != null) {
            if (envInfo_ == null) {
              EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
            }
            EnvInfo.MergeFrom(other.EnvInfo);
          }
          if (other.ClientPort != 0) {
            ClientPort = other.ClientPort;
          }
          if (other.Location.Length != 0) {
            Location = other.Location;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ClientType = (global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) input.ReadEnum();
                break;
              }
              case 18: {
                DeviceId = input.ReadString();
                break;
              }
              case 26: {
                ClientIp = input.ReadString();
                break;
              }
              case 34: {
                AppVersion = input.ReadString();
                break;
              }
              case 42: {
                Channel = input.ReadString();
                break;
              }
              case 50: {
                if (appInfo_ == null) {
                  AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
                }
                input.ReadMessage(AppInfo);
                break;
              }
              case 58: {
                if (deviceInfo_ == null) {
                  DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
                }
                input.ReadMessage(DeviceInfo);
                break;
              }
              case 66: {
                if (envInfo_ == null) {
                  EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
                }
                input.ReadMessage(EnvInfo);
                break;
              }
              case 72: {
                ClientPort = input.ReadInt32();
                break;
              }
              case 82: {
                Location = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ClientType = (global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) input.ReadEnum();
                break;
              }
              case 18: {
                DeviceId = input.ReadString();
                break;
              }
              case 26: {
                ClientIp = input.ReadString();
                break;
              }
              case 34: {
                AppVersion = input.ReadString();
                break;
              }
              case 42: {
                Channel = input.ReadString();
                break;
              }
              case 50: {
                if (appInfo_ == null) {
                  AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
                }
                input.ReadMessage(AppInfo);
                break;
              }
              case 58: {
                if (deviceInfo_ == null) {
                  DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
                }
                input.ReadMessage(DeviceInfo);
                break;
              }
              case 66: {
                if (envInfo_ == null) {
                  EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
                }
                input.ReadMessage(EnvInfo);
                break;
              }
              case 72: {
                ClientPort = input.ReadInt32();
                break;
              }
              case 82: {
                Location = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SyncCookie : pb::IMessage<SyncCookie>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SyncCookie> _parser = new pb::MessageParser<SyncCookie>(() => new SyncCookie());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SyncCookie> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncCookie() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncCookie(SyncCookie other) : this() {
          syncOffset_ = other.syncOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncCookie Clone() {
          return new SyncCookie(this);
        }

        /// <summary>Field number for the "syncOffset" field.</summary>
        public const int SyncOffsetFieldNumber = 1;
        private long syncOffset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SyncOffset {
          get { return syncOffset_; }
          set {
            syncOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SyncCookie);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SyncCookie other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SyncOffset != other.SyncOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SyncOffset != 0L) hash ^= SyncOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SyncOffset != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SyncOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SyncOffset != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SyncOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SyncOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SyncOffset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SyncCookie other) {
          if (other == null) {
            return;
          }
          if (other.SyncOffset != 0L) {
            SyncOffset = other.SyncOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SyncOffset = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SyncOffset = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class I18nCopyWriting : pb::IMessage<I18nCopyWriting>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<I18nCopyWriting> _parser = new pb::MessageParser<I18nCopyWriting>(() => new I18nCopyWriting());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<I18nCopyWriting> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I18nCopyWriting() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I18nCopyWriting(I18nCopyWriting other) : this() {
          formatKey_ = other.formatKey_;
          formatParam_ = other.formatParam_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I18nCopyWriting Clone() {
          return new I18nCopyWriting(this);
        }

        /// <summary>Field number for the "formatKey" field.</summary>
        public const int FormatKeyFieldNumber = 1;
        private string formatKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FormatKey {
          get { return formatKey_; }
          set {
            formatKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "formatParam" field.</summary>
        public const int FormatParamFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_formatParam_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> formatParam_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> FormatParam {
          get { return formatParam_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as I18nCopyWriting);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(I18nCopyWriting other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FormatKey != other.FormatKey) return false;
          if(!formatParam_.Equals(other.formatParam_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FormatKey.Length != 0) hash ^= FormatKey.GetHashCode();
          hash ^= formatParam_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FormatKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FormatKey);
          }
          formatParam_.WriteTo(output, _repeated_formatParam_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FormatKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FormatKey);
          }
          formatParam_.WriteTo(ref output, _repeated_formatParam_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FormatKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatKey);
          }
          size += formatParam_.CalculateSize(_repeated_formatParam_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(I18nCopyWriting other) {
          if (other == null) {
            return;
          }
          if (other.FormatKey.Length != 0) {
            FormatKey = other.FormatKey;
          }
          formatParam_.Add(other.formatParam_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                FormatKey = input.ReadString();
                break;
              }
              case 18: {
                formatParam_.AddEntriesFrom(input, _repeated_formatParam_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                FormatKey = input.ReadString();
                break;
              }
              case 18: {
                formatParam_.AddEntriesFrom(ref input, _repeated_formatParam_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SdkOption : pb::IMessage<SdkOption>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SdkOption> _parser = new pb::MessageParser<SdkOption>(() => new SdkOption());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SdkOption> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdkOption() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdkOption(SdkOption other) : this() {
          reportIntervalSeconds_ = other.reportIntervalSeconds_;
          reportSecurity_ = other.reportSecurity_;
          lz4CompressionThresholdBytes_ = other.lz4CompressionThresholdBytes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdkOption Clone() {
          return new SdkOption(this);
        }

        /// <summary>Field number for the "reportIntervalSeconds" field.</summary>
        public const int ReportIntervalSecondsFieldNumber = 1;
        private int reportIntervalSeconds_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ReportIntervalSeconds {
          get { return reportIntervalSeconds_; }
          set {
            reportIntervalSeconds_ = value;
          }
        }

        /// <summary>Field number for the "reportSecurity" field.</summary>
        public const int ReportSecurityFieldNumber = 2;
        private string reportSecurity_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ReportSecurity {
          get { return reportSecurity_; }
          set {
            reportSecurity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "lz4CompressionThresholdBytes" field.</summary>
        public const int Lz4CompressionThresholdBytesFieldNumber = 3;
        private int lz4CompressionThresholdBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Lz4CompressionThresholdBytes {
          get { return lz4CompressionThresholdBytes_; }
          set {
            lz4CompressionThresholdBytes_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SdkOption);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SdkOption other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReportIntervalSeconds != other.ReportIntervalSeconds) return false;
          if (ReportSecurity != other.ReportSecurity) return false;
          if (Lz4CompressionThresholdBytes != other.Lz4CompressionThresholdBytes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReportIntervalSeconds != 0) hash ^= ReportIntervalSeconds.GetHashCode();
          if (ReportSecurity.Length != 0) hash ^= ReportSecurity.GetHashCode();
          if (Lz4CompressionThresholdBytes != 0) hash ^= Lz4CompressionThresholdBytes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReportIntervalSeconds != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ReportIntervalSeconds);
          }
          if (ReportSecurity.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ReportSecurity);
          }
          if (Lz4CompressionThresholdBytes != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Lz4CompressionThresholdBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReportIntervalSeconds != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ReportIntervalSeconds);
          }
          if (ReportSecurity.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ReportSecurity);
          }
          if (Lz4CompressionThresholdBytes != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Lz4CompressionThresholdBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReportIntervalSeconds != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReportIntervalSeconds);
          }
          if (ReportSecurity.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportSecurity);
          }
          if (Lz4CompressionThresholdBytes != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lz4CompressionThresholdBytes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SdkOption other) {
          if (other == null) {
            return;
          }
          if (other.ReportIntervalSeconds != 0) {
            ReportIntervalSeconds = other.ReportIntervalSeconds;
          }
          if (other.ReportSecurity.Length != 0) {
            ReportSecurity = other.ReportSecurity;
          }
          if (other.Lz4CompressionThresholdBytes != 0) {
            Lz4CompressionThresholdBytes = other.Lz4CompressionThresholdBytes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReportIntervalSeconds = input.ReadInt32();
                break;
              }
              case 18: {
                ReportSecurity = input.ReadString();
                break;
              }
              case 24: {
                Lz4CompressionThresholdBytes = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReportIntervalSeconds = input.ReadInt32();
                break;
              }
              case 18: {
                ReportSecurity = input.ReadString();
                break;
              }
              case 24: {
                Lz4CompressionThresholdBytes = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class LocaleMessage : pb::IMessage<LocaleMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LocaleMessage> _parser = new pb::MessageParser<LocaleMessage>(() => new LocaleMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LocaleMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocaleMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocaleMessage(LocaleMessage other) : this() {
          locale_ = other.locale_;
          errorMessage_ = other.errorMessage_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocaleMessage Clone() {
          return new LocaleMessage(this);
        }

        /// <summary>Field number for the "locale" field.</summary>
        public const int LocaleFieldNumber = 1;
        private string locale_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Locale {
          get { return locale_; }
          set {
            locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "errorMessage" field.</summary>
        public const int ErrorMessageFieldNumber = 2;
        private static readonly pbc::MapField<int, string>.Codec _map_errorMessage_codec
            = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 18);
        private readonly pbc::MapField<int, string> errorMessage_ = new pbc::MapField<int, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<int, string> ErrorMessage {
          get { return errorMessage_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LocaleMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LocaleMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Locale != other.Locale) return false;
          if (!ErrorMessage.Equals(other.ErrorMessage)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Locale.Length != 0) hash ^= Locale.GetHashCode();
          hash ^= ErrorMessage.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Locale.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Locale);
          }
          errorMessage_.WriteTo(output, _map_errorMessage_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Locale.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Locale);
          }
          errorMessage_.WriteTo(ref output, _map_errorMessage_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Locale.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
          }
          size += errorMessage_.CalculateSize(_map_errorMessage_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LocaleMessage other) {
          if (other == null) {
            return;
          }
          if (other.Locale.Length != 0) {
            Locale = other.Locale;
          }
          errorMessage_.Add(other.errorMessage_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Locale = input.ReadString();
                break;
              }
              case 18: {
                errorMessage_.AddEntriesFrom(input, _map_errorMessage_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Locale = input.ReadString();
                break;
              }
              case 18: {
                errorMessage_.AddEntriesFrom(ref input, _map_errorMessage_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ErrorMessage : pb::IMessage<ErrorMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ErrorMessage> _parser = new pb::MessageParser<ErrorMessage>(() => new ErrorMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ErrorMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ErrorMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ErrorMessage(ErrorMessage other) : this() {
          localeMessages_ = other.localeMessages_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ErrorMessage Clone() {
          return new ErrorMessage(this);
        }

        /// <summary>Field number for the "localeMessages" field.</summary>
        public const int LocaleMessagesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.LocaleMessage> _repeated_localeMessages_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.LocaleMessage.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.LocaleMessage> localeMessages_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.LocaleMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.LocaleMessage> LocaleMessages {
          get { return localeMessages_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ErrorMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ErrorMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!localeMessages_.Equals(other.localeMessages_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= localeMessages_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          localeMessages_.WriteTo(output, _repeated_localeMessages_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          localeMessages_.WriteTo(ref output, _repeated_localeMessages_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += localeMessages_.CalculateSize(_repeated_localeMessages_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ErrorMessage other) {
          if (other == null) {
            return;
          }
          localeMessages_.Add(other.localeMessages_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                localeMessages_.AddEntriesFrom(input, _repeated_localeMessages_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                localeMessages_.AddEntriesFrom(ref input, _repeated_localeMessages_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ImMessage : pb::IMessage<ImMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImMessage> _parser = new pb::MessageParser<ImMessage>(() => new ImMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.ImReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessage(ImMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessage Clone() {
      return new ImMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ImMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MessageType {
        [pbr::OriginalName("Text")] Text = 0,
        [pbr::OriginalName("Image")] Image = 2,
        [pbr::OriginalName("Audio")] Audio = 3,
        [pbr::OriginalName("Movie")] Movie = 4,
        [pbr::OriginalName("File")] File = 5,
        [pbr::OriginalName("Gif")] Gif = 7,
        [pbr::OriginalName("ImageText")] ImageText = 8,
        [pbr::OriginalName("PlaceHolder")] PlaceHolder = 100,
        [pbr::OriginalName("Notice")] Notice = 101,
        [pbr::OriginalName("MultiFormNotice")] MultiFormNotice = 103,
        [pbr::OriginalName("MessageCancel")] MessageCancel = 104,
        [pbr::OriginalName("MessageCancelOrigin")] MessageCancelOrigin = 105,
        [pbr::OriginalName("GameInvite")] GameInvite = 200,
        [pbr::OriginalName("FavouriteGame")] FavouriteGame = 201,
        [pbr::OriginalName("TeamInvite")] TeamInvite = 202,
        [pbr::OriginalName("MultiPlayerGame")] MultiPlayerGame = 210,
        [pbr::OriginalName("MultiPlayerGameInvite")] MultiPlayerGameInvite = 211,
        [pbr::OriginalName("GameFriendTravel")] GameFriendTravel = 300,
        [pbr::OriginalName("GameTravelInvite")] GameTravelInvite = 301,
        [pbr::OriginalName("MultiPlayerChatRoom")] MultiPlayerChatRoom = 400,
        [pbr::OriginalName("MultiPlayerChatRoomInvite")] MultiPlayerChatRoomInvite = 401,
        [pbr::OriginalName("MultiPlayerChatRoomGameInvite")] MultiPlayerChatRoomGameInvite = 402,
        [pbr::OriginalName("FeedShare")] FeedShare = 500,
        [pbr::OriginalName("DianDianMatchSuccess")] DianDianMatchSuccess = 600,
        [pbr::OriginalName("DianDianNotification")] DianDianNotification = 601,
        [pbr::OriginalName("Gift")] Gift = 700,
        [pbr::OriginalName("SOGAME_MESSAGE_TYPE_MAX")] SogameMessageTypeMax = 999,
      }

      public enum KsUserRelationShip {
        [pbr::OriginalName("kUNKNOW")] KUnknow = 0,
        [pbr::OriginalName("FOLLOW_EACH_OTHER")] FollowEachOther = 1,
        [pbr::OriginalName("TO_FOLLOW_FROM")] ToFollowFrom = 2,
        [pbr::OriginalName("FROM_FOLLOW_TO")] FromFollowTo = 3,
      }

      public enum AccountType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("OFFICIAL")] Official = 1,
        [pbr::OriginalName("NORMAL")] Normal = 2,
        [pbr::OriginalName("STRANGER")] Stranger = 3,
      }

      public enum ChatTargetType {
        [pbr::OriginalName("CTT_USER")] CttUser = 0,
        [pbr::OriginalName("CTT_CHAT_ROOM")] CttChatRoom = 2,
        [pbr::OriginalName("CTT_MULTI_PLAYER_ROOM")] CttMultiPlayerRoom = 3,
        [pbr::OriginalName("CTT_GROUP")] CttGroup = 4,
        [pbr::OriginalName("CTT_CHANNEL")] CttChannel = 5,
        [pbr::OriginalName("CTT_AGGREGATE")] CttAggregate = 6,
      }

      public enum SystemUser {
        [pbr::OriginalName("kSystemUserInvalid")] KSystemUserInvalid = 0,
        [pbr::OriginalName("SYSTEM_USER_ID")] Id = 10000,
      }

      public sealed partial class Message : pb::IMessage<Message>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message(Message other) : this() {
          seqId_ = other.seqId_;
          clientSeqId_ = other.clientSeqId_;
          timestampMs_ = other.timestampMs_;
          fromUser_ = other.fromUser_ != null ? other.fromUser_.Clone() : null;
          targetId_ = other.targetId_;
          toUser_ = other.toUser_ != null ? other.toUser_.Clone() : null;
          title_ = other.title_;
          contentType_ = other.contentType_;
          content_ = other.content_;
          buckupTips_ = other.buckupTips_;
          receivers_ = other.receivers_.Clone();
          notContentUnread_ = other.notContentUnread_;
          sessionPriority_ = other.sessionPriority_;
          sessionCategoryId_ = other.sessionCategoryId_;
          sessionAccountType_ = other.sessionAccountType_;
          notAutoCreateSession_ = other.notAutoCreateSession_;
          userRelationship_ = other.userRelationship_;
          strTargetId_ = other.strTargetId_;
          excludeReceivers_ = other.excludeReceivers_.Clone();
          markDelte_ = other.markDelte_;
          reminder_ = other.reminder_ != null ? other.reminder_.Clone() : null;
          extra_ = other.extra_;
          receiptRequired_ = other.receiptRequired_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message Clone() {
          return new Message(this);
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 1;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "clientSeqId" field.</summary>
        public const int ClientSeqIdFieldNumber = 2;
        private long clientSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ClientSeqId {
          get { return clientSeqId_; }
          set {
            clientSeqId_ = value;
          }
        }

        /// <summary>Field number for the "timestampMs" field.</summary>
        public const int TimestampMsFieldNumber = 3;
        private long timestampMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TimestampMs {
          get { return timestampMs_; }
          set {
            timestampMs_ = value;
          }
        }

        /// <summary>Field number for the "fromUser" field.</summary>
        public const int FromUserFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.User fromUser_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User FromUser {
          get { return fromUser_; }
          set {
            fromUser_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 5;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "toUser" field.</summary>
        public const int ToUserFieldNumber = 6;
        private global::AcFunDanmu.Im.Basic.Types.User toUser_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User ToUser {
          get { return toUser_; }
          set {
            toUser_ = value;
          }
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 7;
        private string title_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "contentType" field.</summary>
        public const int ContentTypeFieldNumber = 8;
        private int contentType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ContentType {
          get { return contentType_; }
          set {
            contentType_ = value;
          }
        }

        /// <summary>Field number for the "content" field.</summary>
        public const int ContentFieldNumber = 9;
        private pb::ByteString content_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Content {
          get { return content_; }
          set {
            content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "buckupTips" field.</summary>
        public const int BuckupTipsFieldNumber = 10;
        private string buckupTips_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BuckupTips {
          get { return buckupTips_; }
          set {
            buckupTips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "receivers" field.</summary>
        public const int ReceiversFieldNumber = 11;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_receivers_codec
            = pb::FieldCodec.ForMessage(90, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> receivers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Receivers {
          get { return receivers_; }
        }

        /// <summary>Field number for the "notContentUnread" field.</summary>
        public const int NotContentUnreadFieldNumber = 12;
        private bool notContentUnread_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotContentUnread {
          get { return notContentUnread_; }
          set {
            notContentUnread_ = value;
          }
        }

        /// <summary>Field number for the "sessionPriority" field.</summary>
        public const int SessionPriorityFieldNumber = 13;
        private int sessionPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionPriority {
          get { return sessionPriority_; }
          set {
            sessionPriority_ = value;
          }
        }

        /// <summary>Field number for the "sessionCategoryId" field.</summary>
        public const int SessionCategoryIdFieldNumber = 14;
        private int sessionCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionCategoryId {
          get { return sessionCategoryId_; }
          set {
            sessionCategoryId_ = value;
          }
        }

        /// <summary>Field number for the "sessionAccountType" field.</summary>
        public const int SessionAccountTypeFieldNumber = 15;
        private int sessionAccountType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionAccountType {
          get { return sessionAccountType_; }
          set {
            sessionAccountType_ = value;
          }
        }

        /// <summary>Field number for the "notAutoCreateSession" field.</summary>
        public const int NotAutoCreateSessionFieldNumber = 16;
        private bool notAutoCreateSession_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotAutoCreateSession {
          get { return notAutoCreateSession_; }
          set {
            notAutoCreateSession_ = value;
          }
        }

        /// <summary>Field number for the "userRelationship" field.</summary>
        public const int UserRelationshipFieldNumber = 17;
        private int userRelationship_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserRelationship {
          get { return userRelationship_; }
          set {
            userRelationship_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 18;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "excludeReceivers" field.</summary>
        public const int ExcludeReceiversFieldNumber = 19;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_excludeReceivers_codec
            = pb::FieldCodec.ForMessage(154, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> excludeReceivers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> ExcludeReceivers {
          get { return excludeReceivers_; }
        }

        /// <summary>Field number for the "markDelte" field.</summary>
        public const int MarkDelteFieldNumber = 20;
        private bool markDelte_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool MarkDelte {
          get { return markDelte_; }
          set {
            markDelte_ = value;
          }
        }

        /// <summary>Field number for the "reminder" field.</summary>
        public const int ReminderFieldNumber = 21;
        private global::AcFunDanmu.Im.ImMessage.Types.Reminder reminder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.Reminder Reminder {
          get { return reminder_; }
          set {
            reminder_ = value;
          }
        }

        /// <summary>Field number for the "extra" field.</summary>
        public const int ExtraFieldNumber = 22;
        private pb::ByteString extra_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Extra {
          get { return extra_; }
          set {
            extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "receiptRequired" field.</summary>
        public const int ReceiptRequiredFieldNumber = 23;
        private bool receiptRequired_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ReceiptRequired {
          get { return receiptRequired_; }
          set {
            receiptRequired_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Message other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SeqId != other.SeqId) return false;
          if (ClientSeqId != other.ClientSeqId) return false;
          if (TimestampMs != other.TimestampMs) return false;
          if (!object.Equals(FromUser, other.FromUser)) return false;
          if (TargetId != other.TargetId) return false;
          if (!object.Equals(ToUser, other.ToUser)) return false;
          if (Title != other.Title) return false;
          if (ContentType != other.ContentType) return false;
          if (Content != other.Content) return false;
          if (BuckupTips != other.BuckupTips) return false;
          if(!receivers_.Equals(other.receivers_)) return false;
          if (NotContentUnread != other.NotContentUnread) return false;
          if (SessionPriority != other.SessionPriority) return false;
          if (SessionCategoryId != other.SessionCategoryId) return false;
          if (SessionAccountType != other.SessionAccountType) return false;
          if (NotAutoCreateSession != other.NotAutoCreateSession) return false;
          if (UserRelationship != other.UserRelationship) return false;
          if (StrTargetId != other.StrTargetId) return false;
          if(!excludeReceivers_.Equals(other.excludeReceivers_)) return false;
          if (MarkDelte != other.MarkDelte) return false;
          if (!object.Equals(Reminder, other.Reminder)) return false;
          if (Extra != other.Extra) return false;
          if (ReceiptRequired != other.ReceiptRequired) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (ClientSeqId != 0L) hash ^= ClientSeqId.GetHashCode();
          if (TimestampMs != 0L) hash ^= TimestampMs.GetHashCode();
          if (fromUser_ != null) hash ^= FromUser.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (toUser_ != null) hash ^= ToUser.GetHashCode();
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (ContentType != 0) hash ^= ContentType.GetHashCode();
          if (Content.Length != 0) hash ^= Content.GetHashCode();
          if (BuckupTips.Length != 0) hash ^= BuckupTips.GetHashCode();
          hash ^= receivers_.GetHashCode();
          if (NotContentUnread != false) hash ^= NotContentUnread.GetHashCode();
          if (SessionPriority != 0) hash ^= SessionPriority.GetHashCode();
          if (SessionCategoryId != 0) hash ^= SessionCategoryId.GetHashCode();
          if (SessionAccountType != 0) hash ^= SessionAccountType.GetHashCode();
          if (NotAutoCreateSession != false) hash ^= NotAutoCreateSession.GetHashCode();
          if (UserRelationship != 0) hash ^= UserRelationship.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          hash ^= excludeReceivers_.GetHashCode();
          if (MarkDelte != false) hash ^= MarkDelte.GetHashCode();
          if (reminder_ != null) hash ^= Reminder.GetHashCode();
          if (Extra.Length != 0) hash ^= Extra.GetHashCode();
          if (ReceiptRequired != false) hash ^= ReceiptRequired.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SeqId);
          }
          if (ClientSeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ClientSeqId);
          }
          if (TimestampMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TimestampMs);
          }
          if (fromUser_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(FromUser);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(TargetId);
          }
          if (toUser_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ToUser);
          }
          if (Title.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Title);
          }
          if (ContentType != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(ContentType);
          }
          if (Content.Length != 0) {
            output.WriteRawTag(74);
            output.WriteBytes(Content);
          }
          if (BuckupTips.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(BuckupTips);
          }
          receivers_.WriteTo(output, _repeated_receivers_codec);
          if (NotContentUnread != false) {
            output.WriteRawTag(96);
            output.WriteBool(NotContentUnread);
          }
          if (SessionPriority != 0) {
            output.WriteRawTag(104);
            output.WriteInt32(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(SessionCategoryId);
          }
          if (SessionAccountType != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(SessionAccountType);
          }
          if (NotAutoCreateSession != false) {
            output.WriteRawTag(128, 1);
            output.WriteBool(NotAutoCreateSession);
          }
          if (UserRelationship != 0) {
            output.WriteRawTag(136, 1);
            output.WriteInt32(UserRelationship);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(146, 1);
            output.WriteString(StrTargetId);
          }
          excludeReceivers_.WriteTo(output, _repeated_excludeReceivers_codec);
          if (MarkDelte != false) {
            output.WriteRawTag(160, 1);
            output.WriteBool(MarkDelte);
          }
          if (reminder_ != null) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(Reminder);
          }
          if (Extra.Length != 0) {
            output.WriteRawTag(178, 1);
            output.WriteBytes(Extra);
          }
          if (ReceiptRequired != false) {
            output.WriteRawTag(184, 1);
            output.WriteBool(ReceiptRequired);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SeqId);
          }
          if (ClientSeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ClientSeqId);
          }
          if (TimestampMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TimestampMs);
          }
          if (fromUser_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(FromUser);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(TargetId);
          }
          if (toUser_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ToUser);
          }
          if (Title.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Title);
          }
          if (ContentType != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(ContentType);
          }
          if (Content.Length != 0) {
            output.WriteRawTag(74);
            output.WriteBytes(Content);
          }
          if (BuckupTips.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(BuckupTips);
          }
          receivers_.WriteTo(ref output, _repeated_receivers_codec);
          if (NotContentUnread != false) {
            output.WriteRawTag(96);
            output.WriteBool(NotContentUnread);
          }
          if (SessionPriority != 0) {
            output.WriteRawTag(104);
            output.WriteInt32(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(SessionCategoryId);
          }
          if (SessionAccountType != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(SessionAccountType);
          }
          if (NotAutoCreateSession != false) {
            output.WriteRawTag(128, 1);
            output.WriteBool(NotAutoCreateSession);
          }
          if (UserRelationship != 0) {
            output.WriteRawTag(136, 1);
            output.WriteInt32(UserRelationship);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(146, 1);
            output.WriteString(StrTargetId);
          }
          excludeReceivers_.WriteTo(ref output, _repeated_excludeReceivers_codec);
          if (MarkDelte != false) {
            output.WriteRawTag(160, 1);
            output.WriteBool(MarkDelte);
          }
          if (reminder_ != null) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(Reminder);
          }
          if (Extra.Length != 0) {
            output.WriteRawTag(178, 1);
            output.WriteBytes(Extra);
          }
          if (ReceiptRequired != false) {
            output.WriteRawTag(184, 1);
            output.WriteBool(ReceiptRequired);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (ClientSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientSeqId);
          }
          if (TimestampMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMs);
          }
          if (fromUser_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUser);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (toUser_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToUser);
          }
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (ContentType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
          }
          if (Content.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
          }
          if (BuckupTips.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BuckupTips);
          }
          size += receivers_.CalculateSize(_repeated_receivers_codec);
          if (NotContentUnread != false) {
            size += 1 + 1;
          }
          if (SessionPriority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCategoryId);
          }
          if (SessionAccountType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionAccountType);
          }
          if (NotAutoCreateSession != false) {
            size += 2 + 1;
          }
          if (UserRelationship != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserRelationship);
          }
          if (StrTargetId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          size += excludeReceivers_.CalculateSize(_repeated_excludeReceivers_codec);
          if (MarkDelte != false) {
            size += 2 + 1;
          }
          if (reminder_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Reminder);
          }
          if (Extra.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeBytesSize(Extra);
          }
          if (ReceiptRequired != false) {
            size += 2 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Message other) {
          if (other == null) {
            return;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.ClientSeqId != 0L) {
            ClientSeqId = other.ClientSeqId;
          }
          if (other.TimestampMs != 0L) {
            TimestampMs = other.TimestampMs;
          }
          if (other.fromUser_ != null) {
            if (fromUser_ == null) {
              FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            FromUser.MergeFrom(other.FromUser);
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.toUser_ != null) {
            if (toUser_ == null) {
              ToUser = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            ToUser.MergeFrom(other.ToUser);
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          if (other.ContentType != 0) {
            ContentType = other.ContentType;
          }
          if (other.Content.Length != 0) {
            Content = other.Content;
          }
          if (other.BuckupTips.Length != 0) {
            BuckupTips = other.BuckupTips;
          }
          receivers_.Add(other.receivers_);
          if (other.NotContentUnread != false) {
            NotContentUnread = other.NotContentUnread;
          }
          if (other.SessionPriority != 0) {
            SessionPriority = other.SessionPriority;
          }
          if (other.SessionCategoryId != 0) {
            SessionCategoryId = other.SessionCategoryId;
          }
          if (other.SessionAccountType != 0) {
            SessionAccountType = other.SessionAccountType;
          }
          if (other.NotAutoCreateSession != false) {
            NotAutoCreateSession = other.NotAutoCreateSession;
          }
          if (other.UserRelationship != 0) {
            UserRelationship = other.UserRelationship;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          excludeReceivers_.Add(other.excludeReceivers_);
          if (other.MarkDelte != false) {
            MarkDelte = other.MarkDelte;
          }
          if (other.reminder_ != null) {
            if (reminder_ == null) {
              Reminder = new global::AcFunDanmu.Im.ImMessage.Types.Reminder();
            }
            Reminder.MergeFrom(other.Reminder);
          }
          if (other.Extra.Length != 0) {
            Extra = other.Extra;
          }
          if (other.ReceiptRequired != false) {
            ReceiptRequired = other.ReceiptRequired;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SeqId = input.ReadInt64();
                break;
              }
              case 16: {
                ClientSeqId = input.ReadInt64();
                break;
              }
              case 24: {
                TimestampMs = input.ReadInt64();
                break;
              }
              case 34: {
                if (fromUser_ == null) {
                  FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(FromUser);
                break;
              }
              case 40: {
                TargetId = input.ReadInt64();
                break;
              }
              case 50: {
                if (toUser_ == null) {
                  ToUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(ToUser);
                break;
              }
              case 58: {
                Title = input.ReadString();
                break;
              }
              case 64: {
                ContentType = input.ReadInt32();
                break;
              }
              case 74: {
                Content = input.ReadBytes();
                break;
              }
              case 82: {
                BuckupTips = input.ReadString();
                break;
              }
              case 90: {
                receivers_.AddEntriesFrom(input, _repeated_receivers_codec);
                break;
              }
              case 96: {
                NotContentUnread = input.ReadBool();
                break;
              }
              case 104: {
                SessionPriority = input.ReadInt32();
                break;
              }
              case 112: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
              case 120: {
                SessionAccountType = input.ReadInt32();
                break;
              }
              case 128: {
                NotAutoCreateSession = input.ReadBool();
                break;
              }
              case 136: {
                UserRelationship = input.ReadInt32();
                break;
              }
              case 146: {
                StrTargetId = input.ReadString();
                break;
              }
              case 154: {
                excludeReceivers_.AddEntriesFrom(input, _repeated_excludeReceivers_codec);
                break;
              }
              case 160: {
                MarkDelte = input.ReadBool();
                break;
              }
              case 170: {
                if (reminder_ == null) {
                  Reminder = new global::AcFunDanmu.Im.ImMessage.Types.Reminder();
                }
                input.ReadMessage(Reminder);
                break;
              }
              case 178: {
                Extra = input.ReadBytes();
                break;
              }
              case 184: {
                ReceiptRequired = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SeqId = input.ReadInt64();
                break;
              }
              case 16: {
                ClientSeqId = input.ReadInt64();
                break;
              }
              case 24: {
                TimestampMs = input.ReadInt64();
                break;
              }
              case 34: {
                if (fromUser_ == null) {
                  FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(FromUser);
                break;
              }
              case 40: {
                TargetId = input.ReadInt64();
                break;
              }
              case 50: {
                if (toUser_ == null) {
                  ToUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(ToUser);
                break;
              }
              case 58: {
                Title = input.ReadString();
                break;
              }
              case 64: {
                ContentType = input.ReadInt32();
                break;
              }
              case 74: {
                Content = input.ReadBytes();
                break;
              }
              case 82: {
                BuckupTips = input.ReadString();
                break;
              }
              case 90: {
                receivers_.AddEntriesFrom(ref input, _repeated_receivers_codec);
                break;
              }
              case 96: {
                NotContentUnread = input.ReadBool();
                break;
              }
              case 104: {
                SessionPriority = input.ReadInt32();
                break;
              }
              case 112: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
              case 120: {
                SessionAccountType = input.ReadInt32();
                break;
              }
              case 128: {
                NotAutoCreateSession = input.ReadBool();
                break;
              }
              case 136: {
                UserRelationship = input.ReadInt32();
                break;
              }
              case 146: {
                StrTargetId = input.ReadString();
                break;
              }
              case 154: {
                excludeReceivers_.AddEntriesFrom(ref input, _repeated_excludeReceivers_codec);
                break;
              }
              case 160: {
                MarkDelte = input.ReadBool();
                break;
              }
              case 170: {
                if (reminder_ == null) {
                  Reminder = new global::AcFunDanmu.Im.ImMessage.Types.Reminder();
                }
                input.ReadMessage(Reminder);
                break;
              }
              case 178: {
                Extra = input.ReadBytes();
                break;
              }
              case 184: {
                ReceiptRequired = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SendMessageResponse : pb::IMessage<SendMessageResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SendMessageResponse> _parser = new pb::MessageParser<SendMessageResponse>(() => new SendMessageResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SendMessageResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendMessageResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendMessageResponse(SendMessageResponse other) : this() {
          clientSeqId_ = other.clientSeqId_;
          messageTimestamp_ = other.messageTimestamp_;
          seqId_ = other.seqId_;
          sessionAccountType_ = other.sessionAccountType_;
          sessionPriority_ = other.sessionPriority_;
          sessionCategoryId_ = other.sessionCategoryId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendMessageResponse Clone() {
          return new SendMessageResponse(this);
        }

        /// <summary>Field number for the "clientSeqId" field.</summary>
        public const int ClientSeqIdFieldNumber = 1;
        private long clientSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ClientSeqId {
          get { return clientSeqId_; }
          set {
            clientSeqId_ = value;
          }
        }

        /// <summary>Field number for the "messageTimestamp" field.</summary>
        public const int MessageTimestampFieldNumber = 2;
        private long messageTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MessageTimestamp {
          get { return messageTimestamp_; }
          set {
            messageTimestamp_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 3;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "sessionAccountType" field.</summary>
        public const int SessionAccountTypeFieldNumber = 4;
        private int sessionAccountType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionAccountType {
          get { return sessionAccountType_; }
          set {
            sessionAccountType_ = value;
          }
        }

        /// <summary>Field number for the "sessionPriority" field.</summary>
        public const int SessionPriorityFieldNumber = 5;
        private int sessionPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionPriority {
          get { return sessionPriority_; }
          set {
            sessionPriority_ = value;
          }
        }

        /// <summary>Field number for the "sessionCategoryId" field.</summary>
        public const int SessionCategoryIdFieldNumber = 6;
        private int sessionCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionCategoryId {
          get { return sessionCategoryId_; }
          set {
            sessionCategoryId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SendMessageResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SendMessageResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClientSeqId != other.ClientSeqId) return false;
          if (MessageTimestamp != other.MessageTimestamp) return false;
          if (SeqId != other.SeqId) return false;
          if (SessionAccountType != other.SessionAccountType) return false;
          if (SessionPriority != other.SessionPriority) return false;
          if (SessionCategoryId != other.SessionCategoryId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ClientSeqId != 0L) hash ^= ClientSeqId.GetHashCode();
          if (MessageTimestamp != 0L) hash ^= MessageTimestamp.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (SessionAccountType != 0) hash ^= SessionAccountType.GetHashCode();
          if (SessionPriority != 0) hash ^= SessionPriority.GetHashCode();
          if (SessionCategoryId != 0) hash ^= SessionCategoryId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ClientSeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ClientSeqId);
          }
          if (MessageTimestamp != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MessageTimestamp);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(SeqId);
          }
          if (SessionAccountType != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(SessionAccountType);
          }
          if (SessionPriority != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(SessionCategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ClientSeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ClientSeqId);
          }
          if (MessageTimestamp != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MessageTimestamp);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(SeqId);
          }
          if (SessionAccountType != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(SessionAccountType);
          }
          if (SessionPriority != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(SessionCategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ClientSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientSeqId);
          }
          if (MessageTimestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageTimestamp);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (SessionAccountType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionAccountType);
          }
          if (SessionPriority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCategoryId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SendMessageResponse other) {
          if (other == null) {
            return;
          }
          if (other.ClientSeqId != 0L) {
            ClientSeqId = other.ClientSeqId;
          }
          if (other.MessageTimestamp != 0L) {
            MessageTimestamp = other.MessageTimestamp;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.SessionAccountType != 0) {
            SessionAccountType = other.SessionAccountType;
          }
          if (other.SessionPriority != 0) {
            SessionPriority = other.SessionPriority;
          }
          if (other.SessionCategoryId != 0) {
            SessionCategoryId = other.SessionCategoryId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ClientSeqId = input.ReadInt64();
                break;
              }
              case 16: {
                MessageTimestamp = input.ReadInt64();
                break;
              }
              case 24: {
                SeqId = input.ReadInt64();
                break;
              }
              case 32: {
                SessionAccountType = input.ReadInt32();
                break;
              }
              case 40: {
                SessionPriority = input.ReadInt32();
                break;
              }
              case 48: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ClientSeqId = input.ReadInt64();
                break;
              }
              case 16: {
                MessageTimestamp = input.ReadInt64();
                break;
              }
              case 24: {
                SeqId = input.ReadInt64();
                break;
              }
              case 32: {
                SessionAccountType = input.ReadInt32();
                break;
              }
              case 40: {
                SessionPriority = input.ReadInt32();
                break;
              }
              case 48: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PullOldRequest : pb::IMessage<PullOldRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PullOldRequest> _parser = new pb::MessageParser<PullOldRequest>(() => new PullOldRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullOldRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldRequest(PullOldRequest other) : this() {
          target_ = other.target_ != null ? other.target_.Clone() : null;
          minSeq_ = other.minSeq_;
          maxSeq_ = other.maxSeq_;
          count_ = other.count_;
          targetId_ = other.targetId_;
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldRequest Clone() {
          return new PullOldRequest(this);
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        /// <summary>Field number for the "minSeq" field.</summary>
        public const int MinSeqFieldNumber = 2;
        private long minSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinSeq {
          get { return minSeq_; }
          set {
            minSeq_ = value;
          }
        }

        /// <summary>Field number for the "maxSeq" field.</summary>
        public const int MaxSeqFieldNumber = 3;
        private long maxSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSeq {
          get { return maxSeq_; }
          set {
            maxSeq_ = value;
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 4;
        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 5;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 6;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullOldRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullOldRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Target, other.Target)) return false;
          if (MinSeq != other.MinSeq) return false;
          if (MaxSeq != other.MaxSeq) return false;
          if (Count != other.Count) return false;
          if (TargetId != other.TargetId) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (target_ != null) hash ^= Target.GetHashCode();
          if (MinSeq != 0L) hash ^= MinSeq.GetHashCode();
          if (MaxSeq != 0L) hash ^= MaxSeq.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MinSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MinSeq);
          }
          if (MaxSeq != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(MaxSeq);
          }
          if (Count != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Count);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(TargetId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MinSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MinSeq);
          }
          if (MaxSeq != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(MaxSeq);
          }
          if (Count != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Count);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(TargetId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (MinSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinSeq);
          }
          if (MaxSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSeq);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullOldRequest other) {
          if (other == null) {
            return;
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            Target.MergeFrom(other.Target);
          }
          if (other.MinSeq != 0L) {
            MinSeq = other.MinSeq;
          }
          if (other.MaxSeq != 0L) {
            MaxSeq = other.MaxSeq;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 24: {
                MaxSeq = input.ReadInt64();
                break;
              }
              case 32: {
                Count = input.ReadInt32();
                break;
              }
              case 40: {
                TargetId = input.ReadInt64();
                break;
              }
              case 50: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 24: {
                MaxSeq = input.ReadInt64();
                break;
              }
              case 32: {
                Count = input.ReadInt32();
                break;
              }
              case 40: {
                TargetId = input.ReadInt64();
                break;
              }
              case 50: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PullOldResponse : pb::IMessage<PullOldResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PullOldResponse> _parser = new pb::MessageParser<PullOldResponse>(() => new PullOldResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullOldResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldResponse(PullOldResponse other) : this() {
          messages_ = other.messages_.Clone();
          serverTime_ = other.serverTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldResponse Clone() {
          return new PullOldResponse(this);
        }

        /// <summary>Field number for the "messages" field.</summary>
        public const int MessagesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.Message> _repeated_messages_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> messages_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> Messages {
          get { return messages_; }
        }

        /// <summary>Field number for the "serverTime" field.</summary>
        public const int ServerTimeFieldNumber = 2;
        private long serverTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerTime {
          get { return serverTime_; }
          set {
            serverTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullOldResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullOldResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!messages_.Equals(other.messages_)) return false;
          if (ServerTime != other.ServerTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= messages_.GetHashCode();
          if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          messages_.WriteTo(output, _repeated_messages_codec);
          if (ServerTime != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          messages_.WriteTo(ref output, _repeated_messages_codec);
          if (ServerTime != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += messages_.CalculateSize(_repeated_messages_codec);
          if (ServerTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullOldResponse other) {
          if (other == null) {
            return;
          }
          messages_.Add(other.messages_);
          if (other.ServerTime != 0L) {
            ServerTime = other.ServerTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                messages_.AddEntriesFrom(input, _repeated_messages_codec);
                break;
              }
              case 16: {
                ServerTime = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                messages_.AddEntriesFrom(ref input, _repeated_messages_codec);
                break;
              }
              case 16: {
                ServerTime = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PullNewRequest : pb::IMessage<PullNewRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PullNewRequest> _parser = new pb::MessageParser<PullNewRequest>(() => new PullNewRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullNewRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewRequest(PullNewRequest other) : this() {
          target_ = other.target_ != null ? other.target_.Clone() : null;
          minSeq_ = other.minSeq_;
          count_ = other.count_;
          targetId_ = other.targetId_;
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewRequest Clone() {
          return new PullNewRequest(this);
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        /// <summary>Field number for the "minSeq" field.</summary>
        public const int MinSeqFieldNumber = 2;
        private long minSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinSeq {
          get { return minSeq_; }
          set {
            minSeq_ = value;
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 3;
        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 4;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 5;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullNewRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullNewRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Target, other.Target)) return false;
          if (MinSeq != other.MinSeq) return false;
          if (Count != other.Count) return false;
          if (TargetId != other.TargetId) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (target_ != null) hash ^= Target.GetHashCode();
          if (MinSeq != 0L) hash ^= MinSeq.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MinSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MinSeq);
          }
          if (Count != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Count);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TargetId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MinSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MinSeq);
          }
          if (Count != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Count);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TargetId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (MinSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinSeq);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullNewRequest other) {
          if (other == null) {
            return;
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            Target.MergeFrom(other.Target);
          }
          if (other.MinSeq != 0L) {
            MinSeq = other.MinSeq;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 24: {
                Count = input.ReadInt32();
                break;
              }
              case 32: {
                TargetId = input.ReadInt64();
                break;
              }
              case 42: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 24: {
                Count = input.ReadInt32();
                break;
              }
              case 32: {
                TargetId = input.ReadInt64();
                break;
              }
              case 42: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PullNewResponse : pb::IMessage<PullNewResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PullNewResponse> _parser = new pb::MessageParser<PullNewResponse>(() => new PullNewResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullNewResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewResponse(PullNewResponse other) : this() {
          messages_ = other.messages_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewResponse Clone() {
          return new PullNewResponse(this);
        }

        /// <summary>Field number for the "messages" field.</summary>
        public const int MessagesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.Message> _repeated_messages_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> messages_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> Messages {
          get { return messages_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullNewResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullNewResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!messages_.Equals(other.messages_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= messages_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          messages_.WriteTo(output, _repeated_messages_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          messages_.WriteTo(ref output, _repeated_messages_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += messages_.CalculateSize(_repeated_messages_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullNewResponse other) {
          if (other == null) {
            return;
          }
          messages_.Add(other.messages_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                messages_.AddEntriesFrom(input, _repeated_messages_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                messages_.AddEntriesFrom(ref input, _repeated_messages_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionListRequest : pb::IMessage<SessionListRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionListRequest> _parser = new pb::MessageParser<SessionListRequest>(() => new SessionListRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionListRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListRequest(SessionListRequest other) : this() {
          syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
          categoryId_ = other.categoryId_;
          localDataStatus_ = other.localDataStatus_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListRequest Clone() {
          return new SessionListRequest(this);
        }

        /// <summary>Field number for the "syncCookie" field.</summary>
        public const int SyncCookieFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
          get { return syncCookie_; }
          set {
            syncCookie_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 2;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "localDataStatus" field.</summary>
        public const int LocalDataStatusFieldNumber = 3;
        private int localDataStatus_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LocalDataStatus {
          get { return localDataStatus_; }
          set {
            localDataStatus_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionListRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionListRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
          if (CategoryId != other.CategoryId) return false;
          if (LocalDataStatus != other.LocalDataStatus) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (LocalDataStatus != 0) hash ^= LocalDataStatus.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (syncCookie_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SyncCookie);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(CategoryId);
          }
          if (LocalDataStatus != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(LocalDataStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (syncCookie_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SyncCookie);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(CategoryId);
          }
          if (LocalDataStatus != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(LocalDataStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (syncCookie_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (LocalDataStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocalDataStatus);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionListRequest other) {
          if (other == null) {
            return;
          }
          if (other.syncCookie_ != null) {
            if (syncCookie_ == null) {
              SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
            }
            SyncCookie.MergeFrom(other.SyncCookie);
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.LocalDataStatus != 0) {
            LocalDataStatus = other.LocalDataStatus;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                input.ReadMessage(SyncCookie);
                break;
              }
              case 16: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 24: {
                LocalDataStatus = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                input.ReadMessage(SyncCookie);
                break;
              }
              case 16: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 24: {
                LocalDataStatus = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ChatSession : pb::IMessage<ChatSession>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ChatSession> _parser = new pb::MessageParser<ChatSession>(() => new ChatSession());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChatSession> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatSession() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatSession(ChatSession other) : this() {
          target_ = other.target_ != null ? other.target_.Clone() : null;
          maxSeqId_ = other.maxSeqId_;
          readSeqId_ = other.readSeqId_;
          unreadMsgCount_ = other.unreadMsgCount_;
          latestMessage_ = other.latestMessage_.Clone();
          chatTargetType_ = other.chatTargetType_;
          targetId_ = other.targetId_;
          activeTime_ = other.activeTime_;
          priority_ = other.priority_;
          categoryId_ = other.categoryId_;
          cursor_ = other.cursor_;
          accountType_ = other.accountType_;
          aggregateSession_ = other.aggregateSession_;
          jumpCategoryId_ = other.jumpCategoryId_;
          expireAt_ = other.expireAt_;
          effectiveFrom_ = other.effectiveFrom_;
          strTargetId_ = other.strTargetId_;
          remindBody_ = other.remindBody_.Clone();
          targetReadSeqId_ = other.targetReadSeqId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatSession Clone() {
          return new ChatSession(this);
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        /// <summary>Field number for the "maxSeqId" field.</summary>
        public const int MaxSeqIdFieldNumber = 2;
        private long maxSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSeqId {
          get { return maxSeqId_; }
          set {
            maxSeqId_ = value;
          }
        }

        /// <summary>Field number for the "readSeqId" field.</summary>
        public const int ReadSeqIdFieldNumber = 3;
        private long readSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeqId {
          get { return readSeqId_; }
          set {
            readSeqId_ = value;
          }
        }

        /// <summary>Field number for the "unreadMsgCount" field.</summary>
        public const int UnreadMsgCountFieldNumber = 4;
        private int unreadMsgCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnreadMsgCount {
          get { return unreadMsgCount_; }
          set {
            unreadMsgCount_ = value;
          }
        }

        /// <summary>Field number for the "latestMessage" field.</summary>
        public const int LatestMessageFieldNumber = 5;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.Message> _repeated_latestMessage_codec
            = pb::FieldCodec.ForMessage(42, global::AcFunDanmu.Im.ImMessage.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> latestMessage_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> LatestMessage {
          get { return latestMessage_; }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 8;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 9;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "activeTime" field.</summary>
        public const int ActiveTimeFieldNumber = 10;
        private long activeTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ActiveTime {
          get { return activeTime_; }
          set {
            activeTime_ = value;
          }
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 11;
        private int priority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 12;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "cursor" field.</summary>
        public const int CursorFieldNumber = 13;
        private string cursor_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cursor {
          get { return cursor_; }
          set {
            cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "accountType" field.</summary>
        public const int AccountTypeFieldNumber = 14;
        private int accountType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AccountType {
          get { return accountType_; }
          set {
            accountType_ = value;
          }
        }

        /// <summary>Field number for the "aggregateSession" field.</summary>
        public const int AggregateSessionFieldNumber = 15;
        private bool aggregateSession_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool AggregateSession {
          get { return aggregateSession_; }
          set {
            aggregateSession_ = value;
          }
        }

        /// <summary>Field number for the "jumpCategoryId" field.</summary>
        public const int JumpCategoryIdFieldNumber = 16;
        private int jumpCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int JumpCategoryId {
          get { return jumpCategoryId_; }
          set {
            jumpCategoryId_ = value;
          }
        }

        /// <summary>Field number for the "expireAt" field.</summary>
        public const int ExpireAtFieldNumber = 17;
        private long expireAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ExpireAt {
          get { return expireAt_; }
          set {
            expireAt_ = value;
          }
        }

        /// <summary>Field number for the "effectiveFrom" field.</summary>
        public const int EffectiveFromFieldNumber = 18;
        private long effectiveFrom_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long EffectiveFrom {
          get { return effectiveFrom_; }
          set {
            effectiveFrom_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 19;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "remindBody" field.</summary>
        public const int RemindBodyFieldNumber = 20;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.RemindBody> _repeated_remindBody_codec
            = pb::FieldCodec.ForMessage(162, global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RemindBody> remindBody_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RemindBody>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RemindBody> RemindBody {
          get { return remindBody_; }
        }

        /// <summary>Field number for the "targetReadSeqId" field.</summary>
        public const int TargetReadSeqIdFieldNumber = 21;
        private long targetReadSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetReadSeqId {
          get { return targetReadSeqId_; }
          set {
            targetReadSeqId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChatSession);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChatSession other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Target, other.Target)) return false;
          if (MaxSeqId != other.MaxSeqId) return false;
          if (ReadSeqId != other.ReadSeqId) return false;
          if (UnreadMsgCount != other.UnreadMsgCount) return false;
          if(!latestMessage_.Equals(other.latestMessage_)) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if (TargetId != other.TargetId) return false;
          if (ActiveTime != other.ActiveTime) return false;
          if (Priority != other.Priority) return false;
          if (CategoryId != other.CategoryId) return false;
          if (Cursor != other.Cursor) return false;
          if (AccountType != other.AccountType) return false;
          if (AggregateSession != other.AggregateSession) return false;
          if (JumpCategoryId != other.JumpCategoryId) return false;
          if (ExpireAt != other.ExpireAt) return false;
          if (EffectiveFrom != other.EffectiveFrom) return false;
          if (StrTargetId != other.StrTargetId) return false;
          if(!remindBody_.Equals(other.remindBody_)) return false;
          if (TargetReadSeqId != other.TargetReadSeqId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (target_ != null) hash ^= Target.GetHashCode();
          if (MaxSeqId != 0L) hash ^= MaxSeqId.GetHashCode();
          if (ReadSeqId != 0L) hash ^= ReadSeqId.GetHashCode();
          if (UnreadMsgCount != 0) hash ^= UnreadMsgCount.GetHashCode();
          hash ^= latestMessage_.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ActiveTime != 0L) hash ^= ActiveTime.GetHashCode();
          if (Priority != 0) hash ^= Priority.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
          if (AccountType != 0) hash ^= AccountType.GetHashCode();
          if (AggregateSession != false) hash ^= AggregateSession.GetHashCode();
          if (JumpCategoryId != 0) hash ^= JumpCategoryId.GetHashCode();
          if (ExpireAt != 0L) hash ^= ExpireAt.GetHashCode();
          if (EffectiveFrom != 0L) hash ^= EffectiveFrom.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          hash ^= remindBody_.GetHashCode();
          if (TargetReadSeqId != 0L) hash ^= TargetReadSeqId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MaxSeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxSeqId);
          }
          if (ReadSeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ReadSeqId);
          }
          if (UnreadMsgCount != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(UnreadMsgCount);
          }
          latestMessage_.WriteTo(output, _repeated_latestMessage_codec);
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(64);
            output.WriteEnum((int) ChatTargetType);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(72);
            output.WriteInt64(TargetId);
          }
          if (ActiveTime != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(ActiveTime);
          }
          if (Priority != 0) {
            output.WriteRawTag(88);
            output.WriteInt32(Priority);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(96);
            output.WriteInt32(CategoryId);
          }
          if (Cursor.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Cursor);
          }
          if (AccountType != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(AccountType);
          }
          if (AggregateSession != false) {
            output.WriteRawTag(120);
            output.WriteBool(AggregateSession);
          }
          if (JumpCategoryId != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(JumpCategoryId);
          }
          if (ExpireAt != 0L) {
            output.WriteRawTag(136, 1);
            output.WriteInt64(ExpireAt);
          }
          if (EffectiveFrom != 0L) {
            output.WriteRawTag(144, 1);
            output.WriteInt64(EffectiveFrom);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(154, 1);
            output.WriteString(StrTargetId);
          }
          remindBody_.WriteTo(output, _repeated_remindBody_codec);
          if (TargetReadSeqId != 0L) {
            output.WriteRawTag(168, 1);
            output.WriteInt64(TargetReadSeqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MaxSeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxSeqId);
          }
          if (ReadSeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ReadSeqId);
          }
          if (UnreadMsgCount != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(UnreadMsgCount);
          }
          latestMessage_.WriteTo(ref output, _repeated_latestMessage_codec);
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(64);
            output.WriteEnum((int) ChatTargetType);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(72);
            output.WriteInt64(TargetId);
          }
          if (ActiveTime != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(ActiveTime);
          }
          if (Priority != 0) {
            output.WriteRawTag(88);
            output.WriteInt32(Priority);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(96);
            output.WriteInt32(CategoryId);
          }
          if (Cursor.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Cursor);
          }
          if (AccountType != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(AccountType);
          }
          if (AggregateSession != false) {
            output.WriteRawTag(120);
            output.WriteBool(AggregateSession);
          }
          if (JumpCategoryId != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(JumpCategoryId);
          }
          if (ExpireAt != 0L) {
            output.WriteRawTag(136, 1);
            output.WriteInt64(ExpireAt);
          }
          if (EffectiveFrom != 0L) {
            output.WriteRawTag(144, 1);
            output.WriteInt64(EffectiveFrom);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(154, 1);
            output.WriteString(StrTargetId);
          }
          remindBody_.WriteTo(ref output, _repeated_remindBody_codec);
          if (TargetReadSeqId != 0L) {
            output.WriteRawTag(168, 1);
            output.WriteInt64(TargetReadSeqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (MaxSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSeqId);
          }
          if (ReadSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeqId);
          }
          if (UnreadMsgCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnreadMsgCount);
          }
          size += latestMessage_.CalculateSize(_repeated_latestMessage_codec);
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ActiveTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActiveTime);
          }
          if (Priority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (Cursor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cursor);
          }
          if (AccountType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountType);
          }
          if (AggregateSession != false) {
            size += 1 + 1;
          }
          if (JumpCategoryId != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(JumpCategoryId);
          }
          if (ExpireAt != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(ExpireAt);
          }
          if (EffectiveFrom != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(EffectiveFrom);
          }
          if (StrTargetId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          size += remindBody_.CalculateSize(_repeated_remindBody_codec);
          if (TargetReadSeqId != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(TargetReadSeqId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChatSession other) {
          if (other == null) {
            return;
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            Target.MergeFrom(other.Target);
          }
          if (other.MaxSeqId != 0L) {
            MaxSeqId = other.MaxSeqId;
          }
          if (other.ReadSeqId != 0L) {
            ReadSeqId = other.ReadSeqId;
          }
          if (other.UnreadMsgCount != 0) {
            UnreadMsgCount = other.UnreadMsgCount;
          }
          latestMessage_.Add(other.latestMessage_);
          if (other.ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ActiveTime != 0L) {
            ActiveTime = other.ActiveTime;
          }
          if (other.Priority != 0) {
            Priority = other.Priority;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.Cursor.Length != 0) {
            Cursor = other.Cursor;
          }
          if (other.AccountType != 0) {
            AccountType = other.AccountType;
          }
          if (other.AggregateSession != false) {
            AggregateSession = other.AggregateSession;
          }
          if (other.JumpCategoryId != 0) {
            JumpCategoryId = other.JumpCategoryId;
          }
          if (other.ExpireAt != 0L) {
            ExpireAt = other.ExpireAt;
          }
          if (other.EffectiveFrom != 0L) {
            EffectiveFrom = other.EffectiveFrom;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          remindBody_.Add(other.remindBody_);
          if (other.TargetReadSeqId != 0L) {
            TargetReadSeqId = other.TargetReadSeqId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MaxSeqId = input.ReadInt64();
                break;
              }
              case 24: {
                ReadSeqId = input.ReadInt64();
                break;
              }
              case 32: {
                UnreadMsgCount = input.ReadInt32();
                break;
              }
              case 42: {
                latestMessage_.AddEntriesFrom(input, _repeated_latestMessage_codec);
                break;
              }
              case 64: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 72: {
                TargetId = input.ReadInt64();
                break;
              }
              case 80: {
                ActiveTime = input.ReadInt64();
                break;
              }
              case 88: {
                Priority = input.ReadInt32();
                break;
              }
              case 96: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 106: {
                Cursor = input.ReadString();
                break;
              }
              case 112: {
                AccountType = input.ReadInt32();
                break;
              }
              case 120: {
                AggregateSession = input.ReadBool();
                break;
              }
              case 128: {
                JumpCategoryId = input.ReadInt32();
                break;
              }
              case 136: {
                ExpireAt = input.ReadInt64();
                break;
              }
              case 144: {
                EffectiveFrom = input.ReadInt64();
                break;
              }
              case 154: {
                StrTargetId = input.ReadString();
                break;
              }
              case 162: {
                remindBody_.AddEntriesFrom(input, _repeated_remindBody_codec);
                break;
              }
              case 168: {
                TargetReadSeqId = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MaxSeqId = input.ReadInt64();
                break;
              }
              case 24: {
                ReadSeqId = input.ReadInt64();
                break;
              }
              case 32: {
                UnreadMsgCount = input.ReadInt32();
                break;
              }
              case 42: {
                latestMessage_.AddEntriesFrom(ref input, _repeated_latestMessage_codec);
                break;
              }
              case 64: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 72: {
                TargetId = input.ReadInt64();
                break;
              }
              case 80: {
                ActiveTime = input.ReadInt64();
                break;
              }
              case 88: {
                Priority = input.ReadInt32();
                break;
              }
              case 96: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 106: {
                Cursor = input.ReadString();
                break;
              }
              case 112: {
                AccountType = input.ReadInt32();
                break;
              }
              case 120: {
                AggregateSession = input.ReadBool();
                break;
              }
              case 128: {
                JumpCategoryId = input.ReadInt32();
                break;
              }
              case 136: {
                ExpireAt = input.ReadInt64();
                break;
              }
              case 144: {
                EffectiveFrom = input.ReadInt64();
                break;
              }
              case 154: {
                StrTargetId = input.ReadString();
                break;
              }
              case 162: {
                remindBody_.AddEntriesFrom(ref input, _repeated_remindBody_codec);
                break;
              }
              case 168: {
                TargetReadSeqId = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Reminder : pb::IMessage<Reminder>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Reminder> _parser = new pb::MessageParser<Reminder>(() => new Reminder());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Reminder> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reminder() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reminder(Reminder other) : this() {
          originText_ = other.originText_;
          remindBody_ = other.remindBody_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reminder Clone() {
          return new Reminder(this);
        }

        /// <summary>Field number for the "originText" field.</summary>
        public const int OriginTextFieldNumber = 1;
        private string originText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OriginText {
          get { return originText_; }
          set {
            originText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "remindBody" field.</summary>
        public const int RemindBodyFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.RemindBody> _repeated_remindBody_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RemindBody> remindBody_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RemindBody>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RemindBody> RemindBody {
          get { return remindBody_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Reminder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Reminder other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OriginText != other.OriginText) return false;
          if(!remindBody_.Equals(other.remindBody_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OriginText.Length != 0) hash ^= OriginText.GetHashCode();
          hash ^= remindBody_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (OriginText.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OriginText);
          }
          remindBody_.WriteTo(output, _repeated_remindBody_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (OriginText.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OriginText);
          }
          remindBody_.WriteTo(ref output, _repeated_remindBody_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OriginText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginText);
          }
          size += remindBody_.CalculateSize(_repeated_remindBody_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Reminder other) {
          if (other == null) {
            return;
          }
          if (other.OriginText.Length != 0) {
            OriginText = other.OriginText;
          }
          remindBody_.Add(other.remindBody_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                OriginText = input.ReadString();
                break;
              }
              case 18: {
                remindBody_.AddEntriesFrom(input, _repeated_remindBody_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                OriginText = input.ReadString();
                break;
              }
              case 18: {
                remindBody_.AddEntriesFrom(ref input, _repeated_remindBody_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RemindBody : pb::IMessage<RemindBody>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RemindBody> _parser = new pb::MessageParser<RemindBody>(() => new RemindBody());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RemindBody> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemindBody() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemindBody(RemindBody other) : this() {
          remindType_ = other.remindType_;
          seqId_ = other.seqId_;
          targetId_ = other.targetId_;
          userName_ = other.userName_;
          startIndex_ = other.startIndex_;
          length_ = other.length_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemindBody Clone() {
          return new RemindBody(this);
        }

        /// <summary>Field number for the "remindType" field.</summary>
        public const int RemindTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType remindType_ = global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType RemindType {
          get { return remindType_; }
          set {
            remindType_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 3;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "userName" field.</summary>
        public const int UserNameFieldNumber = 4;
        private string userName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserName {
          get { return userName_; }
          set {
            userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "startIndex" field.</summary>
        public const int StartIndexFieldNumber = 5;
        private int startIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StartIndex {
          get { return startIndex_; }
          set {
            startIndex_ = value;
          }
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 6;
        private int length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RemindBody);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RemindBody other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RemindType != other.RemindType) return false;
          if (SeqId != other.SeqId) return false;
          if (TargetId != other.TargetId) return false;
          if (UserName != other.UserName) return false;
          if (StartIndex != other.StartIndex) return false;
          if (Length != other.Length) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RemindType != global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType.Unknown) hash ^= RemindType.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (UserName.Length != 0) hash ^= UserName.GetHashCode();
          if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
          if (Length != 0) hash ^= Length.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RemindType != global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) RemindType);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TargetId);
          }
          if (UserName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(UserName);
          }
          if (StartIndex != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(StartIndex);
          }
          if (Length != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RemindType != global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) RemindType);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TargetId);
          }
          if (UserName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(UserName);
          }
          if (StartIndex != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(StartIndex);
          }
          if (Length != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RemindType != global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RemindType);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (UserName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
          }
          if (StartIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
          }
          if (Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RemindBody other) {
          if (other == null) {
            return;
          }
          if (other.RemindType != global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType.Unknown) {
            RemindType = other.RemindType;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.UserName.Length != 0) {
            UserName = other.UserName;
          }
          if (other.StartIndex != 0) {
            StartIndex = other.StartIndex;
          }
          if (other.Length != 0) {
            Length = other.Length;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RemindType = (global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType) input.ReadEnum();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                TargetId = input.ReadInt64();
                break;
              }
              case 34: {
                UserName = input.ReadString();
                break;
              }
              case 40: {
                StartIndex = input.ReadInt32();
                break;
              }
              case 48: {
                Length = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RemindType = (global::AcFunDanmu.Im.ImMessage.Types.RemindBody.Types.RemindType) input.ReadEnum();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                TargetId = input.ReadInt64();
                break;
              }
              case 34: {
                UserName = input.ReadString();
                break;
              }
              case 40: {
                StartIndex = input.ReadInt32();
                break;
              }
              case 48: {
                Length = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the RemindBody message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum RemindType {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("AT_ALL")] AtAll = 1,
            [pbr::OriginalName("AT_USER")] AtUser = 2,
            [pbr::OriginalName("GROUP_BULLETIN")] GroupBulletin = 3,
            [pbr::OriginalName("RECEIPT_MESSAGE")] ReceiptMessage = 4,
            [pbr::OriginalName("GROUP_JOIN_REQUEST")] GroupJoinRequest = 5,
          }

        }
        #endregion

      }

      public sealed partial class ChatTarget : pb::IMessage<ChatTarget>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ChatTarget> _parser = new pb::MessageParser<ChatTarget>(() => new ChatTarget());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChatTarget> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatTarget() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatTarget(ChatTarget other) : this() {
          targetId_ = other.targetId_;
          targetType_ = other.targetType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatTarget Clone() {
          return new ChatTarget(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private string targetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetId {
          get { return targetId_; }
          set {
            targetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "targetType" field.</summary>
        public const int TargetTypeFieldNumber = 2;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType targetType_ = global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType TargetType {
          get { return targetType_; }
          set {
            targetType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChatTarget);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChatTarget other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (TargetType != other.TargetType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId.Length != 0) hash ^= TargetId.GetHashCode();
          if (TargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) hash ^= TargetType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TargetId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetId);
          }
          if (TargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) TargetType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TargetId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetId);
          }
          if (TargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) TargetType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetId);
          }
          if (TargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TargetType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChatTarget other) {
          if (other == null) {
            return;
          }
          if (other.TargetId.Length != 0) {
            TargetId = other.TargetId;
          }
          if (other.TargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            TargetType = other.TargetType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TargetId = input.ReadString();
                break;
              }
              case 16: {
                TargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TargetId = input.ReadString();
                break;
              }
              case 16: {
                TargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionListResponse : pb::IMessage<SessionListResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionListResponse> _parser = new pb::MessageParser<SessionListResponse>(() => new SessionListResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionListResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListResponse(SessionListResponse other) : this() {
          syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
          sessions_ = other.sessions_.Clone();
          notFullFetch_ = other.notFullFetch_;
          serverTime_ = other.serverTime_;
          clearLocalData_ = other.clearLocalData_;
          categoryId_ = other.categoryId_;
          clientDataStatus_ = other.clientDataStatus_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListResponse Clone() {
          return new SessionListResponse(this);
        }

        /// <summary>Field number for the "syncCookie" field.</summary>
        public const int SyncCookieFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
          get { return syncCookie_; }
          set {
            syncCookie_ = value;
          }
        }

        /// <summary>Field number for the "sessions" field.</summary>
        public const int SessionsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.ChatSession> _repeated_sessions_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.ImMessage.Types.ChatSession.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatSession> sessions_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatSession>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatSession> Sessions {
          get { return sessions_; }
        }

        /// <summary>Field number for the "notFullFetch" field.</summary>
        public const int NotFullFetchFieldNumber = 3;
        private bool notFullFetch_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotFullFetch {
          get { return notFullFetch_; }
          set {
            notFullFetch_ = value;
          }
        }

        /// <summary>Field number for the "serverTime" field.</summary>
        public const int ServerTimeFieldNumber = 4;
        private long serverTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerTime {
          get { return serverTime_; }
          set {
            serverTime_ = value;
          }
        }

        /// <summary>Field number for the "clearLocalData" field.</summary>
        public const int ClearLocalDataFieldNumber = 5;
        private bool clearLocalData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ClearLocalData {
          get { return clearLocalData_; }
          set {
            clearLocalData_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 6;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "clientDataStatus" field.</summary>
        public const int ClientDataStatusFieldNumber = 7;
        private int clientDataStatus_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ClientDataStatus {
          get { return clientDataStatus_; }
          set {
            clientDataStatus_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionListResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionListResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
          if(!sessions_.Equals(other.sessions_)) return false;
          if (NotFullFetch != other.NotFullFetch) return false;
          if (ServerTime != other.ServerTime) return false;
          if (ClearLocalData != other.ClearLocalData) return false;
          if (CategoryId != other.CategoryId) return false;
          if (ClientDataStatus != other.ClientDataStatus) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
          hash ^= sessions_.GetHashCode();
          if (NotFullFetch != false) hash ^= NotFullFetch.GetHashCode();
          if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
          if (ClearLocalData != false) hash ^= ClearLocalData.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (ClientDataStatus != 0) hash ^= ClientDataStatus.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (syncCookie_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SyncCookie);
          }
          sessions_.WriteTo(output, _repeated_sessions_codec);
          if (NotFullFetch != false) {
            output.WriteRawTag(24);
            output.WriteBool(NotFullFetch);
          }
          if (ServerTime != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ServerTime);
          }
          if (ClearLocalData != false) {
            output.WriteRawTag(40);
            output.WriteBool(ClearLocalData);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(CategoryId);
          }
          if (ClientDataStatus != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(ClientDataStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (syncCookie_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SyncCookie);
          }
          sessions_.WriteTo(ref output, _repeated_sessions_codec);
          if (NotFullFetch != false) {
            output.WriteRawTag(24);
            output.WriteBool(NotFullFetch);
          }
          if (ServerTime != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ServerTime);
          }
          if (ClearLocalData != false) {
            output.WriteRawTag(40);
            output.WriteBool(ClearLocalData);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(CategoryId);
          }
          if (ClientDataStatus != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(ClientDataStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (syncCookie_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
          }
          size += sessions_.CalculateSize(_repeated_sessions_codec);
          if (NotFullFetch != false) {
            size += 1 + 1;
          }
          if (ServerTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
          }
          if (ClearLocalData != false) {
            size += 1 + 1;
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (ClientDataStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientDataStatus);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionListResponse other) {
          if (other == null) {
            return;
          }
          if (other.syncCookie_ != null) {
            if (syncCookie_ == null) {
              SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
            }
            SyncCookie.MergeFrom(other.SyncCookie);
          }
          sessions_.Add(other.sessions_);
          if (other.NotFullFetch != false) {
            NotFullFetch = other.NotFullFetch;
          }
          if (other.ServerTime != 0L) {
            ServerTime = other.ServerTime;
          }
          if (other.ClearLocalData != false) {
            ClearLocalData = other.ClearLocalData;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.ClientDataStatus != 0) {
            ClientDataStatus = other.ClientDataStatus;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                input.ReadMessage(SyncCookie);
                break;
              }
              case 18: {
                sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
                break;
              }
              case 24: {
                NotFullFetch = input.ReadBool();
                break;
              }
              case 32: {
                ServerTime = input.ReadInt64();
                break;
              }
              case 40: {
                ClearLocalData = input.ReadBool();
                break;
              }
              case 48: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 56: {
                ClientDataStatus = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                input.ReadMessage(SyncCookie);
                break;
              }
              case 18: {
                sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
                break;
              }
              case 24: {
                NotFullFetch = input.ReadBool();
                break;
              }
              case 32: {
                ServerTime = input.ReadInt64();
                break;
              }
              case 40: {
                ClearLocalData = input.ReadBool();
                break;
              }
              case 48: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 56: {
                ClientDataStatus = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionPageListRequest : pb::IMessage<SessionPageListRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionPageListRequest> _parser = new pb::MessageParser<SessionPageListRequest>(() => new SessionPageListRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionPageListRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListRequest(SessionPageListRequest other) : this() {
          cursor_ = other.cursor_;
          count_ = other.count_;
          categoryId_ = other.categoryId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListRequest Clone() {
          return new SessionPageListRequest(this);
        }

        /// <summary>Field number for the "cursor" field.</summary>
        public const int CursorFieldNumber = 1;
        private string cursor_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cursor {
          get { return cursor_; }
          set {
            cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 3;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionPageListRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionPageListRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Cursor != other.Cursor) return false;
          if (Count != other.Count) return false;
          if (CategoryId != other.CategoryId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Cursor.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Cursor);
          }
          if (Count != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Count);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(CategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Cursor.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Cursor);
          }
          if (Count != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Count);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(CategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Cursor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cursor);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionPageListRequest other) {
          if (other == null) {
            return;
          }
          if (other.Cursor.Length != 0) {
            Cursor = other.Cursor;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Cursor = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadInt32();
                break;
              }
              case 24: {
                CategoryId = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Cursor = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadInt32();
                break;
              }
              case 24: {
                CategoryId = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionPageListResponse : pb::IMessage<SessionPageListResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionPageListResponse> _parser = new pb::MessageParser<SessionPageListResponse>(() => new SessionPageListResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionPageListResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListResponse(SessionPageListResponse other) : this() {
          hasMore_ = other.hasMore_;
          sessions_ = other.sessions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListResponse Clone() {
          return new SessionPageListResponse(this);
        }

        /// <summary>Field number for the "hasMore" field.</summary>
        public const int HasMoreFieldNumber = 1;
        private bool hasMore_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMore {
          get { return hasMore_; }
          set {
            hasMore_ = value;
          }
        }

        /// <summary>Field number for the "sessions" field.</summary>
        public const int SessionsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.ChatSession> _repeated_sessions_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.ImMessage.Types.ChatSession.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatSession> sessions_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatSession>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatSession> Sessions {
          get { return sessions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionPageListResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionPageListResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HasMore != other.HasMore) return false;
          if(!sessions_.Equals(other.sessions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasMore != false) hash ^= HasMore.GetHashCode();
          hash ^= sessions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasMore != false) {
            output.WriteRawTag(8);
            output.WriteBool(HasMore);
          }
          sessions_.WriteTo(output, _repeated_sessions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasMore != false) {
            output.WriteRawTag(8);
            output.WriteBool(HasMore);
          }
          sessions_.WriteTo(ref output, _repeated_sessions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasMore != false) {
            size += 1 + 1;
          }
          size += sessions_.CalculateSize(_repeated_sessions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionPageListResponse other) {
          if (other == null) {
            return;
          }
          if (other.HasMore != false) {
            HasMore = other.HasMore;
          }
          sessions_.Add(other.sessions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                HasMore = input.ReadBool();
                break;
              }
              case 18: {
                sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                HasMore = input.ReadBool();
                break;
              }
              case 18: {
                sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionRemoveRequest : pb::IMessage<SessionRemoveRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionRemoveRequest> _parser = new pb::MessageParser<SessionRemoveRequest>(() => new SessionRemoveRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionRemoveRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveRequest(SessionRemoveRequest other) : this() {
          targetId_ = other.targetId_;
          chatTargetType_ = other.chatTargetType_;
          categoryId_ = other.categoryId_;
          strTargetId_ = other.strTargetId_;
          notCleanAllMessages_ = other.notCleanAllMessages_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveRequest Clone() {
          return new SessionRemoveRequest(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 2;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 3;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 4;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "notCleanAllMessages" field.</summary>
        public const int NotCleanAllMessagesFieldNumber = 5;
        private bool notCleanAllMessages_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotCleanAllMessages {
          get { return notCleanAllMessages_; }
          set {
            notCleanAllMessages_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionRemoveRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionRemoveRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if (CategoryId != other.CategoryId) return false;
          if (StrTargetId != other.StrTargetId) return false;
          if (NotCleanAllMessages != other.NotCleanAllMessages) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (NotCleanAllMessages != false) hash ^= NotCleanAllMessages.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ChatTargetType);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(CategoryId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (NotCleanAllMessages != false) {
            output.WriteRawTag(40);
            output.WriteBool(NotCleanAllMessages);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ChatTargetType);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(CategoryId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (NotCleanAllMessages != false) {
            output.WriteRawTag(40);
            output.WriteBool(NotCleanAllMessages);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (NotCleanAllMessages != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionRemoveRequest other) {
          if (other == null) {
            return;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          if (other.NotCleanAllMessages != false) {
            NotCleanAllMessages = other.NotCleanAllMessages;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 24: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
              case 40: {
                NotCleanAllMessages = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 24: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
              case 40: {
                NotCleanAllMessages = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionRemoveResponse : pb::IMessage<SessionRemoveResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionRemoveResponse> _parser = new pb::MessageParser<SessionRemoveResponse>(() => new SessionRemoveResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionRemoveResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveResponse(SessionRemoveResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveResponse Clone() {
          return new SessionRemoveResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionRemoveResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionRemoveResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionRemoveResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class SessionCleanRequest : pb::IMessage<SessionCleanRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionCleanRequest> _parser = new pb::MessageParser<SessionCleanRequest>(() => new SessionCleanRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionCleanRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanRequest(SessionCleanRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanRequest Clone() {
          return new SessionCleanRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionCleanRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionCleanRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionCleanRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionCleanResponse : pb::IMessage<SessionCleanResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionCleanResponse> _parser = new pb::MessageParser<SessionCleanResponse>(() => new SessionCleanResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionCleanResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanResponse(SessionCleanResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanResponse Clone() {
          return new SessionCleanResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionCleanResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionCleanResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionCleanResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class MessageDeleteRequest : pb::IMessage<MessageDeleteRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageDeleteRequest> _parser = new pb::MessageParser<MessageDeleteRequest>(() => new MessageDeleteRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageDeleteRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteRequest(MessageDeleteRequest other) : this() {
          targetId_ = other.targetId_;
          chatTargetType_ = other.chatTargetType_;
          seqId_ = other.seqId_.Clone();
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteRequest Clone() {
          return new MessageDeleteRequest(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 2;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 3;
        private static readonly pb::FieldCodec<long> _repeated_seqId_codec
            = pb::FieldCodec.ForInt64(26);
        private readonly pbc::RepeatedField<long> seqId_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SeqId {
          get { return seqId_; }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 4;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageDeleteRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageDeleteRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if(!seqId_.Equals(other.seqId_)) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          hash ^= seqId_.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ChatTargetType);
          }
          seqId_.WriteTo(output, _repeated_seqId_codec);
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ChatTargetType);
          }
          seqId_.WriteTo(ref output, _repeated_seqId_codec);
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          size += seqId_.CalculateSize(_repeated_seqId_codec);
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageDeleteRequest other) {
          if (other == null) {
            return;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          seqId_.Add(other.seqId_);
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 26:
              case 24: {
                seqId_.AddEntriesFrom(input, _repeated_seqId_codec);
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 26:
              case 24: {
                seqId_.AddEntriesFrom(ref input, _repeated_seqId_codec);
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageDeleteResponse : pb::IMessage<MessageDeleteResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageDeleteResponse> _parser = new pb::MessageParser<MessageDeleteResponse>(() => new MessageDeleteResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageDeleteResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteResponse(MessageDeleteResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteResponse Clone() {
          return new MessageDeleteResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageDeleteResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageDeleteResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageDeleteResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class MessageCancelRequest : pb::IMessage<MessageCancelRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageCancelRequest> _parser = new pb::MessageParser<MessageCancelRequest>(() => new MessageCancelRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageCancelRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelRequest(MessageCancelRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          seqId_ = other.seqId_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelRequest Clone() {
          return new MessageCancelRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_seqId_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> seqId_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SeqId {
          get { return seqId_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageCancelRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageCancelRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if(!seqId_.Equals(other.seqId_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          hash ^= seqId_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          seqId_.WriteTo(output, _repeated_seqId_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          seqId_.WriteTo(ref output, _repeated_seqId_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          size += seqId_.CalculateSize(_repeated_seqId_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageCancelRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          seqId_.Add(other.seqId_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 18:
              case 16: {
                seqId_.AddEntriesFrom(input, _repeated_seqId_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 18:
              case 16: {
                seqId_.AddEntriesFrom(ref input, _repeated_seqId_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageCancelResponse : pb::IMessage<MessageCancelResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageCancelResponse> _parser = new pb::MessageParser<MessageCancelResponse>(() => new MessageCancelResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageCancelResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelResponse(MessageCancelResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelResponse Clone() {
          return new MessageCancelResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageCancelResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageCancelResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageCancelResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class MessageClearRequest : pb::IMessage<MessageClearRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageClearRequest> _parser = new pb::MessageParser<MessageClearRequest>(() => new MessageClearRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageClearRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearRequest(MessageClearRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearRequest Clone() {
          return new MessageClearRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageClearRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageClearRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageClearRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageClearResponse : pb::IMessage<MessageClearResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageClearResponse> _parser = new pb::MessageParser<MessageClearResponse>(() => new MessageClearResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageClearResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearResponse(MessageClearResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearResponse Clone() {
          return new MessageClearResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageClearResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageClearResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageClearResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class ReadSeqInfo : pb::IMessage<ReadSeqInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReadSeqInfo> _parser = new pb::MessageParser<ReadSeqInfo>(() => new ReadSeqInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReadSeqInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadSeqInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadSeqInfo(ReadSeqInfo other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          readSeq_ = other.readSeq_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadSeqInfo Clone() {
          return new ReadSeqInfo(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "readSeq" field.</summary>
        public const int ReadSeqFieldNumber = 2;
        private long readSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeq {
          get { return readSeq_; }
          set {
            readSeq_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReadSeqInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReadSeqInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if (ReadSeq != other.ReadSeq) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (ReadSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (ReadSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (ReadSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReadSeqInfo other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          if (other.ReadSeq != 0L) {
            ReadSeq = other.ReadSeq;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                ReadSeq = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                ReadSeq = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReadSeqRequest : pb::IMessage<MessageReadSeqRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReadSeqRequest> _parser = new pb::MessageParser<MessageReadSeqRequest>(() => new MessageReadSeqRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadSeqRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqRequest(MessageReadSeqRequest other) : this() {
          chatTarget_ = other.chatTarget_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqRequest Clone() {
          return new MessageReadSeqRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.ChatTarget> _repeated_chatTarget_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.ChatTarget.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatTarget> chatTarget_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatTarget>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ChatTarget> ChatTarget {
          get { return chatTarget_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadSeqRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadSeqRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!chatTarget_.Equals(other.chatTarget_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= chatTarget_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          chatTarget_.WriteTo(output, _repeated_chatTarget_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          chatTarget_.WriteTo(ref output, _repeated_chatTarget_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += chatTarget_.CalculateSize(_repeated_chatTarget_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadSeqRequest other) {
          if (other == null) {
            return;
          }
          chatTarget_.Add(other.chatTarget_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                chatTarget_.AddEntriesFrom(input, _repeated_chatTarget_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                chatTarget_.AddEntriesFrom(ref input, _repeated_chatTarget_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReadSeqResponse : pb::IMessage<MessageReadSeqResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReadSeqResponse> _parser = new pb::MessageParser<MessageReadSeqResponse>(() => new MessageReadSeqResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadSeqResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqResponse(MessageReadSeqResponse other) : this() {
          readSeqInfo_ = other.readSeqInfo_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqResponse Clone() {
          return new MessageReadSeqResponse(this);
        }

        /// <summary>Field number for the "readSeqInfo" field.</summary>
        public const int ReadSeqInfoFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.ReadSeqInfo> _repeated_readSeqInfo_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.ReadSeqInfo.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ReadSeqInfo> readSeqInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ReadSeqInfo>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.ReadSeqInfo> ReadSeqInfo {
          get { return readSeqInfo_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadSeqResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadSeqResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!readSeqInfo_.Equals(other.readSeqInfo_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= readSeqInfo_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          readSeqInfo_.WriteTo(output, _repeated_readSeqInfo_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          readSeqInfo_.WriteTo(ref output, _repeated_readSeqInfo_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += readSeqInfo_.CalculateSize(_repeated_readSeqInfo_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadSeqResponse other) {
          if (other == null) {
            return;
          }
          readSeqInfo_.Add(other.readSeqInfo_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                readSeqInfo_.AddEntriesFrom(input, _repeated_readSeqInfo_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                readSeqInfo_.AddEntriesFrom(ref input, _repeated_readSeqInfo_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReadPush : pb::IMessage<MessageReadPush>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReadPush> _parser = new pb::MessageParser<MessageReadPush>(() => new MessageReadPush());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadPush> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[27]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadPush() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadPush(MessageReadPush other) : this() {
          targetId_ = other.targetId_;
          readSeq_ = other.readSeq_;
          chatTargetType_ = other.chatTargetType_;
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadPush Clone() {
          return new MessageReadPush(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "readSeq" field.</summary>
        public const int ReadSeqFieldNumber = 2;
        private long readSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeq {
          get { return readSeq_; }
          set {
            readSeq_ = value;
          }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 3;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 4;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadPush);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadPush other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (ReadSeq != other.ReadSeq) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ReadSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadSeq);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(24);
            output.WriteEnum((int) ChatTargetType);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ReadSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadSeq);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(24);
            output.WriteEnum((int) ChatTargetType);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ReadSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadPush other) {
          if (other == null) {
            return;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ReadSeq != 0L) {
            ReadSeq = other.ReadSeq;
          }
          if (other.ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ReadSeq = input.ReadInt64();
                break;
              }
              case 24: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ReadSeq = input.ReadInt64();
                break;
              }
              case 24: {
                ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AllUnreadCountRequest : pb::IMessage<AllUnreadCountRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AllUnreadCountRequest> _parser = new pb::MessageParser<AllUnreadCountRequest>(() => new AllUnreadCountRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AllUnreadCountRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[28]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountRequest(AllUnreadCountRequest other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountRequest Clone() {
          return new AllUnreadCountRequest(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AllUnreadCountRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AllUnreadCountRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AllUnreadCountRequest other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class AllUnreadCountResponse : pb::IMessage<AllUnreadCountResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AllUnreadCountResponse> _parser = new pb::MessageParser<AllUnreadCountResponse>(() => new AllUnreadCountResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AllUnreadCountResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[29]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountResponse(AllUnreadCountResponse other) : this() {
          allUnreadCount_ = other.allUnreadCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountResponse Clone() {
          return new AllUnreadCountResponse(this);
        }

        /// <summary>Field number for the "allUnreadCount" field.</summary>
        public const int AllUnreadCountFieldNumber = 1;
        private int allUnreadCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AllUnreadCount {
          get { return allUnreadCount_; }
          set {
            allUnreadCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AllUnreadCountResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AllUnreadCountResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AllUnreadCount != other.AllUnreadCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AllUnreadCount != 0) hash ^= AllUnreadCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AllUnreadCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AllUnreadCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AllUnreadCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AllUnreadCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AllUnreadCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllUnreadCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AllUnreadCountResponse other) {
          if (other == null) {
            return;
          }
          if (other.AllUnreadCount != 0) {
            AllUnreadCount = other.AllUnreadCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AllUnreadCount = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                AllUnreadCount = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReadAllRequest : pb::IMessage<MessageReadAllRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReadAllRequest> _parser = new pb::MessageParser<MessageReadAllRequest>(() => new MessageReadAllRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadAllRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[30]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllRequest(MessageReadAllRequest other) : this() {
          sessionCategoryId_ = other.sessionCategoryId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllRequest Clone() {
          return new MessageReadAllRequest(this);
        }

        /// <summary>Field number for the "sessionCategoryId" field.</summary>
        public const int SessionCategoryIdFieldNumber = 1;
        private int sessionCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionCategoryId {
          get { return sessionCategoryId_; }
          set {
            sessionCategoryId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadAllRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadAllRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SessionCategoryId != other.SessionCategoryId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SessionCategoryId != 0) hash ^= SessionCategoryId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SessionCategoryId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(SessionCategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SessionCategoryId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(SessionCategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SessionCategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCategoryId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadAllRequest other) {
          if (other == null) {
            return;
          }
          if (other.SessionCategoryId != 0) {
            SessionCategoryId = other.SessionCategoryId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReadAllResponse : pb::IMessage<MessageReadAllResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReadAllResponse> _parser = new pb::MessageParser<MessageReadAllResponse>(() => new MessageReadAllResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadAllResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[31]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllResponse(MessageReadAllResponse other) : this() {
          readAllTimestamp_ = other.readAllTimestamp_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllResponse Clone() {
          return new MessageReadAllResponse(this);
        }

        /// <summary>Field number for the "readAllTimestamp" field.</summary>
        public const int ReadAllTimestampFieldNumber = 1;
        private long readAllTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadAllTimestamp {
          get { return readAllTimestamp_; }
          set {
            readAllTimestamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadAllResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadAllResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReadAllTimestamp != other.ReadAllTimestamp) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReadAllTimestamp != 0L) hash ^= ReadAllTimestamp.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReadAllTimestamp != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ReadAllTimestamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReadAllTimestamp != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ReadAllTimestamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReadAllTimestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadAllTimestamp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadAllResponse other) {
          if (other == null) {
            return;
          }
          if (other.ReadAllTimestamp != 0L) {
            ReadAllTimestamp = other.ReadAllTimestamp;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReadAllTimestamp = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReadAllTimestamp = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SesionStickyOnTopRequest : pb::IMessage<SesionStickyOnTopRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SesionStickyOnTopRequest> _parser = new pb::MessageParser<SesionStickyOnTopRequest>(() => new SesionStickyOnTopRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SesionStickyOnTopRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[32]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SesionStickyOnTopRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SesionStickyOnTopRequest(SesionStickyOnTopRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          stickyOnTop_ = other.stickyOnTop_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SesionStickyOnTopRequest Clone() {
          return new SesionStickyOnTopRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "stickyOnTop" field.</summary>
        public const int StickyOnTopFieldNumber = 2;
        private bool stickyOnTop_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool StickyOnTop {
          get { return stickyOnTop_; }
          set {
            stickyOnTop_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SesionStickyOnTopRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SesionStickyOnTopRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if (StickyOnTop != other.StickyOnTop) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (StickyOnTop != false) hash ^= StickyOnTop.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (StickyOnTop != false) {
            output.WriteRawTag(16);
            output.WriteBool(StickyOnTop);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (StickyOnTop != false) {
            output.WriteRawTag(16);
            output.WriteBool(StickyOnTop);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (StickyOnTop != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SesionStickyOnTopRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          if (other.StickyOnTop != false) {
            StickyOnTop = other.StickyOnTop;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                StickyOnTop = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                StickyOnTop = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionStickyOnTopResponse : pb::IMessage<SessionStickyOnTopResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionStickyOnTopResponse> _parser = new pb::MessageParser<SessionStickyOnTopResponse>(() => new SessionStickyOnTopResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionStickyOnTopResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[33]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStickyOnTopResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStickyOnTopResponse(SessionStickyOnTopResponse other) : this() {
          session_ = other.session_ != null ? other.session_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStickyOnTopResponse Clone() {
          return new SessionStickyOnTopResponse(this);
        }

        /// <summary>Field number for the "session" field.</summary>
        public const int SessionFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatSession session_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatSession Session {
          get { return session_; }
          set {
            session_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionStickyOnTopResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionStickyOnTopResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Session, other.Session)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (session_ != null) hash ^= Session.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (session_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Session);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (session_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Session);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (session_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionStickyOnTopResponse other) {
          if (other == null) {
            return;
          }
          if (other.session_ != null) {
            if (session_ == null) {
              Session = new global::AcFunDanmu.Im.ImMessage.Types.ChatSession();
            }
            Session.MergeFrom(other.Session);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (session_ == null) {
                  Session = new global::AcFunDanmu.Im.ImMessage.Types.ChatSession();
                }
                input.ReadMessage(Session);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (session_ == null) {
                  Session = new global::AcFunDanmu.Im.ImMessage.Types.ChatSession();
                }
                input.ReadMessage(Session);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SessionRaw : pb::IMessage<SessionRaw>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionRaw> _parser = new pb::MessageParser<SessionRaw>(() => new SessionRaw());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionRaw> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[34]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRaw() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRaw(SessionRaw other) : this() {
          raw_ = other.raw_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRaw Clone() {
          return new SessionRaw(this);
        }

        /// <summary>Field number for the "raw" field.</summary>
        public const int RawFieldNumber = 1;
        private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_raw_codec
            = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 10);
        private readonly pbc::MapField<string, pb::ByteString> raw_ = new pbc::MapField<string, pb::ByteString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, pb::ByteString> Raw {
          get { return raw_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionRaw);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionRaw other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!Raw.Equals(other.Raw)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= Raw.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          raw_.WriteTo(output, _map_raw_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          raw_.WriteTo(ref output, _map_raw_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += raw_.CalculateSize(_map_raw_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionRaw other) {
          if (other == null) {
            return;
          }
          raw_.Add(other.raw_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                raw_.AddEntriesFrom(input, _map_raw_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                raw_.AddEntriesFrom(ref input, _map_raw_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageRecallRequest : pb::IMessage<MessageRecallRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageRecallRequest> _parser = new pb::MessageParser<MessageRecallRequest>(() => new MessageRecallRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageRecallRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[35]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallRequest(MessageRecallRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          seqId_ = other.seqId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallRequest Clone() {
          return new MessageRecallRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageRecallRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageRecallRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if (SeqId != other.SeqId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageRecallRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageRecallResponse : pb::IMessage<MessageRecallResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageRecallResponse> _parser = new pb::MessageParser<MessageRecallResponse>(() => new MessageRecallResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageRecallResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[36]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallResponse(MessageRecallResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallResponse Clone() {
          return new MessageRecallResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageRecallResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageRecallResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageRecallResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptRequest : pb::IMessage<MessageReceiptRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptRequest> _parser = new pb::MessageParser<MessageReceiptRequest>(() => new MessageReceiptRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[37]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptRequest(MessageReceiptRequest other) : this() {
          messageReceiptInfo_ = other.messageReceiptInfo_.Clone();
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptRequest Clone() {
          return new MessageReceiptRequest(this);
        }

        /// <summary>Field number for the "messageReceiptInfo" field.</summary>
        public const int MessageReceiptInfoFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptInfo> _repeated_messageReceiptInfo_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptInfo.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptInfo> messageReceiptInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptInfo>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptInfo> MessageReceiptInfo {
          get { return messageReceiptInfo_; }
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 2;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!messageReceiptInfo_.Equals(other.messageReceiptInfo_)) return false;
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= messageReceiptInfo_.GetHashCode();
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          messageReceiptInfo_.WriteTo(output, _repeated_messageReceiptInfo_codec);
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          messageReceiptInfo_.WriteTo(ref output, _repeated_messageReceiptInfo_codec);
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += messageReceiptInfo_.CalculateSize(_repeated_messageReceiptInfo_codec);
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptRequest other) {
          if (other == null) {
            return;
          }
          messageReceiptInfo_.Add(other.messageReceiptInfo_);
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                messageReceiptInfo_.AddEntriesFrom(input, _repeated_messageReceiptInfo_codec);
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                messageReceiptInfo_.AddEntriesFrom(ref input, _repeated_messageReceiptInfo_codec);
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptResponse : pb::IMessage<MessageReceiptResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptResponse> _parser = new pb::MessageParser<MessageReceiptResponse>(() => new MessageReceiptResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[38]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptResponse(MessageReceiptResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptResponse Clone() {
          return new MessageReceiptResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptInfo : pb::IMessage<MessageReceiptInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptInfo> _parser = new pb::MessageParser<MessageReceiptInfo>(() => new MessageReceiptInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[39]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptInfo(MessageReceiptInfo other) : this() {
          readSeq_ = other.readSeq_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptInfo Clone() {
          return new MessageReceiptInfo(this);
        }

        /// <summary>Field number for the "readSeq" field.</summary>
        public const int ReadSeqFieldNumber = 1;
        private long readSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeq {
          get { return readSeq_; }
          set {
            readSeq_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReadSeq != other.ReadSeq) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReadSeq != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ReadSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReadSeq != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ReadSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReadSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptInfo other) {
          if (other == null) {
            return;
          }
          if (other.ReadSeq != 0L) {
            ReadSeq = other.ReadSeq;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReadSeq = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReadSeq = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptCountGetRequest : pb::IMessage<MessageReceiptCountGetRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptCountGetRequest> _parser = new pb::MessageParser<MessageReceiptCountGetRequest>(() => new MessageReceiptCountGetRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptCountGetRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[40]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetRequest(MessageReceiptCountGetRequest other) : this() {
          seqId_ = other.seqId_.Clone();
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetRequest Clone() {
          return new MessageReceiptCountGetRequest(this);
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_seqId_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> seqId_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SeqId {
          get { return seqId_; }
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 2;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptCountGetRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptCountGetRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!seqId_.Equals(other.seqId_)) return false;
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= seqId_.GetHashCode();
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          seqId_.WriteTo(output, _repeated_seqId_codec);
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          seqId_.WriteTo(ref output, _repeated_seqId_codec);
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += seqId_.CalculateSize(_repeated_seqId_codec);
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptCountGetRequest other) {
          if (other == null) {
            return;
          }
          seqId_.Add(other.seqId_);
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                seqId_.AddEntriesFrom(input, _repeated_seqId_codec);
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                seqId_.AddEntriesFrom(ref input, _repeated_seqId_codec);
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptCountGetResponse : pb::IMessage<MessageReceiptCountGetResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptCountGetResponse> _parser = new pb::MessageParser<MessageReceiptCountGetResponse>(() => new MessageReceiptCountGetResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptCountGetResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[41]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetResponse(MessageReceiptCountGetResponse other) : this() {
          status_ = other.status_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetResponse Clone() {
          return new MessageReceiptCountGetResponse(this);
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus> _repeated_status_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus> status_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus> Status {
          get { return status_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptCountGetResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptCountGetResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!status_.Equals(other.status_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= status_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          status_.WriteTo(output, _repeated_status_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          status_.WriteTo(ref output, _repeated_status_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += status_.CalculateSize(_repeated_status_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptCountGetResponse other) {
          if (other == null) {
            return;
          }
          status_.Add(other.status_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                status_.AddEntriesFrom(input, _repeated_status_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                status_.AddEntriesFrom(ref input, _repeated_status_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptStatus : pb::IMessage<MessageReceiptStatus>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptStatus> _parser = new pb::MessageParser<MessageReceiptStatus>(() => new MessageReceiptStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[42]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptStatus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptStatus(MessageReceiptStatus other) : this() {
          readCount_ = other.readCount_;
          unreadCount_ = other.unreadCount_;
          seqId_ = other.seqId_;
          serverTime_ = other.serverTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptStatus Clone() {
          return new MessageReceiptStatus(this);
        }

        /// <summary>Field number for the "readCount" field.</summary>
        public const int ReadCountFieldNumber = 1;
        private int readCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ReadCount {
          get { return readCount_; }
          set {
            readCount_ = value;
          }
        }

        /// <summary>Field number for the "unreadCount" field.</summary>
        public const int UnreadCountFieldNumber = 2;
        private int unreadCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnreadCount {
          get { return unreadCount_; }
          set {
            unreadCount_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 3;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "serverTime" field.</summary>
        public const int ServerTimeFieldNumber = 4;
        private long serverTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerTime {
          get { return serverTime_; }
          set {
            serverTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptStatus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReadCount != other.ReadCount) return false;
          if (UnreadCount != other.UnreadCount) return false;
          if (SeqId != other.SeqId) return false;
          if (ServerTime != other.ServerTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReadCount != 0) hash ^= ReadCount.GetHashCode();
          if (UnreadCount != 0) hash ^= UnreadCount.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReadCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ReadCount);
          }
          if (UnreadCount != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnreadCount);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(SeqId);
          }
          if (ServerTime != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReadCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ReadCount);
          }
          if (UnreadCount != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnreadCount);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(SeqId);
          }
          if (ServerTime != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReadCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReadCount);
          }
          if (UnreadCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnreadCount);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (ServerTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptStatus other) {
          if (other == null) {
            return;
          }
          if (other.ReadCount != 0) {
            ReadCount = other.ReadCount;
          }
          if (other.UnreadCount != 0) {
            UnreadCount = other.UnreadCount;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.ServerTime != 0L) {
            ServerTime = other.ServerTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReadCount = input.ReadInt32();
                break;
              }
              case 16: {
                UnreadCount = input.ReadInt32();
                break;
              }
              case 24: {
                SeqId = input.ReadInt64();
                break;
              }
              case 32: {
                ServerTime = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReadCount = input.ReadInt32();
                break;
              }
              case 16: {
                UnreadCount = input.ReadInt32();
                break;
              }
              case 24: {
                SeqId = input.ReadInt64();
                break;
              }
              case 32: {
                ServerTime = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptDetailGetRequest : pb::IMessage<MessageReceiptDetailGetRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptDetailGetRequest> _parser = new pb::MessageParser<MessageReceiptDetailGetRequest>(() => new MessageReceiptDetailGetRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptDetailGetRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[43]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetRequest(MessageReceiptDetailGetRequest other) : this() {
          seqId_ = other.seqId_;
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetRequest Clone() {
          return new MessageReceiptDetailGetRequest(this);
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 1;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 2;
        private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptDetailGetRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptDetailGetRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SeqId != other.SeqId) return false;
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SeqId);
          }
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SeqId);
          }
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptDetailGetRequest other) {
          if (other == null) {
            return;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SeqId = input.ReadInt64();
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SeqId = input.ReadInt64();
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageReceiptDetailGetResponse : pb::IMessage<MessageReceiptDetailGetResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageReceiptDetailGetResponse> _parser = new pb::MessageParser<MessageReceiptDetailGetResponse>(() => new MessageReceiptDetailGetResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptDetailGetResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[44]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetResponse(MessageReceiptDetailGetResponse other) : this() {
          readUser_ = other.readUser_.Clone();
          unreadUser_ = other.unreadUser_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetResponse Clone() {
          return new MessageReceiptDetailGetResponse(this);
        }

        /// <summary>Field number for the "readUser" field.</summary>
        public const int ReadUserFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_readUser_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> readUser_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> ReadUser {
          get { return readUser_; }
        }

        /// <summary>Field number for the "unreadUser" field.</summary>
        public const int UnreadUserFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_unreadUser_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> unreadUser_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> UnreadUser {
          get { return unreadUser_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptDetailGetResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptDetailGetResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!readUser_.Equals(other.readUser_)) return false;
          if(!unreadUser_.Equals(other.unreadUser_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= readUser_.GetHashCode();
          hash ^= unreadUser_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          readUser_.WriteTo(output, _repeated_readUser_codec);
          unreadUser_.WriteTo(output, _repeated_unreadUser_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          readUser_.WriteTo(ref output, _repeated_readUser_codec);
          unreadUser_.WriteTo(ref output, _repeated_unreadUser_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += readUser_.CalculateSize(_repeated_readUser_codec);
          size += unreadUser_.CalculateSize(_repeated_unreadUser_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptDetailGetResponse other) {
          if (other == null) {
            return;
          }
          readUser_.Add(other.readUser_);
          unreadUser_.Add(other.unreadUser_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                readUser_.AddEntriesFrom(input, _repeated_readUser_codec);
                break;
              }
              case 18: {
                unreadUser_.AddEntriesFrom(input, _repeated_unreadUser_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                readUser_.AddEntriesFrom(ref input, _repeated_readUser_codec);
                break;
              }
              case 18: {
                unreadUser_.AddEntriesFrom(ref input, _repeated_unreadUser_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageBatchSendRequest : pb::IMessage<MessageBatchSendRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageBatchSendRequest> _parser = new pb::MessageParser<MessageBatchSendRequest>(() => new MessageBatchSendRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageBatchSendRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[45]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendRequest(MessageBatchSendRequest other) : this() {
          message_ = other.message_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendRequest Clone() {
          return new MessageBatchSendRequest(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.Message> _repeated_message_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> message_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> Message {
          get { return message_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageBatchSendRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageBatchSendRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!message_.Equals(other.message_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= message_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          message_.WriteTo(output, _repeated_message_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          message_.WriteTo(ref output, _repeated_message_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += message_.CalculateSize(_repeated_message_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageBatchSendRequest other) {
          if (other == null) {
            return;
          }
          message_.Add(other.message_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                message_.AddEntriesFrom(input, _repeated_message_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                message_.AddEntriesFrom(ref input, _repeated_message_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MessageBatchSendResponse : pb::IMessage<MessageBatchSendResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MessageBatchSendResponse> _parser = new pb::MessageParser<MessageBatchSendResponse>(() => new MessageBatchSendResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageBatchSendResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[46]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendResponse(MessageBatchSendResponse other) : this() {
          response_ = other.response_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendResponse Clone() {
          return new MessageBatchSendResponse(this);
        }

        /// <summary>Field number for the "response" field.</summary>
        public const int ResponseFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.SendMessageResponse> _repeated_response_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.SendMessageResponse.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.SendMessageResponse> response_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.SendMessageResponse>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.SendMessageResponse> Response {
          get { return response_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageBatchSendResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageBatchSendResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!response_.Equals(other.response_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= response_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          response_.WriteTo(output, _repeated_response_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          response_.WriteTo(ref output, _repeated_response_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += response_.CalculateSize(_repeated_response_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageBatchSendResponse other) {
          if (other == null) {
            return;
          }
          response_.Add(other.response_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                response_.AddEntriesFrom(input, _repeated_response_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                response_.AddEntriesFrom(ref input, _repeated_response_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ImageAttachment : pb::IMessage<ImageAttachment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ImageAttachment> _parser = new pb::MessageParser<ImageAttachment>(() => new ImageAttachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImageAttachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[47]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageAttachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageAttachment(ImageAttachment other) : this() {
          mimeType_ = other.mimeType_;
          url_ = other.url_;
          width_ = other.width_;
          height_ = other.height_;
          lengthInBytes_ = other.lengthInBytes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageAttachment Clone() {
          return new ImageAttachment(this);
        }

        /// <summary>Field number for the "mimeType" field.</summary>
        public const int MimeTypeFieldNumber = 1;
        private string mimeType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MimeType {
          get { return mimeType_; }
          set {
            mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "lengthInBytes" field.</summary>
        public const int LengthInBytesFieldNumber = 5;
        private long lengthInBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LengthInBytes {
          get { return lengthInBytes_; }
          set {
            lengthInBytes_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImageAttachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImageAttachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MimeType != other.MimeType) return false;
          if (Url != other.Url) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (LengthInBytes != other.LengthInBytes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (LengthInBytes != 0L) hash ^= LengthInBytes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (LengthInBytes != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(LengthInBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (LengthInBytes != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(LengthInBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MimeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (LengthInBytes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LengthInBytes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImageAttachment other) {
          if (other == null) {
            return;
          }
          if (other.MimeType.Length != 0) {
            MimeType = other.MimeType;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.LengthInBytes != 0L) {
            LengthInBytes = other.LengthInBytes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                LengthInBytes = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                LengthInBytes = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AudioAttachment : pb::IMessage<AudioAttachment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AudioAttachment> _parser = new pb::MessageParser<AudioAttachment>(() => new AudioAttachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AudioAttachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[48]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioAttachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioAttachment(AudioAttachment other) : this() {
          mimeType_ = other.mimeType_;
          url_ = other.url_;
          width_ = other.width_;
          height_ = other.height_;
          lengthInBytes_ = other.lengthInBytes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioAttachment Clone() {
          return new AudioAttachment(this);
        }

        /// <summary>Field number for the "mimeType" field.</summary>
        public const int MimeTypeFieldNumber = 1;
        private string mimeType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MimeType {
          get { return mimeType_; }
          set {
            mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "lengthInBytes" field.</summary>
        public const int LengthInBytesFieldNumber = 5;
        private long lengthInBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LengthInBytes {
          get { return lengthInBytes_; }
          set {
            lengthInBytes_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AudioAttachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AudioAttachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MimeType != other.MimeType) return false;
          if (Url != other.Url) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (LengthInBytes != other.LengthInBytes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (LengthInBytes != 0L) hash ^= LengthInBytes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (LengthInBytes != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(LengthInBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (LengthInBytes != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(LengthInBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MimeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (LengthInBytes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LengthInBytes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AudioAttachment other) {
          if (other == null) {
            return;
          }
          if (other.MimeType.Length != 0) {
            MimeType = other.MimeType;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.LengthInBytes != 0L) {
            LengthInBytes = other.LengthInBytes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                LengthInBytes = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                LengthInBytes = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class GifAttachment : pb::IMessage<GifAttachment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GifAttachment> _parser = new pb::MessageParser<GifAttachment>(() => new GifAttachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GifAttachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[49]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GifAttachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GifAttachment(GifAttachment other) : this() {
          mimeType_ = other.mimeType_;
          url_ = other.url_;
          width_ = other.width_;
          height_ = other.height_;
          thumbaUrl_ = other.thumbaUrl_;
          text_ = other.text_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GifAttachment Clone() {
          return new GifAttachment(this);
        }

        /// <summary>Field number for the "mimeType" field.</summary>
        public const int MimeTypeFieldNumber = 1;
        private string mimeType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MimeType {
          get { return mimeType_; }
          set {
            mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "thumbaUrl" field.</summary>
        public const int ThumbaUrlFieldNumber = 5;
        private string thumbaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ThumbaUrl {
          get { return thumbaUrl_; }
          set {
            thumbaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 6;
        private string text_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Text {
          get { return text_; }
          set {
            text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GifAttachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GifAttachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MimeType != other.MimeType) return false;
          if (Url != other.Url) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (ThumbaUrl != other.ThumbaUrl) return false;
          if (Text != other.Text) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (ThumbaUrl.Length != 0) hash ^= ThumbaUrl.GetHashCode();
          if (Text.Length != 0) hash ^= Text.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (ThumbaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ThumbaUrl);
          }
          if (Text.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Text);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (ThumbaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ThumbaUrl);
          }
          if (Text.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Text);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MimeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (ThumbaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbaUrl);
          }
          if (Text.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GifAttachment other) {
          if (other == null) {
            return;
          }
          if (other.MimeType.Length != 0) {
            MimeType = other.MimeType;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.ThumbaUrl.Length != 0) {
            ThumbaUrl = other.ThumbaUrl;
          }
          if (other.Text.Length != 0) {
            Text = other.Text;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 42: {
                ThumbaUrl = input.ReadString();
                break;
              }
              case 50: {
                Text = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 42: {
                ThumbaUrl = input.ReadString();
                break;
              }
              case 50: {
                Text = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Attachment : pb::IMessage<Attachment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Attachment> _parser = new pb::MessageParser<Attachment>(() => new Attachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Attachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[50]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachment(Attachment other) : this() {
          switch (other.AttacmnentCase) {
            case AttacmnentOneofCase.ImageAttachment:
              ImageAttachment = other.ImageAttachment.Clone();
              break;
            case AttacmnentOneofCase.AudioAttachment:
              AudioAttachment = other.AudioAttachment.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachment Clone() {
          return new Attachment(this);
        }

        /// <summary>Field number for the "imageAttachment" field.</summary>
        public const int ImageAttachmentFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment ImageAttachment {
          get { return attacmnentCase_ == AttacmnentOneofCase.ImageAttachment ? (global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment) attacmnent_ : null; }
          set {
            attacmnent_ = value;
            attacmnentCase_ = value == null ? AttacmnentOneofCase.None : AttacmnentOneofCase.ImageAttachment;
          }
        }

        /// <summary>Field number for the "audioAttachment" field.</summary>
        public const int AudioAttachmentFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment AudioAttachment {
          get { return attacmnentCase_ == AttacmnentOneofCase.AudioAttachment ? (global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment) attacmnent_ : null; }
          set {
            attacmnent_ = value;
            attacmnentCase_ = value == null ? AttacmnentOneofCase.None : AttacmnentOneofCase.AudioAttachment;
          }
        }

        private object attacmnent_;
        /// <summary>Enum of possible cases for the "attacmnent" oneof.</summary>
        public enum AttacmnentOneofCase {
          None = 0,
          ImageAttachment = 1,
          AudioAttachment = 2,
        }
        private AttacmnentOneofCase attacmnentCase_ = AttacmnentOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttacmnentOneofCase AttacmnentCase {
          get { return attacmnentCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAttacmnent() {
          attacmnentCase_ = AttacmnentOneofCase.None;
          attacmnent_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Attachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Attachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ImageAttachment, other.ImageAttachment)) return false;
          if (!object.Equals(AudioAttachment, other.AudioAttachment)) return false;
          if (AttacmnentCase != other.AttacmnentCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) hash ^= ImageAttachment.GetHashCode();
          if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) hash ^= AudioAttachment.GetHashCode();
          hash ^= (int) attacmnentCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
            output.WriteRawTag(10);
            output.WriteMessage(ImageAttachment);
          }
          if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
            output.WriteRawTag(18);
            output.WriteMessage(AudioAttachment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
            output.WriteRawTag(10);
            output.WriteMessage(ImageAttachment);
          }
          if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
            output.WriteRawTag(18);
            output.WriteMessage(AudioAttachment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageAttachment);
          }
          if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioAttachment);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Attachment other) {
          if (other == null) {
            return;
          }
          switch (other.AttacmnentCase) {
            case AttacmnentOneofCase.ImageAttachment:
              if (ImageAttachment == null) {
                ImageAttachment = new global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment();
              }
              ImageAttachment.MergeFrom(other.ImageAttachment);
              break;
            case AttacmnentOneofCase.AudioAttachment:
              if (AudioAttachment == null) {
                AudioAttachment = new global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment();
              }
              AudioAttachment.MergeFrom(other.AudioAttachment);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment subBuilder = new global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment();
                if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
                  subBuilder.MergeFrom(ImageAttachment);
                }
                input.ReadMessage(subBuilder);
                ImageAttachment = subBuilder;
                break;
              }
              case 18: {
                global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment subBuilder = new global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment();
                if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
                  subBuilder.MergeFrom(AudioAttachment);
                }
                input.ReadMessage(subBuilder);
                AudioAttachment = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment subBuilder = new global::AcFunDanmu.Im.ImMessage.Types.ImageAttachment();
                if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
                  subBuilder.MergeFrom(ImageAttachment);
                }
                input.ReadMessage(subBuilder);
                ImageAttachment = subBuilder;
                break;
              }
              case 18: {
                global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment subBuilder = new global::AcFunDanmu.Im.ImMessage.Types.AudioAttachment();
                if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
                  subBuilder.MergeFrom(AudioAttachment);
                }
                input.ReadMessage(subBuilder);
                AudioAttachment = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Attachments : pb::IMessage<Attachments>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Attachments> _parser = new pb::MessageParser<Attachments>(() => new Attachments());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Attachments> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[51]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachments() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachments(Attachments other) : this() {
          attachments_ = other.attachments_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachments Clone() {
          return new Attachments(this);
        }

        /// <summary>Field number for the "attachments" field.</summary>
        public const int Attachments_FieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.Attachment> _repeated_attachments_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.Attachment.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Attachment> attachments_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Attachment>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Attachment> Attachments_ {
          get { return attachments_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Attachments);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Attachments other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!attachments_.Equals(other.attachments_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= attachments_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          attachments_.WriteTo(output, _repeated_attachments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          attachments_.WriteTo(ref output, _repeated_attachments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += attachments_.CalculateSize(_repeated_attachments_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Attachments other) {
          if (other == null) {
            return;
          }
          attachments_.Add(other.attachments_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                attachments_.AddEntriesFrom(ref input, _repeated_attachments_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PlaceHolderMessage : pb::IMessage<PlaceHolderMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlaceHolderMessage> _parser = new pb::MessageParser<PlaceHolderMessage>(() => new PlaceHolderMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlaceHolderMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[52]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlaceHolderMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlaceHolderMessage(PlaceHolderMessage other) : this() {
          minSeq_ = other.minSeq_;
          maxSeq_ = other.maxSeq_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlaceHolderMessage Clone() {
          return new PlaceHolderMessage(this);
        }

        /// <summary>Field number for the "minSeq" field.</summary>
        public const int MinSeqFieldNumber = 1;
        private long minSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinSeq {
          get { return minSeq_; }
          set {
            minSeq_ = value;
          }
        }

        /// <summary>Field number for the "maxSeq" field.</summary>
        public const int MaxSeqFieldNumber = 2;
        private long maxSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSeq {
          get { return maxSeq_; }
          set {
            maxSeq_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlaceHolderMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlaceHolderMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MinSeq != other.MinSeq) return false;
          if (MaxSeq != other.MaxSeq) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MinSeq != 0L) hash ^= MinSeq.GetHashCode();
          if (MaxSeq != 0L) hash ^= MaxSeq.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MinSeq != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MinSeq);
          }
          if (MaxSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MinSeq != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MinSeq);
          }
          if (MaxSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MinSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinSeq);
          }
          if (MaxSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSeq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlaceHolderMessage other) {
          if (other == null) {
            return;
          }
          if (other.MinSeq != 0L) {
            MinSeq = other.MinSeq;
          }
          if (other.MaxSeq != 0L) {
            MaxSeq = other.MaxSeq;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 16: {
                MaxSeq = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 16: {
                MaxSeq = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ImageTextMessage : pb::IMessage<ImageTextMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ImageTextMessage> _parser = new pb::MessageParser<ImageTextMessage>(() => new ImageTextMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImageTextMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[53]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageTextMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageTextMessage(ImageTextMessage other) : this() {
          title_ = other.title_;
          description_ = other.description_;
          imageUrl_ = other.imageUrl_;
          actionUrl_ = other.actionUrl_;
          width_ = other.width_;
          aspectRatio_ = other.aspectRatio_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageTextMessage Clone() {
          return new ImageTextMessage(this);
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 1;
        private string title_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "imageUrl" field.</summary>
        public const int ImageUrlFieldNumber = 3;
        private string imageUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageUrl {
          get { return imageUrl_; }
          set {
            imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "actionUrl" field.</summary>
        public const int ActionUrlFieldNumber = 4;
        private string actionUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ActionUrl {
          get { return actionUrl_; }
          set {
            actionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 5;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "aspectRatio" field.</summary>
        public const int AspectRatioFieldNumber = 6;
        private float aspectRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float AspectRatio {
          get { return aspectRatio_; }
          set {
            aspectRatio_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImageTextMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImageTextMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Title != other.Title) return false;
          if (Description != other.Description) return false;
          if (ImageUrl != other.ImageUrl) return false;
          if (ActionUrl != other.ActionUrl) return false;
          if (Width != other.Width) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AspectRatio, other.AspectRatio)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
          if (ActionUrl.Length != 0) hash ^= ActionUrl.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (AspectRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AspectRatio);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Title.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Title);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (ImageUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ImageUrl);
          }
          if (ActionUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ActionUrl);
          }
          if (Width != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Width);
          }
          if (AspectRatio != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(AspectRatio);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Title.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Title);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (ImageUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ImageUrl);
          }
          if (ActionUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ActionUrl);
          }
          if (Width != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Width);
          }
          if (AspectRatio != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(AspectRatio);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (ImageUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
          }
          if (ActionUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionUrl);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (AspectRatio != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImageTextMessage other) {
          if (other == null) {
            return;
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.ImageUrl.Length != 0) {
            ImageUrl = other.ImageUrl;
          }
          if (other.ActionUrl.Length != 0) {
            ActionUrl = other.ActionUrl;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.AspectRatio != 0F) {
            AspectRatio = other.AspectRatio;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Title = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
              case 26: {
                ImageUrl = input.ReadString();
                break;
              }
              case 34: {
                ActionUrl = input.ReadString();
                break;
              }
              case 40: {
                Width = input.ReadInt32();
                break;
              }
              case 53: {
                AspectRatio = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Title = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
              case 26: {
                ImageUrl = input.ReadString();
                break;
              }
              case 34: {
                ActionUrl = input.ReadString();
                break;
              }
              case 40: {
                Width = input.ReadInt32();
                break;
              }
              case 53: {
                AspectRatio = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RichTextMessage : pb::IMessage<RichTextMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RichTextMessage> _parser = new pb::MessageParser<RichTextMessage>(() => new RichTextMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RichTextMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[54]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextMessage(RichTextMessage other) : this() {
          richTextMessage_ = other.richTextMessage_ != null ? other.richTextMessage_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextMessage Clone() {
          return new RichTextMessage(this);
        }

        /// <summary>Field number for the "richTextMessage" field.</summary>
        public const int RichTextMessage_FieldNumber = 1;
        private global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage richTextMessage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage RichTextMessage_ {
          get { return richTextMessage_; }
          set {
            richTextMessage_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RichTextMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RichTextMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RichTextMessage_, other.RichTextMessage_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (richTextMessage_ != null) hash ^= RichTextMessage_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (richTextMessage_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RichTextMessage_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (richTextMessage_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RichTextMessage_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (richTextMessage_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RichTextMessage_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RichTextMessage other) {
          if (other == null) {
            return;
          }
          if (other.richTextMessage_ != null) {
            if (richTextMessage_ == null) {
              RichTextMessage_ = new global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage();
            }
            RichTextMessage_.MergeFrom(other.RichTextMessage_);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (richTextMessage_ == null) {
                  RichTextMessage_ = new global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage();
                }
                input.ReadMessage(RichTextMessage_);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (richTextMessage_ == null) {
                  RichTextMessage_ = new global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage();
                }
                input.ReadMessage(RichTextMessage_);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class NoticeMessage : pb::IMessage<NoticeMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NoticeMessage> _parser = new pb::MessageParser<NoticeMessage>(() => new NoticeMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NoticeMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[55]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoticeMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoticeMessage(NoticeMessage other) : this() {
          richTextNotice_ = other.richTextNotice_ != null ? other.richTextNotice_.Clone() : null;
          msg_ = other.msg_;
          i18NCopyWriting_ = other.i18NCopyWriting_ != null ? other.i18NCopyWriting_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoticeMessage Clone() {
          return new NoticeMessage(this);
        }

        /// <summary>Field number for the "richTextNotice" field.</summary>
        public const int RichTextNoticeFieldNumber = 2;
        private global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage richTextNotice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage RichTextNotice {
          get { return richTextNotice_; }
          set {
            richTextNotice_ = value;
          }
        }

        /// <summary>Field number for the "msg" field.</summary>
        public const int MsgFieldNumber = 5;
        private string msg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Msg {
          get { return msg_; }
          set {
            msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "i18nCopyWriting" field.</summary>
        public const int I18NCopyWritingFieldNumber = 10;
        private global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting i18NCopyWriting_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting I18NCopyWriting {
          get { return i18NCopyWriting_; }
          set {
            i18NCopyWriting_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NoticeMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NoticeMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RichTextNotice, other.RichTextNotice)) return false;
          if (Msg != other.Msg) return false;
          if (!object.Equals(I18NCopyWriting, other.I18NCopyWriting)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (richTextNotice_ != null) hash ^= RichTextNotice.GetHashCode();
          if (Msg.Length != 0) hash ^= Msg.GetHashCode();
          if (i18NCopyWriting_ != null) hash ^= I18NCopyWriting.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (richTextNotice_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(RichTextNotice);
          }
          if (Msg.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Msg);
          }
          if (i18NCopyWriting_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(I18NCopyWriting);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (richTextNotice_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(RichTextNotice);
          }
          if (Msg.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Msg);
          }
          if (i18NCopyWriting_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(I18NCopyWriting);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (richTextNotice_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RichTextNotice);
          }
          if (Msg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
          }
          if (i18NCopyWriting_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(I18NCopyWriting);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NoticeMessage other) {
          if (other == null) {
            return;
          }
          if (other.richTextNotice_ != null) {
            if (richTextNotice_ == null) {
              RichTextNotice = new global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage();
            }
            RichTextNotice.MergeFrom(other.RichTextNotice);
          }
          if (other.Msg.Length != 0) {
            Msg = other.Msg;
          }
          if (other.i18NCopyWriting_ != null) {
            if (i18NCopyWriting_ == null) {
              I18NCopyWriting = new global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting();
            }
            I18NCopyWriting.MergeFrom(other.I18NCopyWriting);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 18: {
                if (richTextNotice_ == null) {
                  RichTextNotice = new global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage();
                }
                input.ReadMessage(RichTextNotice);
                break;
              }
              case 42: {
                Msg = input.ReadString();
                break;
              }
              case 82: {
                if (i18NCopyWriting_ == null) {
                  I18NCopyWriting = new global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting();
                }
                input.ReadMessage(I18NCopyWriting);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 18: {
                if (richTextNotice_ == null) {
                  RichTextNotice = new global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage();
                }
                input.ReadMessage(RichTextNotice);
                break;
              }
              case 42: {
                Msg = input.ReadString();
                break;
              }
              case 82: {
                if (i18NCopyWriting_ == null) {
                  I18NCopyWriting = new global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting();
                }
                input.ReadMessage(I18NCopyWriting);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RichTextNoticeMessage : pb::IMessage<RichTextNoticeMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RichTextNoticeMessage> _parser = new pb::MessageParser<RichTextNoticeMessage>(() => new RichTextNoticeMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RichTextNoticeMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.ImMessage.Descriptor.NestedTypes[56]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextNoticeMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextNoticeMessage(RichTextNoticeMessage other) : this() {
          items_ = other.items_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextNoticeMessage Clone() {
          return new RichTextNoticeMessage(this);
        }

        /// <summary>Field number for the "items" field.</summary>
        public const int ItemsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Types.RichTextItem> _repeated_items_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Types.RichTextItem.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Types.RichTextItem> items_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Types.RichTextItem>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Types.RichTextItem> Items {
          get { return items_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RichTextNoticeMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RichTextNoticeMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!items_.Equals(other.items_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= items_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          items_.WriteTo(output, _repeated_items_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          items_.WriteTo(ref output, _repeated_items_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += items_.CalculateSize(_repeated_items_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RichTextNoticeMessage other) {
          if (other == null) {
            return;
          }
          items_.Add(other.items_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                items_.AddEntriesFrom(input, _repeated_items_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                items_.AddEntriesFrom(ref input, _repeated_items_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the RichTextNoticeMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class RichTextItem : pb::IMessage<RichTextItem>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<RichTextItem> _parser = new pb::MessageParser<RichTextItem>(() => new RichTextItem());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<RichTextItem> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.ImMessage.Types.RichTextNoticeMessage.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public RichTextItem() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public RichTextItem(RichTextItem other) : this() {
              color_ = other.color_;
              start_ = other.start_;
              len_ = other.len_;
              clickAction_ = other.clickAction_;
              underline_ = other.underline_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public RichTextItem Clone() {
              return new RichTextItem(this);
            }

            /// <summary>Field number for the "color" field.</summary>
            public const int ColorFieldNumber = 1;
            private int color_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Color {
              get { return color_; }
              set {
                color_ = value;
              }
            }

            /// <summary>Field number for the "start" field.</summary>
            public const int StartFieldNumber = 2;
            private int start_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Start {
              get { return start_; }
              set {
                start_ = value;
              }
            }

            /// <summary>Field number for the "len" field.</summary>
            public const int LenFieldNumber = 3;
            private int len_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Len {
              get { return len_; }
              set {
                len_ = value;
              }
            }

            /// <summary>Field number for the "clickAction" field.</summary>
            public const int ClickActionFieldNumber = 4;
            private string clickAction_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ClickAction {
              get { return clickAction_; }
              set {
                clickAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "underline" field.</summary>
            public const int UnderlineFieldNumber = 5;
            private bool underline_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Underline {
              get { return underline_; }
              set {
                underline_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as RichTextItem);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(RichTextItem other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Color != other.Color) return false;
              if (Start != other.Start) return false;
              if (Len != other.Len) return false;
              if (ClickAction != other.ClickAction) return false;
              if (Underline != other.Underline) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Color != 0) hash ^= Color.GetHashCode();
              if (Start != 0) hash ^= Start.GetHashCode();
              if (Len != 0) hash ^= Len.GetHashCode();
              if (ClickAction.Length != 0) hash ^= ClickAction.GetHashCode();
              if (Underline != false) hash ^= Underline.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Color != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(Color);
              }
              if (Start != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Start);
              }
              if (Len != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Len);
              }
              if (ClickAction.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(ClickAction);
              }
              if (Underline != false) {
                output.WriteRawTag(40);
                output.WriteBool(Underline);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Color != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(Color);
              }
              if (Start != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Start);
              }
              if (Len != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Len);
              }
              if (ClickAction.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(ClickAction);
              }
              if (Underline != false) {
                output.WriteRawTag(40);
                output.WriteBool(Underline);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Color != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
              }
              if (Start != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
              }
              if (Len != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Len);
              }
              if (ClickAction.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClickAction);
              }
              if (Underline != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(RichTextItem other) {
              if (other == null) {
                return;
              }
              if (other.Color != 0) {
                Color = other.Color;
              }
              if (other.Start != 0) {
                Start = other.Start;
              }
              if (other.Len != 0) {
                Len = other.Len;
              }
              if (other.ClickAction.Length != 0) {
                ClickAction = other.ClickAction;
              }
              if (other.Underline != false) {
                Underline = other.Underline;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Color = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    Start = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Len = input.ReadInt32();
                    break;
                  }
                  case 34: {
                    ClickAction = input.ReadString();
                    break;
                  }
                  case 40: {
                    Underline = input.ReadBool();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Color = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    Start = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Len = input.ReadInt32();
                    break;
                  }
                  case 34: {
                    ClickAction = input.ReadString();
                    break;
                  }
                  case 40: {
                    Underline = input.ReadBool();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class Cloud : pb::IMessage<Cloud>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cloud> _parser = new pb::MessageParser<Cloud>(() => new Cloud());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cloud> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.ImReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud(Cloud other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud Clone() {
      return new Cloud(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cloud);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cloud other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cloud other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Cloud message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Channel : pb::IMessage<Channel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Channel> _parser = new pb::MessageParser<Channel>(() => new Channel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Channel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Channel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Channel(Channel other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Channel Clone() {
          return new Channel(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Channel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Channel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Channel other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Channel message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum UserAction {
            [pbr::OriginalName("USER_ACTION_UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("USER_JOIN_CHANNEL")] UserJoinChannel = 1,
            [pbr::OriginalName("USER_QUIT_CHANNEL")] UserQuitChannel = 2,
            [pbr::OriginalName("USER_OFFLINE")] UserOffline = 3,
          }

          public sealed partial class ChannelSubscribeRequest : pb::IMessage<ChannelSubscribeRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelSubscribeRequest> _parser = new pb::MessageParser<ChannelSubscribeRequest>(() => new ChannelSubscribeRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribeRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeRequest(ChannelSubscribeRequest other) : this() {
              channelId_ = other.channelId_;
              setBarrier_ = other.setBarrier_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeRequest Clone() {
              return new ChannelSubscribeRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "setBarrier" field.</summary>
            public const int SetBarrierFieldNumber = 2;
            private bool setBarrier_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool SetBarrier {
              get { return setBarrier_; }
              set {
                setBarrier_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribeRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribeRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              if (SetBarrier != other.SetBarrier) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (SetBarrier != false) hash ^= SetBarrier.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (SetBarrier != false) {
                output.WriteRawTag(16);
                output.WriteBool(SetBarrier);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (SetBarrier != false) {
                output.WriteRawTag(16);
                output.WriteBool(SetBarrier);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (SetBarrier != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribeRequest other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              if (other.SetBarrier != false) {
                SetBarrier = other.SetBarrier;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                  case 16: {
                    SetBarrier = input.ReadBool();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                  case 16: {
                    SetBarrier = input.ReadBool();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelSubscribeResponse : pb::IMessage<ChannelSubscribeResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelSubscribeResponse> _parser = new pb::MessageParser<ChannelSubscribeResponse>(() => new ChannelSubscribeResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribeResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeResponse(ChannelSubscribeResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeResponse Clone() {
              return new ChannelSubscribeResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribeResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribeResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribeResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelUnsubscribeRequest : pb::IMessage<ChannelUnsubscribeRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelUnsubscribeRequest> _parser = new pb::MessageParser<ChannelUnsubscribeRequest>(() => new ChannelUnsubscribeRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelUnsubscribeRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelUnsubscribeRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelUnsubscribeRequest(ChannelUnsubscribeRequest other) : this() {
              channelId_ = other.channelId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelUnsubscribeRequest Clone() {
              return new ChannelUnsubscribeRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelUnsubscribeRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelUnsubscribeRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelUnsubscribeRequest other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelSubscribersGetRequest : pb::IMessage<ChannelSubscribersGetRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelSubscribersGetRequest> _parser = new pb::MessageParser<ChannelSubscribersGetRequest>(() => new ChannelSubscribersGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribersGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetRequest(ChannelSubscribersGetRequest other) : this() {
              channelId_ = other.channelId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetRequest Clone() {
              return new ChannelSubscribersGetRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribersGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribersGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribersGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelSubscribersGetResposne : pb::IMessage<ChannelSubscribersGetResposne>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelSubscribersGetResposne> _parser = new pb::MessageParser<ChannelSubscribersGetResposne>(() => new ChannelSubscribersGetResposne());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribersGetResposne> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetResposne() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetResposne(ChannelSubscribersGetResposne other) : this() {
              subscriber_ = other.subscriber_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetResposne Clone() {
              return new ChannelSubscribersGetResposne(this);
            }

            /// <summary>Field number for the "subscriber" field.</summary>
            public const int SubscriberFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_subscriber_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> subscriber_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Subscriber {
              get { return subscriber_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribersGetResposne);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribersGetResposne other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!subscriber_.Equals(other.subscriber_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= subscriber_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              subscriber_.WriteTo(output, _repeated_subscriber_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              subscriber_.WriteTo(ref output, _repeated_subscriber_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += subscriber_.CalculateSize(_repeated_subscriber_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribersGetResposne other) {
              if (other == null) {
                return;
              }
              subscriber_.Add(other.subscriber_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    subscriber_.AddEntriesFrom(input, _repeated_subscriber_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    subscriber_.AddEntriesFrom(ref input, _repeated_subscriber_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelBasicInfo : pb::IMessage<ChannelBasicInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelBasicInfo> _parser = new pb::MessageParser<ChannelBasicInfo>(() => new ChannelBasicInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfo(ChannelBasicInfo other) : this() {
              channelId_ = other.channelId_;
              subscriberCount_ = other.subscriberCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfo Clone() {
              return new ChannelBasicInfo(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "subscriberCount" field.</summary>
            public const int SubscriberCountFieldNumber = 2;
            private int subscriberCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int SubscriberCount {
              get { return subscriberCount_; }
              set {
                subscriberCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              if (SubscriberCount != other.SubscriberCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (SubscriberCount != 0) hash ^= SubscriberCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (SubscriberCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(SubscriberCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (SubscriberCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(SubscriberCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (SubscriberCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubscriberCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfo other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              if (other.SubscriberCount != 0) {
                SubscriberCount = other.SubscriberCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                  case 16: {
                    SubscriberCount = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                  case 16: {
                    SubscriberCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class UserActionInfo : pb::IMessage<UserActionInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserActionInfo> _parser = new pb::MessageParser<UserActionInfo>(() => new UserActionInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserActionInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[6]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserActionInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserActionInfo(UserActionInfo other) : this() {
              user_ = other.user_ != null ? other.user_.Clone() : null;
              action_ = other.action_;
              timestamp_ = other.timestamp_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserActionInfo Clone() {
              return new UserActionInfo(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            /// <summary>Field number for the "action" field.</summary>
            public const int ActionFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction action_ = global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction Action {
              get { return action_; }
              set {
                action_ = value;
              }
            }

            /// <summary>Field number for the "timestamp" field.</summary>
            public const int TimestampFieldNumber = 3;
            private long timestamp_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Timestamp {
              get { return timestamp_; }
              set {
                timestamp_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserActionInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserActionInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(User, other.User)) return false;
              if (Action != other.Action) return false;
              if (Timestamp != other.Timestamp) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (user_ != null) hash ^= User.GetHashCode();
              if (Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) hash ^= Action.GetHashCode();
              if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Action);
              }
              if (Timestamp != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Timestamp);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Action);
              }
              if (Timestamp != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Timestamp);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
              }
              if (Timestamp != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserActionInfo other) {
              if (other == null) {
                return;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              if (other.Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) {
                Action = other.Action;
              }
              if (other.Timestamp != 0L) {
                Timestamp = other.Timestamp;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 16: {
                    Action = (global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction) input.ReadEnum();
                    break;
                  }
                  case 24: {
                    Timestamp = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 16: {
                    Action = (global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction) input.ReadEnum();
                    break;
                  }
                  case 24: {
                    Timestamp = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelBasicInfoGetRequest : pb::IMessage<ChannelBasicInfoGetRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelBasicInfoGetRequest> _parser = new pb::MessageParser<ChannelBasicInfoGetRequest>(() => new ChannelBasicInfoGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfoGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[7]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetRequest(ChannelBasicInfoGetRequest other) : this() {
              channelId_ = other.channelId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetRequest Clone() {
              return new ChannelBasicInfoGetRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_channelId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> channelId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> ChannelId {
              get { return channelId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfoGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfoGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!channelId_.Equals(other.channelId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= channelId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              channelId_.WriteTo(output, _repeated_channelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              channelId_.WriteTo(ref output, _repeated_channelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += channelId_.CalculateSize(_repeated_channelId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfoGetRequest other) {
              if (other == null) {
                return;
              }
              channelId_.Add(other.channelId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    channelId_.AddEntriesFrom(input, _repeated_channelId_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    channelId_.AddEntriesFrom(ref input, _repeated_channelId_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelBasicInfoGetResponse : pb::IMessage<ChannelBasicInfoGetResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelBasicInfoGetResponse> _parser = new pb::MessageParser<ChannelBasicInfoGetResponse>(() => new ChannelBasicInfoGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfoGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[8]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetResponse(ChannelBasicInfoGetResponse other) : this() {
              basicInfo_ = other.basicInfo_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetResponse Clone() {
              return new ChannelBasicInfoGetResponse(this);
            }

            /// <summary>Field number for the "basicInfo" field.</summary>
            public const int BasicInfoFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo> _repeated_basicInfo_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo> basicInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo> BasicInfo {
              get { return basicInfo_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfoGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfoGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!basicInfo_.Equals(other.basicInfo_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= basicInfo_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              basicInfo_.WriteTo(output, _repeated_basicInfo_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              basicInfo_.WriteTo(ref output, _repeated_basicInfo_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += basicInfo_.CalculateSize(_repeated_basicInfo_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfoGetResponse other) {
              if (other == null) {
                return;
              }
              basicInfo_.Add(other.basicInfo_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    basicInfo_.AddEntriesFrom(input, _repeated_basicInfo_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    basicInfo_.AddEntriesFrom(ref input, _repeated_basicInfo_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelHeartbeatRequest : pb::IMessage<ChannelHeartbeatRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelHeartbeatRequest> _parser = new pb::MessageParser<ChannelHeartbeatRequest>(() => new ChannelHeartbeatRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelHeartbeatRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[9]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatRequest(ChannelHeartbeatRequest other) : this() {
              channelId_ = other.channelId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatRequest Clone() {
              return new ChannelHeartbeatRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_channelId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> channelId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> ChannelId {
              get { return channelId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelHeartbeatRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelHeartbeatRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!channelId_.Equals(other.channelId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= channelId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              channelId_.WriteTo(output, _repeated_channelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              channelId_.WriteTo(ref output, _repeated_channelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += channelId_.CalculateSize(_repeated_channelId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelHeartbeatRequest other) {
              if (other == null) {
                return;
              }
              channelId_.Add(other.channelId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    channelId_.AddEntriesFrom(input, _repeated_channelId_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    channelId_.AddEntriesFrom(ref input, _repeated_channelId_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelHeartbeatResponse : pb::IMessage<ChannelHeartbeatResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelHeartbeatResponse> _parser = new pb::MessageParser<ChannelHeartbeatResponse>(() => new ChannelHeartbeatResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelHeartbeatResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[10]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatResponse(ChannelHeartbeatResponse other) : this() {
              notExistChannelId_ = other.notExistChannelId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatResponse Clone() {
              return new ChannelHeartbeatResponse(this);
            }

            /// <summary>Field number for the "notExistChannelId" field.</summary>
            public const int NotExistChannelIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_notExistChannelId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> notExistChannelId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> NotExistChannelId {
              get { return notExistChannelId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelHeartbeatResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelHeartbeatResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!notExistChannelId_.Equals(other.notExistChannelId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= notExistChannelId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              notExistChannelId_.WriteTo(output, _repeated_notExistChannelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              notExistChannelId_.WriteTo(ref output, _repeated_notExistChannelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += notExistChannelId_.CalculateSize(_repeated_notExistChannelId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelHeartbeatResponse other) {
              if (other == null) {
                return;
              }
              notExistChannelId_.Add(other.notExistChannelId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    notExistChannelId_.AddEntriesFrom(input, _repeated_notExistChannelId_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    notExistChannelId_.AddEntriesFrom(ref input, _repeated_notExistChannelId_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ChannelBasicInfoNotify : pb::IMessage<ChannelBasicInfoNotify>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChannelBasicInfoNotify> _parser = new pb::MessageParser<ChannelBasicInfoNotify>(() => new ChannelBasicInfoNotify());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfoNotify> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[11]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoNotify() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoNotify(ChannelBasicInfoNotify other) : this() {
              userActionInfo_ = other.userActionInfo_ != null ? other.userActionInfo_.Clone() : null;
              basicInfo_ = other.basicInfo_ != null ? other.basicInfo_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoNotify Clone() {
              return new ChannelBasicInfoNotify(this);
            }

            /// <summary>Field number for the "userActionInfo" field.</summary>
            public const int UserActionInfoFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo userActionInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo UserActionInfo {
              get { return userActionInfo_; }
              set {
                userActionInfo_ = value;
              }
            }

            /// <summary>Field number for the "basicInfo" field.</summary>
            public const int BasicInfoFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo basicInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo BasicInfo {
              get { return basicInfo_; }
              set {
                basicInfo_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfoNotify);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfoNotify other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(UserActionInfo, other.UserActionInfo)) return false;
              if (!object.Equals(BasicInfo, other.BasicInfo)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (userActionInfo_ != null) hash ^= UserActionInfo.GetHashCode();
              if (basicInfo_ != null) hash ^= BasicInfo.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (userActionInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(UserActionInfo);
              }
              if (basicInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(BasicInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (userActionInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(UserActionInfo);
              }
              if (basicInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(BasicInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (userActionInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActionInfo);
              }
              if (basicInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicInfo);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfoNotify other) {
              if (other == null) {
                return;
              }
              if (other.userActionInfo_ != null) {
                if (userActionInfo_ == null) {
                  UserActionInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo();
                }
                UserActionInfo.MergeFrom(other.UserActionInfo);
              }
              if (other.basicInfo_ != null) {
                if (basicInfo_ == null) {
                  BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo();
                }
                BasicInfo.MergeFrom(other.BasicInfo);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (userActionInfo_ == null) {
                      UserActionInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo();
                    }
                    input.ReadMessage(UserActionInfo);
                    break;
                  }
                  case 18: {
                    if (basicInfo_ == null) {
                      BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo();
                    }
                    input.ReadMessage(BasicInfo);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (userActionInfo_ == null) {
                      UserActionInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo();
                    }
                    input.ReadMessage(UserActionInfo);
                    break;
                  }
                  case 18: {
                    if (basicInfo_ == null) {
                      BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo();
                    }
                    input.ReadMessage(BasicInfo);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Config : pb::IMessage<Config>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Config> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Config() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Config(Config other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Config Clone() {
          return new Config(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Config);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Config other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Config other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Config message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientConfigGetRequest : pb::IMessage<ClientConfigGetRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ClientConfigGetRequest> _parser = new pb::MessageParser<ClientConfigGetRequest>(() => new ClientConfigGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientConfigGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetRequest(ClientConfigGetRequest other) : this() {
              version_ = other.version_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetRequest Clone() {
              return new ClientConfigGetRequest(this);
            }

            /// <summary>Field number for the "version" field.</summary>
            public const int VersionFieldNumber = 1;
            private uint version_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Version {
              get { return version_; }
              set {
                version_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientConfigGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientConfigGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Version != other.Version) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Version != 0) hash ^= Version.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Version != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Version != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Version != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientConfigGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.Version != 0) {
                Version = other.Version;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Version = input.ReadUInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Version = input.ReadUInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ClientConfigGetResponse : pb::IMessage<ClientConfigGetResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ClientConfigGetResponse> _parser = new pb::MessageParser<ClientConfigGetResponse>(() => new ClientConfigGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientConfigGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetResponse(ClientConfigGetResponse other) : this() {
              version_ = other.version_;
              clientConfig_ = other.clientConfig_ != null ? other.clientConfig_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetResponse Clone() {
              return new ClientConfigGetResponse(this);
            }

            /// <summary>Field number for the "version" field.</summary>
            public const int VersionFieldNumber = 1;
            private uint version_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Version {
              get { return version_; }
              set {
                version_ = value;
              }
            }

            /// <summary>Field number for the "clientConfig" field.</summary>
            public const int ClientConfigFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig clientConfig_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig ClientConfig {
              get { return clientConfig_; }
              set {
                clientConfig_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientConfigGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientConfigGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Version != other.Version) return false;
              if (!object.Equals(ClientConfig, other.ClientConfig)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Version != 0) hash ^= Version.GetHashCode();
              if (clientConfig_ != null) hash ^= ClientConfig.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Version != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
              }
              if (clientConfig_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ClientConfig);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Version != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
              }
              if (clientConfig_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ClientConfig);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Version != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
              }
              if (clientConfig_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientConfig);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientConfigGetResponse other) {
              if (other == null) {
                return;
              }
              if (other.Version != 0) {
                Version = other.Version;
              }
              if (other.clientConfig_ != null) {
                if (clientConfig_ == null) {
                  ClientConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig();
                }
                ClientConfig.MergeFrom(other.ClientConfig);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Version = input.ReadUInt32();
                    break;
                  }
                  case 18: {
                    if (clientConfig_ == null) {
                      ClientConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig();
                    }
                    input.ReadMessage(ClientConfig);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Version = input.ReadUInt32();
                    break;
                  }
                  case 18: {
                    if (clientConfig_ == null) {
                      ClientConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig();
                    }
                    input.ReadMessage(ClientConfig);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class NetworkQualityDetectionConfig : pb::IMessage<NetworkQualityDetectionConfig>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<NetworkQualityDetectionConfig> _parser = new pb::MessageParser<NetworkQualityDetectionConfig>(() => new NetworkQualityDetectionConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<NetworkQualityDetectionConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NetworkQualityDetectionConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NetworkQualityDetectionConfig(NetworkQualityDetectionConfig other) : this() {
              detectionDomain_ = other.detectionDomain_;
              detectionInvervalSec_ = other.detectionInvervalSec_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NetworkQualityDetectionConfig Clone() {
              return new NetworkQualityDetectionConfig(this);
            }

            /// <summary>Field number for the "detectionDomain" field.</summary>
            public const int DetectionDomainFieldNumber = 1;
            private string detectionDomain_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DetectionDomain {
              get { return detectionDomain_; }
              set {
                detectionDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "detectionInvervalSec" field.</summary>
            public const int DetectionInvervalSecFieldNumber = 2;
            private int detectionInvervalSec_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int DetectionInvervalSec {
              get { return detectionInvervalSec_; }
              set {
                detectionInvervalSec_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as NetworkQualityDetectionConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(NetworkQualityDetectionConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (DetectionDomain != other.DetectionDomain) return false;
              if (DetectionInvervalSec != other.DetectionInvervalSec) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (DetectionDomain.Length != 0) hash ^= DetectionDomain.GetHashCode();
              if (DetectionInvervalSec != 0) hash ^= DetectionInvervalSec.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (DetectionDomain.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(DetectionDomain);
              }
              if (DetectionInvervalSec != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(DetectionInvervalSec);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (DetectionDomain.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(DetectionDomain);
              }
              if (DetectionInvervalSec != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(DetectionInvervalSec);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (DetectionDomain.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectionDomain);
              }
              if (DetectionInvervalSec != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(DetectionInvervalSec);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(NetworkQualityDetectionConfig other) {
              if (other == null) {
                return;
              }
              if (other.DetectionDomain.Length != 0) {
                DetectionDomain = other.DetectionDomain;
              }
              if (other.DetectionInvervalSec != 0) {
                DetectionInvervalSec = other.DetectionInvervalSec;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    DetectionDomain = input.ReadString();
                    break;
                  }
                  case 16: {
                    DetectionInvervalSec = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    DetectionDomain = input.ReadString();
                    break;
                  }
                  case 16: {
                    DetectionInvervalSec = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ClientConfig : pb::IMessage<ClientConfig>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ClientConfig> _parser = new pb::MessageParser<ClientConfig>(() => new ClientConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfig(ClientConfig other) : this() {
              fetchUserStatusInterval_ = other.fetchUserStatusInterval_;
              channelUserHeartbeatInterval_ = other.channelUserHeartbeatInterval_;
              networkQualityDetectionConfig_ = other.networkQualityDetectionConfig_ != null ? other.networkQualityDetectionConfig_.Clone() : null;
              inputtingTipDisplayInterval_ = other.inputtingTipDisplayInterval_;
              batchSendMessageMaxCount_ = other.batchSendMessageMaxCount_;
              resourceUploadingDomain_ = other.resourceUploadingDomain_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfig Clone() {
              return new ClientConfig(this);
            }

            /// <summary>Field number for the "fetchUserStatusInterval" field.</summary>
            public const int FetchUserStatusIntervalFieldNumber = 1;
            private int fetchUserStatusInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FetchUserStatusInterval {
              get { return fetchUserStatusInterval_; }
              set {
                fetchUserStatusInterval_ = value;
              }
            }

            /// <summary>Field number for the "channelUserHeartbeatInterval" field.</summary>
            public const int ChannelUserHeartbeatIntervalFieldNumber = 2;
            private int channelUserHeartbeatInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ChannelUserHeartbeatInterval {
              get { return channelUserHeartbeatInterval_; }
              set {
                channelUserHeartbeatInterval_ = value;
              }
            }

            /// <summary>Field number for the "networkQualityDetectionConfig" field.</summary>
            public const int NetworkQualityDetectionConfigFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig networkQualityDetectionConfig_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig NetworkQualityDetectionConfig {
              get { return networkQualityDetectionConfig_; }
              set {
                networkQualityDetectionConfig_ = value;
              }
            }

            /// <summary>Field number for the "inputtingTipDisplayInterval" field.</summary>
            public const int InputtingTipDisplayIntervalFieldNumber = 4;
            private int inputtingTipDisplayInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int InputtingTipDisplayInterval {
              get { return inputtingTipDisplayInterval_; }
              set {
                inputtingTipDisplayInterval_ = value;
              }
            }

            /// <summary>Field number for the "batchSendMessageMaxCount" field.</summary>
            public const int BatchSendMessageMaxCountFieldNumber = 5;
            private int batchSendMessageMaxCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int BatchSendMessageMaxCount {
              get { return batchSendMessageMaxCount_; }
              set {
                batchSendMessageMaxCount_ = value;
              }
            }

            /// <summary>Field number for the "resourceUploadingDomain" field.</summary>
            public const int ResourceUploadingDomainFieldNumber = 6;
            private string resourceUploadingDomain_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ResourceUploadingDomain {
              get { return resourceUploadingDomain_; }
              set {
                resourceUploadingDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FetchUserStatusInterval != other.FetchUserStatusInterval) return false;
              if (ChannelUserHeartbeatInterval != other.ChannelUserHeartbeatInterval) return false;
              if (!object.Equals(NetworkQualityDetectionConfig, other.NetworkQualityDetectionConfig)) return false;
              if (InputtingTipDisplayInterval != other.InputtingTipDisplayInterval) return false;
              if (BatchSendMessageMaxCount != other.BatchSendMessageMaxCount) return false;
              if (ResourceUploadingDomain != other.ResourceUploadingDomain) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FetchUserStatusInterval != 0) hash ^= FetchUserStatusInterval.GetHashCode();
              if (ChannelUserHeartbeatInterval != 0) hash ^= ChannelUserHeartbeatInterval.GetHashCode();
              if (networkQualityDetectionConfig_ != null) hash ^= NetworkQualityDetectionConfig.GetHashCode();
              if (InputtingTipDisplayInterval != 0) hash ^= InputtingTipDisplayInterval.GetHashCode();
              if (BatchSendMessageMaxCount != 0) hash ^= BatchSendMessageMaxCount.GetHashCode();
              if (ResourceUploadingDomain.Length != 0) hash ^= ResourceUploadingDomain.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (FetchUserStatusInterval != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FetchUserStatusInterval);
              }
              if (ChannelUserHeartbeatInterval != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(ChannelUserHeartbeatInterval);
              }
              if (networkQualityDetectionConfig_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(NetworkQualityDetectionConfig);
              }
              if (InputtingTipDisplayInterval != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(InputtingTipDisplayInterval);
              }
              if (BatchSendMessageMaxCount != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(BatchSendMessageMaxCount);
              }
              if (ResourceUploadingDomain.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(ResourceUploadingDomain);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (FetchUserStatusInterval != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FetchUserStatusInterval);
              }
              if (ChannelUserHeartbeatInterval != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(ChannelUserHeartbeatInterval);
              }
              if (networkQualityDetectionConfig_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(NetworkQualityDetectionConfig);
              }
              if (InputtingTipDisplayInterval != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(InputtingTipDisplayInterval);
              }
              if (BatchSendMessageMaxCount != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(BatchSendMessageMaxCount);
              }
              if (ResourceUploadingDomain.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(ResourceUploadingDomain);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FetchUserStatusInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FetchUserStatusInterval);
              }
              if (ChannelUserHeartbeatInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelUserHeartbeatInterval);
              }
              if (networkQualityDetectionConfig_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkQualityDetectionConfig);
              }
              if (InputtingTipDisplayInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputtingTipDisplayInterval);
              }
              if (BatchSendMessageMaxCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchSendMessageMaxCount);
              }
              if (ResourceUploadingDomain.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceUploadingDomain);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientConfig other) {
              if (other == null) {
                return;
              }
              if (other.FetchUserStatusInterval != 0) {
                FetchUserStatusInterval = other.FetchUserStatusInterval;
              }
              if (other.ChannelUserHeartbeatInterval != 0) {
                ChannelUserHeartbeatInterval = other.ChannelUserHeartbeatInterval;
              }
              if (other.networkQualityDetectionConfig_ != null) {
                if (networkQualityDetectionConfig_ == null) {
                  NetworkQualityDetectionConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig();
                }
                NetworkQualityDetectionConfig.MergeFrom(other.NetworkQualityDetectionConfig);
              }
              if (other.InputtingTipDisplayInterval != 0) {
                InputtingTipDisplayInterval = other.InputtingTipDisplayInterval;
              }
              if (other.BatchSendMessageMaxCount != 0) {
                BatchSendMessageMaxCount = other.BatchSendMessageMaxCount;
              }
              if (other.ResourceUploadingDomain.Length != 0) {
                ResourceUploadingDomain = other.ResourceUploadingDomain;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FetchUserStatusInterval = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    ChannelUserHeartbeatInterval = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    if (networkQualityDetectionConfig_ == null) {
                      NetworkQualityDetectionConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig();
                    }
                    input.ReadMessage(NetworkQualityDetectionConfig);
                    break;
                  }
                  case 32: {
                    InputtingTipDisplayInterval = input.ReadInt32();
                    break;
                  }
                  case 40: {
                    BatchSendMessageMaxCount = input.ReadInt32();
                    break;
                  }
                  case 50: {
                    ResourceUploadingDomain = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    FetchUserStatusInterval = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    ChannelUserHeartbeatInterval = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    if (networkQualityDetectionConfig_ == null) {
                      NetworkQualityDetectionConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig();
                    }
                    input.ReadMessage(NetworkQualityDetectionConfig);
                    break;
                  }
                  case 32: {
                    InputtingTipDisplayInterval = input.ReadInt32();
                    break;
                  }
                  case 40: {
                    BatchSendMessageMaxCount = input.ReadInt32();
                    break;
                  }
                  case 50: {
                    ResourceUploadingDomain = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Profile : pb::IMessage<Profile>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Profile> _parser = new pb::MessageParser<Profile>(() => new Profile());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Profile> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Profile() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Profile(Profile other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Profile Clone() {
          return new Profile(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Profile);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Profile other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Profile other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Profile message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class UserOnlineStatus : pb::IMessage<UserOnlineStatus>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserOnlineStatus> _parser = new pb::MessageParser<UserOnlineStatus>(() => new UserOnlineStatus());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserOnlineStatus> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Profile.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserOnlineStatus() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserOnlineStatus(UserOnlineStatus other) : this() {
              user_ = other.user_ != null ? other.user_.Clone() : null;
              lastOfflineTime_ = other.lastOfflineTime_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserOnlineStatus Clone() {
              return new UserOnlineStatus(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            /// <summary>Field number for the "lastOfflineTime" field.</summary>
            public const int LastOfflineTimeFieldNumber = 2;
            private long lastOfflineTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long LastOfflineTime {
              get { return lastOfflineTime_; }
              set {
                lastOfflineTime_ = value;
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status status_ = global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserOnlineStatus);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserOnlineStatus other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(User, other.User)) return false;
              if (LastOfflineTime != other.LastOfflineTime) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (user_ != null) hash ^= User.GetHashCode();
              if (LastOfflineTime != 0L) hash ^= LastOfflineTime.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (LastOfflineTime != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastOfflineTime);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (LastOfflineTime != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastOfflineTime);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (LastOfflineTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastOfflineTime);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserOnlineStatus other) {
              if (other == null) {
                return;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              if (other.LastOfflineTime != 0L) {
                LastOfflineTime = other.LastOfflineTime;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 16: {
                    LastOfflineTime = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 16: {
                    LastOfflineTime = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the UserOnlineStatus message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum Status {
                [pbr::OriginalName("UNKNOWN")] Unknown = 0,
                [pbr::OriginalName("ONLINE")] Online = 1,
                [pbr::OriginalName("OFFLINE")] Offline = 2,
              }

            }
            #endregion

          }

          public sealed partial class ProfileBatchOnlineTimeRequest : pb::IMessage<ProfileBatchOnlineTimeRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ProfileBatchOnlineTimeRequest> _parser = new pb::MessageParser<ProfileBatchOnlineTimeRequest>(() => new ProfileBatchOnlineTimeRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfileBatchOnlineTimeRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Profile.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeRequest(ProfileBatchOnlineTimeRequest other) : this() {
              user_ = other.user_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeRequest Clone() {
              return new ProfileBatchOnlineTimeRequest(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_user_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> user_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> User {
              get { return user_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfileBatchOnlineTimeRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfileBatchOnlineTimeRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!user_.Equals(other.user_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= user_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              user_.WriteTo(output, _repeated_user_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              user_.WriteTo(ref output, _repeated_user_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += user_.CalculateSize(_repeated_user_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfileBatchOnlineTimeRequest other) {
              if (other == null) {
                return;
              }
              user_.Add(other.user_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    user_.AddEntriesFrom(input, _repeated_user_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    user_.AddEntriesFrom(ref input, _repeated_user_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ProfileBatchOnlineTimeResponse : pb::IMessage<ProfileBatchOnlineTimeResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ProfileBatchOnlineTimeResponse> _parser = new pb::MessageParser<ProfileBatchOnlineTimeResponse>(() => new ProfileBatchOnlineTimeResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfileBatchOnlineTimeResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Profile.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeResponse(ProfileBatchOnlineTimeResponse other) : this() {
              userOnlineStatus_ = other.userOnlineStatus_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeResponse Clone() {
              return new ProfileBatchOnlineTimeResponse(this);
            }

            /// <summary>Field number for the "userOnlineStatus" field.</summary>
            public const int UserOnlineStatusFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus> _repeated_userOnlineStatus_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus> userOnlineStatus_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus> UserOnlineStatus {
              get { return userOnlineStatus_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfileBatchOnlineTimeResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfileBatchOnlineTimeResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!userOnlineStatus_.Equals(other.userOnlineStatus_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= userOnlineStatus_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              userOnlineStatus_.WriteTo(output, _repeated_userOnlineStatus_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              userOnlineStatus_.WriteTo(ref output, _repeated_userOnlineStatus_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += userOnlineStatus_.CalculateSize(_repeated_userOnlineStatus_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfileBatchOnlineTimeResponse other) {
              if (other == null) {
                return;
              }
              userOnlineStatus_.Add(other.userOnlineStatus_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    userOnlineStatus_.AddEntriesFrom(input, _repeated_userOnlineStatus_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    userOnlineStatus_.AddEntriesFrom(ref input, _repeated_userOnlineStatus_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Data : pb::IMessage<Data>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Data> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data(Data other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data Clone() {
          return new Data(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Data);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Data other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Data other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Data message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Update : pb::IMessage<Update>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Update> _parser = new pb::MessageParser<Update>(() => new Update());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Update> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Data.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Update() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Update(Update other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Update Clone() {
              return new Update(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Update);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Update other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Update other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Update message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum KsImDataUpdateType {
                [pbr::OriginalName("INVALID")] Invalid = 0,
                [pbr::OriginalName("GROUP_INFO_UPDATE")] GroupInfoUpdate = 1,
                [pbr::OriginalName("GROUP_MEMBER_LIST_UPDATE")] GroupMemberListUpdate = 2,
                [pbr::OriginalName("YOU_BE_KICKED")] YouBeKicked = 3,
                [pbr::OriginalName("MESSAGE_READ_EVENT")] MessageReadEvent = 4,
                [pbr::OriginalName("MESSAGE_RECEIPT_EVENT")] MessageReceiptEvent = 5,
              }

              public sealed partial class KsImDataUpdatePushPayload : pb::IMessage<KsImDataUpdatePushPayload>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<KsImDataUpdatePushPayload> _parser = new pb::MessageParser<KsImDataUpdatePushPayload>(() => new KsImDataUpdatePushPayload());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<KsImDataUpdatePushPayload> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public KsImDataUpdatePushPayload() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public KsImDataUpdatePushPayload(KsImDataUpdatePushPayload other) : this() {
                  type_ = other.type_ != null ? other.type_.Clone() : null;
                  content_ = other.content_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public KsImDataUpdatePushPayload Clone() {
                  return new KsImDataUpdatePushPayload(this);
                }

                /// <summary>Field number for the "type" field.</summary>
                public const int TypeFieldNumber = 1;
                private global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload type_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload Type {
                  get { return type_; }
                  set {
                    type_ = value;
                  }
                }

                /// <summary>Field number for the "content" field.</summary>
                public const int ContentFieldNumber = 2;
                private pb::ByteString content_ = pb::ByteString.Empty;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pb::ByteString Content {
                  get { return content_; }
                  set {
                    content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as KsImDataUpdatePushPayload);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(KsImDataUpdatePushPayload other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(Type, other.Type)) return false;
                  if (Content != other.Content) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (type_ != null) hash ^= Type.GetHashCode();
                  if (Content.Length != 0) hash ^= Content.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (type_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Type);
                  }
                  if (Content.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Content);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (type_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Type);
                  }
                  if (Content.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Content);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (type_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
                  }
                  if (Content.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(KsImDataUpdatePushPayload other) {
                  if (other == null) {
                    return;
                  }
                  if (other.type_ != null) {
                    if (type_ == null) {
                      Type = new global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload();
                    }
                    Type.MergeFrom(other.Type);
                  }
                  if (other.Content.Length != 0) {
                    Content = other.Content;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (type_ == null) {
                          Type = new global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload();
                        }
                        input.ReadMessage(Type);
                        break;
                      }
                      case 18: {
                        Content = input.ReadBytes();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (type_ == null) {
                          Type = new global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload();
                        }
                        input.ReadMessage(Type);
                        break;
                      }
                      case 18: {
                        Content = input.ReadBytes();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class GroupInfoDataUpdate : pb::IMessage<GroupInfoDataUpdate>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<GroupInfoDataUpdate> _parser = new pb::MessageParser<GroupInfoDataUpdate>(() => new GroupInfoDataUpdate());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<GroupInfoDataUpdate> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupInfoDataUpdate() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupInfoDataUpdate(GroupInfoDataUpdate other) : this() {
                  groupId_ = other.groupId_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupInfoDataUpdate Clone() {
                  return new GroupInfoDataUpdate(this);
                }

                /// <summary>Field number for the "groupId" field.</summary>
                public const int GroupIdFieldNumber = 1;
                private string groupId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string GroupId {
                  get { return groupId_; }
                  set {
                    groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as GroupInfoDataUpdate);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(GroupInfoDataUpdate other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupId != other.GroupId) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(GroupInfoDataUpdate other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupId.Length != 0) {
                    GroupId = other.GroupId;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class GroupMemberListUpdate : pb::IMessage<GroupMemberListUpdate>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<GroupMemberListUpdate> _parser = new pb::MessageParser<GroupMemberListUpdate>(() => new GroupMemberListUpdate());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<GroupMemberListUpdate> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupMemberListUpdate() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupMemberListUpdate(GroupMemberListUpdate other) : this() {
                  groupId_ = other.groupId_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupMemberListUpdate Clone() {
                  return new GroupMemberListUpdate(this);
                }

                /// <summary>Field number for the "groupId" field.</summary>
                public const int GroupIdFieldNumber = 1;
                private string groupId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string GroupId {
                  get { return groupId_; }
                  set {
                    groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as GroupMemberListUpdate);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(GroupMemberListUpdate other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupId != other.GroupId) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(GroupMemberListUpdate other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupId.Length != 0) {
                    GroupId = other.GroupId;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class YouBeKicked : pb::IMessage<YouBeKicked>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<YouBeKicked> _parser = new pb::MessageParser<YouBeKicked>(() => new YouBeKicked());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<YouBeKicked> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[3]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public YouBeKicked() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public YouBeKicked(YouBeKicked other) : this() {
                  groupId_ = other.groupId_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public YouBeKicked Clone() {
                  return new YouBeKicked(this);
                }

                /// <summary>Field number for the "groupId" field.</summary>
                public const int GroupIdFieldNumber = 1;
                private string groupId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string GroupId {
                  get { return groupId_; }
                  set {
                    groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as YouBeKicked);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(YouBeKicked other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupId != other.GroupId) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(YouBeKicked other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupId.Length != 0) {
                    GroupId = other.GroupId;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class MessageRead : pb::IMessage<MessageRead>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<MessageRead> _parser = new pb::MessageParser<MessageRead>(() => new MessageRead());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<MessageRead> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[4]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageRead() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageRead(MessageRead other) : this() {
                  strTargetId_ = other.strTargetId_;
                  readSeq_ = other.readSeq_;
                  chatTargetType_ = other.chatTargetType_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageRead Clone() {
                  return new MessageRead(this);
                }

                /// <summary>Field number for the "strTargetId" field.</summary>
                public const int StrTargetIdFieldNumber = 1;
                private string strTargetId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string StrTargetId {
                  get { return strTargetId_; }
                  set {
                    strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "readSeq" field.</summary>
                public const int ReadSeqFieldNumber = 2;
                private long readSeq_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long ReadSeq {
                  get { return readSeq_; }
                  set {
                    readSeq_ = value;
                  }
                }

                /// <summary>Field number for the "chatTargetType" field.</summary>
                public const int ChatTargetTypeFieldNumber = 3;
                private global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType ChatTargetType {
                  get { return chatTargetType_; }
                  set {
                    chatTargetType_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as MessageRead);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(MessageRead other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (StrTargetId != other.StrTargetId) return false;
                  if (ReadSeq != other.ReadSeq) return false;
                  if (ChatTargetType != other.ChatTargetType) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
                  if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
                  if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (StrTargetId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(StrTargetId);
                  }
                  if (ReadSeq != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(ReadSeq);
                  }
                  if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
                    output.WriteRawTag(24);
                    output.WriteEnum((int) ChatTargetType);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (StrTargetId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(StrTargetId);
                  }
                  if (ReadSeq != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(ReadSeq);
                  }
                  if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
                    output.WriteRawTag(24);
                    output.WriteEnum((int) ChatTargetType);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (StrTargetId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
                  }
                  if (ReadSeq != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
                  }
                  if (ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(MessageRead other) {
                  if (other == null) {
                    return;
                  }
                  if (other.StrTargetId.Length != 0) {
                    StrTargetId = other.StrTargetId;
                  }
                  if (other.ReadSeq != 0L) {
                    ReadSeq = other.ReadSeq;
                  }
                  if (other.ChatTargetType != global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType.CttUser) {
                    ChatTargetType = other.ChatTargetType;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        StrTargetId = input.ReadString();
                        break;
                      }
                      case 16: {
                        ReadSeq = input.ReadInt64();
                        break;
                      }
                      case 24: {
                        ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        StrTargetId = input.ReadString();
                        break;
                      }
                      case 16: {
                        ReadSeq = input.ReadInt64();
                        break;
                      }
                      case 24: {
                        ChatTargetType = (global::AcFunDanmu.Im.ImMessage.Types.ChatTargetType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class MessageReceipt : pb::IMessage<MessageReceipt>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<MessageReceipt> _parser = new pb::MessageParser<MessageReceipt>(() => new MessageReceipt());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<MessageReceipt> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[5]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageReceipt() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageReceipt(MessageReceipt other) : this() {
                  chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
                  receiptStatus_ = other.receiptStatus_ != null ? other.receiptStatus_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageReceipt Clone() {
                  return new MessageReceipt(this);
                }

                /// <summary>Field number for the "chatTarget" field.</summary>
                public const int ChatTargetFieldNumber = 1;
                private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
                  get { return chatTarget_; }
                  set {
                    chatTarget_ = value;
                  }
                }

                /// <summary>Field number for the "receiptStatus" field.</summary>
                public const int ReceiptStatusFieldNumber = 2;
                private global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus receiptStatus_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus ReceiptStatus {
                  get { return receiptStatus_; }
                  set {
                    receiptStatus_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as MessageReceipt);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(MessageReceipt other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
                  if (!object.Equals(ReceiptStatus, other.ReceiptStatus)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
                  if (receiptStatus_ != null) hash ^= ReceiptStatus.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (chatTarget_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(ChatTarget);
                  }
                  if (receiptStatus_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(ReceiptStatus);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (chatTarget_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(ChatTarget);
                  }
                  if (receiptStatus_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(ReceiptStatus);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (chatTarget_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
                  }
                  if (receiptStatus_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptStatus);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(MessageReceipt other) {
                  if (other == null) {
                    return;
                  }
                  if (other.chatTarget_ != null) {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                    }
                    ChatTarget.MergeFrom(other.ChatTarget);
                  }
                  if (other.receiptStatus_ != null) {
                    if (receiptStatus_ == null) {
                      ReceiptStatus = new global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus();
                    }
                    ReceiptStatus.MergeFrom(other.ReceiptStatus);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (chatTarget_ == null) {
                          ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                        }
                        input.ReadMessage(ChatTarget);
                        break;
                      }
                      case 18: {
                        if (receiptStatus_ == null) {
                          ReceiptStatus = new global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus();
                        }
                        input.ReadMessage(ReceiptStatus);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (chatTarget_ == null) {
                          ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                        }
                        input.ReadMessage(ChatTarget);
                        break;
                      }
                      case 18: {
                        if (receiptStatus_ == null) {
                          ReceiptStatus = new global::AcFunDanmu.Im.ImMessage.Types.MessageReceiptStatus();
                        }
                        input.ReadMessage(ReceiptStatus);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class Message : pb::IMessage<Message>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message(Message other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message Clone() {
          return new Message(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Message other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Message other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Message message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum ImcMessageType {
            [pbr::OriginalName("TEXT")] Text = 0,
            [pbr::OriginalName("IMAGE")] Image = 1,
            [pbr::OriginalName("CUSTOM")] Custom = 2,
            [pbr::OriginalName("AUDIO")] Audio = 3,
            [pbr::OriginalName("VIDEO")] Video = 4,
            [pbr::OriginalName("EMOTICON")] Emoticon = 5,
            [pbr::OriginalName("FILE")] File = 6,
            [pbr::OriginalName("NOTICE")] Notice = 10,
            [pbr::OriginalName("RECALLED")] Recalled = 11,
            [pbr::OriginalName("REFERENCE")] Reference = 12,
            [pbr::OriginalName("MERGE_FORWARD")] MergeForward = 13,
            [pbr::OriginalName("PLACE_HOLDER")] PlaceHolder = 100,
            [pbr::OriginalName("REPLACE")] Replace = 101,
            [pbr::OriginalName("INVISIBLE_TYPE_MAS")] InvisibleTypeMas = 199,
            [pbr::OriginalName("RICH_NOTICE")] RichNotice = 200,
          }

          public enum NoticeMetaType {
            [pbr::OriginalName("UNKNOWN_NOTICE_META_TYPE")] UnknownNoticeMetaType = 0,
            [pbr::OriginalName("COMMON_NOTICE_META_TYPE")] CommonNoticeMetaType = 1,
            [pbr::OriginalName("CONFIRM_INVITE_INTO_GROUP_META")] ConfirmInviteIntoGroupMeta = 2,
            [pbr::OriginalName("CONFIRM_JOIN_INTO_GROUP_META")] ConfirmJoinIntoGroupMeta = 3,
          }

          public enum GroupFindType {
            [pbr::OriginalName("BY_UNKNOWN")] ByUnknown = 0,
            [pbr::OriginalName("BY_ID")] ById = 1,
            [pbr::OriginalName("BY_NAME")] ByName = 2,
            [pbr::OriginalName("BY_QR_CODE")] ByQrCode = 3,
            [pbr::OriginalName("BY_CARD")] ByCard = 4,
            [pbr::OriginalName("BY_INVITATION")] ByInvitation = 5,
            [pbr::OriginalName("BY_SHARE_LINK")] ByShareLink = 6,
          }

          public enum JoinRequestStatus {
            [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
            [pbr::OriginalName("REQUESTED")] Requested = 1,
            [pbr::OriginalName("APPROVED")] Approved = 2,
            [pbr::OriginalName("REFUSED")] Refused = 3,
          }

          public enum JoinNeedPermissionType {
            [pbr::OriginalName("UNKNOWN_JOIN_NEED_PERMISSION_TYPE")] UnknownJoinNeedPermissionType = 0,
            [pbr::OriginalName("NONE")] None = 1,
            [pbr::OriginalName("ADMIN")] Admin = 2,
          }

          public enum GroupStatus {
            [pbr::OriginalName("UNKNOW_GROUP_STATUS")] UnknowGroupStatus = 0,
            [pbr::OriginalName("VALID")] Valid = 1,
            [pbr::OriginalName("INVALID")] Invalid = 2,
          }

          public enum GroupType {
            [pbr::OriginalName("UNKNOW_GROUP_TYPE")] UnknowGroupType = 0,
            [pbr::OriginalName("PRIVATE")] Private = 3,
            [pbr::OriginalName("PUBLIC")] Public = 4,
          }

          public enum ForbiddenState {
            [pbr::OriginalName("UNKNOWN_FORBIDDEN_STATE")] UnknownForbiddenState = 0,
            [pbr::OriginalName("UN_FORBIDDEN")] UnForbidden = 1,
            [pbr::OriginalName("FORBID_MESSAGE")] ForbidMessage = 2,
          }

          public enum PassThroughType {
            [pbr::OriginalName("INVALID_PTT")] InvalidPtt = 0,
            [pbr::OriginalName("INPUTTING")] Inputting = 1,
          }

          public sealed partial class ImcRecalledMessage : pb::IMessage<ImcRecalledMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ImcRecalledMessage> _parser = new pb::MessageParser<ImcRecalledMessage>(() => new ImcRecalledMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcRecalledMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcRecalledMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcRecalledMessage(ImcRecalledMessage other) : this() {
              originMsg_ = other.originMsg_ != null ? other.originMsg_.Clone() : null;
              noticeMsg_ = other.noticeMsg_ != null ? other.noticeMsg_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcRecalledMessage Clone() {
              return new ImcRecalledMessage(this);
            }

            /// <summary>Field number for the "originMsg" field.</summary>
            public const int OriginMsgFieldNumber = 1;
            private global::AcFunDanmu.Im.ImMessage.Types.Message originMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.ImMessage.Types.Message OriginMsg {
              get { return originMsg_; }
              set {
                originMsg_ = value;
              }
            }

            /// <summary>Field number for the "noticeMsg" field.</summary>
            public const int NoticeMsgFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage noticeMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage NoticeMsg {
              get { return noticeMsg_; }
              set {
                noticeMsg_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcRecalledMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcRecalledMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(OriginMsg, other.OriginMsg)) return false;
              if (!object.Equals(NoticeMsg, other.NoticeMsg)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (originMsg_ != null) hash ^= OriginMsg.GetHashCode();
              if (noticeMsg_ != null) hash ^= NoticeMsg.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (originMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(OriginMsg);
              }
              if (noticeMsg_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(NoticeMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (originMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(OriginMsg);
              }
              if (noticeMsg_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(NoticeMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (originMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginMsg);
              }
              if (noticeMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(NoticeMsg);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcRecalledMessage other) {
              if (other == null) {
                return;
              }
              if (other.originMsg_ != null) {
                if (originMsg_ == null) {
                  OriginMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                }
                OriginMsg.MergeFrom(other.OriginMsg);
              }
              if (other.noticeMsg_ != null) {
                if (noticeMsg_ == null) {
                  NoticeMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage();
                }
                NoticeMsg.MergeFrom(other.NoticeMsg);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (originMsg_ == null) {
                      OriginMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                    }
                    input.ReadMessage(OriginMsg);
                    break;
                  }
                  case 18: {
                    if (noticeMsg_ == null) {
                      NoticeMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage();
                    }
                    input.ReadMessage(NoticeMsg);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (originMsg_ == null) {
                      OriginMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                    }
                    input.ReadMessage(OriginMsg);
                    break;
                  }
                  case 18: {
                    if (noticeMsg_ == null) {
                      NoticeMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage();
                    }
                    input.ReadMessage(NoticeMsg);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ImcReplaceMessage : pb::IMessage<ImcReplaceMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ImcReplaceMessage> _parser = new pb::MessageParser<ImcReplaceMessage>(() => new ImcReplaceMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcReplaceMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcReplaceMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcReplaceMessage(ImcReplaceMessage other) : this() {
              replaceMsg_ = other.replaceMsg_ != null ? other.replaceMsg_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcReplaceMessage Clone() {
              return new ImcReplaceMessage(this);
            }

            /// <summary>Field number for the "replaceMsg" field.</summary>
            public const int ReplaceMsgFieldNumber = 1;
            private global::AcFunDanmu.Im.ImMessage.Types.Message replaceMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.ImMessage.Types.Message ReplaceMsg {
              get { return replaceMsg_; }
              set {
                replaceMsg_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcReplaceMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcReplaceMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(ReplaceMsg, other.ReplaceMsg)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (replaceMsg_ != null) hash ^= ReplaceMsg.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (replaceMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ReplaceMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (replaceMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ReplaceMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (replaceMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplaceMsg);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcReplaceMessage other) {
              if (other == null) {
                return;
              }
              if (other.replaceMsg_ != null) {
                if (replaceMsg_ == null) {
                  ReplaceMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                }
                ReplaceMsg.MergeFrom(other.ReplaceMsg);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (replaceMsg_ == null) {
                      ReplaceMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                    }
                    input.ReadMessage(ReplaceMsg);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (replaceMsg_ == null) {
                      ReplaceMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                    }
                    input.ReadMessage(ReplaceMsg);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Text : pb::IMessage<Text>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Text> _parser = new pb::MessageParser<Text>(() => new Text());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Text> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Text() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Text(Text other) : this() {
              text_ = other.text_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Text Clone() {
              return new Text(this);
            }

            /// <summary>Field number for the "text" field.</summary>
            public const int Text_FieldNumber = 1;
            private string text_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Text_ {
              get { return text_; }
              set {
                text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Text);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Text other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Text_ != other.Text_) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Text_.Length != 0) hash ^= Text_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Text_.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Text_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Text_.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Text_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Text_.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Text_);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Text other) {
              if (other == null) {
                return;
              }
              if (other.Text_.Length != 0) {
                Text_ = other.Text_;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Text_ = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Text_ = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Image : pb::IMessage<Image>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Image> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Image() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Image(Image other) : this() {
              uri_ = other.uri_;
              width_ = other.width_;
              height_ = other.height_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Image Clone() {
              return new Image(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 2;
            private int width_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "height" field.</summary>
            public const int HeightFieldNumber = 3;
            private int height_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Height {
              get { return height_; }
              set {
                height_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Image);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Image other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Width != other.Width) return false;
              if (Height != other.Height) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Width != 0) hash ^= Width.GetHashCode();
              if (Height != 0) hash ^= Height.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Width != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Height);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Width != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Height);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Width != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
              }
              if (Height != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Image other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Width != 0) {
                Width = other.Width;
              }
              if (other.Height != 0) {
                Height = other.Height;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Height = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Height = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Audio : pb::IMessage<Audio>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Audio> _parser = new pb::MessageParser<Audio>(() => new Audio());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Audio> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Audio() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Audio(Audio other) : this() {
              uri_ = other.uri_;
              duration_ = other.duration_;
              type_ = other.type_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Audio Clone() {
              return new Audio(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 2;
            private int duration_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 3;
            private string type_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Type {
              get { return type_; }
              set {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Audio);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Audio other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Duration != other.Duration) return false;
              if (Type != other.Type) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Duration != 0) hash ^= Duration.GetHashCode();
              if (Type.Length != 0) hash ^= Type.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Duration != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Duration);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Duration != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Duration);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Duration != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
              }
              if (Type.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Audio other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Duration != 0) {
                Duration = other.Duration;
              }
              if (other.Type.Length != 0) {
                Type = other.Type;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Duration = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Duration = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Video : pb::IMessage<Video>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Video> _parser = new pb::MessageParser<Video>(() => new Video());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Video> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Video() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Video(Video other) : this() {
              uri_ = other.uri_;
              duration_ = other.duration_;
              width_ = other.width_;
              height_ = other.height_;
              coverUri_ = other.coverUri_;
              type_ = other.type_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Video Clone() {
              return new Video(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 2;
            private int duration_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 3;
            private int width_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "height" field.</summary>
            public const int HeightFieldNumber = 4;
            private int height_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Height {
              get { return height_; }
              set {
                height_ = value;
              }
            }

            /// <summary>Field number for the "coverUri" field.</summary>
            public const int CoverUriFieldNumber = 5;
            private string coverUri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CoverUri {
              get { return coverUri_; }
              set {
                coverUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 6;
            private string type_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Type {
              get { return type_; }
              set {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Video);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Video other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Duration != other.Duration) return false;
              if (Width != other.Width) return false;
              if (Height != other.Height) return false;
              if (CoverUri != other.CoverUri) return false;
              if (Type != other.Type) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Duration != 0) hash ^= Duration.GetHashCode();
              if (Width != 0) hash ^= Width.GetHashCode();
              if (Height != 0) hash ^= Height.GetHashCode();
              if (CoverUri.Length != 0) hash ^= CoverUri.GetHashCode();
              if (Type.Length != 0) hash ^= Type.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Duration != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Duration);
              }
              if (Width != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(Height);
              }
              if (CoverUri.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(CoverUri);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Duration != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Duration);
              }
              if (Width != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(Height);
              }
              if (CoverUri.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(CoverUri);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Duration != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
              }
              if (Width != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
              }
              if (Height != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
              }
              if (CoverUri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CoverUri);
              }
              if (Type.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Video other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Duration != 0) {
                Duration = other.Duration;
              }
              if (other.Width != 0) {
                Width = other.Width;
              }
              if (other.Height != 0) {
                Height = other.Height;
              }
              if (other.CoverUri.Length != 0) {
                CoverUri = other.CoverUri;
              }
              if (other.Type.Length != 0) {
                Type = other.Type;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Duration = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    Height = input.ReadInt32();
                    break;
                  }
                  case 42: {
                    CoverUri = input.ReadString();
                    break;
                  }
                  case 50: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Duration = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    Height = input.ReadInt32();
                    break;
                  }
                  case 42: {
                    CoverUri = input.ReadString();
                    break;
                  }
                  case 50: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Custom : pb::IMessage<Custom>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Custom> _parser = new pb::MessageParser<Custom>(() => new Custom());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Custom> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[6]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Custom() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Custom(Custom other) : this() {
              payload_ = other.payload_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Custom Clone() {
              return new Custom(this);
            }

            /// <summary>Field number for the "payload" field.</summary>
            public const int PayloadFieldNumber = 1;
            private string payload_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Payload {
              get { return payload_; }
              set {
                payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Custom);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Custom other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Payload != other.Payload) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Payload.Length != 0) hash ^= Payload.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Payload.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Payload);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Payload.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Payload);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Payload.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Payload);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Custom other) {
              if (other == null) {
                return;
              }
              if (other.Payload.Length != 0) {
                Payload = other.Payload;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Payload = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Payload = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class PicUrl : pb::IMessage<PicUrl>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<PicUrl> _parser = new pb::MessageParser<PicUrl>(() => new PicUrl());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PicUrl> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[7]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PicUrl() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PicUrl(PicUrl other) : this() {
              cdn_ = other.cdn_;
              url_ = other.url_;
              urlPattern_ = other.urlPattern_;
              ip_ = other.ip_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PicUrl Clone() {
              return new PicUrl(this);
            }

            /// <summary>Field number for the "cdn" field.</summary>
            public const int CdnFieldNumber = 1;
            private string cdn_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Cdn {
              get { return cdn_; }
              set {
                cdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "url" field.</summary>
            public const int UrlFieldNumber = 2;
            private string url_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Url {
              get { return url_; }
              set {
                url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "urlPattern" field.</summary>
            public const int UrlPatternFieldNumber = 3;
            private string urlPattern_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string UrlPattern {
              get { return urlPattern_; }
              set {
                urlPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "ip" field.</summary>
            public const int IpFieldNumber = 4;
            private string ip_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Ip {
              get { return ip_; }
              set {
                ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PicUrl);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PicUrl other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Cdn != other.Cdn) return false;
              if (Url != other.Url) return false;
              if (UrlPattern != other.UrlPattern) return false;
              if (Ip != other.Ip) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Cdn.Length != 0) hash ^= Cdn.GetHashCode();
              if (Url.Length != 0) hash ^= Url.GetHashCode();
              if (UrlPattern.Length != 0) hash ^= UrlPattern.GetHashCode();
              if (Ip.Length != 0) hash ^= Ip.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Cdn.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Cdn);
              }
              if (Url.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Url);
              }
              if (UrlPattern.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(UrlPattern);
              }
              if (Ip.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Ip);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Cdn.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Cdn);
              }
              if (Url.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Url);
              }
              if (UrlPattern.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(UrlPattern);
              }
              if (Ip.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Ip);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Cdn.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Cdn);
              }
              if (Url.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
              }
              if (UrlPattern.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(UrlPattern);
              }
              if (Ip.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PicUrl other) {
              if (other == null) {
                return;
              }
              if (other.Cdn.Length != 0) {
                Cdn = other.Cdn;
              }
              if (other.Url.Length != 0) {
                Url = other.Url;
              }
              if (other.UrlPattern.Length != 0) {
                UrlPattern = other.UrlPattern;
              }
              if (other.Ip.Length != 0) {
                Ip = other.Ip;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Cdn = input.ReadString();
                    break;
                  }
                  case 18: {
                    Url = input.ReadString();
                    break;
                  }
                  case 26: {
                    UrlPattern = input.ReadString();
                    break;
                  }
                  case 34: {
                    Ip = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Cdn = input.ReadString();
                    break;
                  }
                  case 18: {
                    Url = input.ReadString();
                    break;
                  }
                  case 26: {
                    UrlPattern = input.ReadString();
                    break;
                  }
                  case 34: {
                    Ip = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Emoticon : pb::IMessage<Emoticon>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Emoticon> _parser = new pb::MessageParser<Emoticon>(() => new Emoticon());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Emoticon> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[8]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Emoticon() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Emoticon(Emoticon other) : this() {
              id_ = other.id_;
              packageId_ = other.packageId_;
              name_ = other.name_;
              type_ = other.type_;
              bigUrl_ = other.bigUrl_.Clone();
              width_ = other.width_;
              height_ = other.height_;
              emoticonCOde_ = other.emoticonCOde_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Emoticon Clone() {
              return new Emoticon(this);
            }

            /// <summary>Field number for the "id" field.</summary>
            public const int IdFieldNumber = 1;
            private string id_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Id {
              get { return id_; }
              set {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "packageId" field.</summary>
            public const int PackageIdFieldNumber = 2;
            private string packageId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PackageId {
              get { return packageId_; }
              set {
                packageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 3;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type type_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type Type {
              get { return type_; }
              set {
                type_ = value;
              }
            }

            /// <summary>Field number for the "bigUrl" field.</summary>
            public const int BigUrlFieldNumber = 5;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl> _repeated_bigUrl_codec
                = pb::FieldCodec.ForMessage(42, global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl> bigUrl_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl> BigUrl {
              get { return bigUrl_; }
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 6;
            private int width_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "height" field.</summary>
            public const int HeightFieldNumber = 7;
            private int height_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Height {
              get { return height_; }
              set {
                height_ = value;
              }
            }

            /// <summary>Field number for the "emoticonCOde" field.</summary>
            public const int EmoticonCOdeFieldNumber = 8;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code> _repeated_emoticonCOde_codec
                = pb::FieldCodec.ForMessage(66, global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code> emoticonCOde_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code> EmoticonCOde {
              get { return emoticonCOde_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Emoticon);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Emoticon other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Id != other.Id) return false;
              if (PackageId != other.PackageId) return false;
              if (Name != other.Name) return false;
              if (Type != other.Type) return false;
              if(!bigUrl_.Equals(other.bigUrl_)) return false;
              if (Width != other.Width) return false;
              if (Height != other.Height) return false;
              if(!emoticonCOde_.Equals(other.emoticonCOde_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Id.Length != 0) hash ^= Id.GetHashCode();
              if (PackageId.Length != 0) hash ^= PackageId.GetHashCode();
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) hash ^= Type.GetHashCode();
              hash ^= bigUrl_.GetHashCode();
              if (Width != 0) hash ^= Width.GetHashCode();
              if (Height != 0) hash ^= Height.GetHashCode();
              hash ^= emoticonCOde_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Id.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Id);
              }
              if (PackageId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(PackageId);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Name);
              }
              if (Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Type);
              }
              bigUrl_.WriteTo(output, _repeated_bigUrl_codec);
              if (Width != 0) {
                output.WriteRawTag(48);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(56);
                output.WriteInt32(Height);
              }
              emoticonCOde_.WriteTo(output, _repeated_emoticonCOde_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Id.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Id);
              }
              if (PackageId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(PackageId);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Name);
              }
              if (Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Type);
              }
              bigUrl_.WriteTo(ref output, _repeated_bigUrl_codec);
              if (Width != 0) {
                output.WriteRawTag(48);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(56);
                output.WriteInt32(Height);
              }
              emoticonCOde_.WriteTo(ref output, _repeated_emoticonCOde_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Id.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
              }
              if (PackageId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageId);
              }
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
              }
              size += bigUrl_.CalculateSize(_repeated_bigUrl_codec);
              if (Width != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
              }
              if (Height != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
              }
              size += emoticonCOde_.CalculateSize(_repeated_emoticonCOde_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Emoticon other) {
              if (other == null) {
                return;
              }
              if (other.Id.Length != 0) {
                Id = other.Id;
              }
              if (other.PackageId.Length != 0) {
                PackageId = other.PackageId;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) {
                Type = other.Type;
              }
              bigUrl_.Add(other.bigUrl_);
              if (other.Width != 0) {
                Width = other.Width;
              }
              if (other.Height != 0) {
                Height = other.Height;
              }
              emoticonCOde_.Add(other.emoticonCOde_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Id = input.ReadString();
                    break;
                  }
                  case 18: {
                    PackageId = input.ReadString();
                    break;
                  }
                  case 26: {
                    Name = input.ReadString();
                    break;
                  }
                  case 32: {
                    Type = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    bigUrl_.AddEntriesFrom(input, _repeated_bigUrl_codec);
                    break;
                  }
                  case 48: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 56: {
                    Height = input.ReadInt32();
                    break;
                  }
                  case 66: {
                    emoticonCOde_.AddEntriesFrom(input, _repeated_emoticonCOde_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Id = input.ReadString();
                    break;
                  }
                  case 18: {
                    PackageId = input.ReadString();
                    break;
                  }
                  case 26: {
                    Name = input.ReadString();
                    break;
                  }
                  case 32: {
                    Type = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    bigUrl_.AddEntriesFrom(ref input, _repeated_bigUrl_codec);
                    break;
                  }
                  case 48: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 56: {
                    Height = input.ReadInt32();
                    break;
                  }
                  case 66: {
                    emoticonCOde_.AddEntriesFrom(ref input, _repeated_emoticonCOde_codec);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Emoticon message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum Type {
                [pbr::OriginalName("UNKNOWN")] Unknown = 0,
                [pbr::OriginalName("BASIC")] Basic = 1,
                [pbr::OriginalName("IMAGE")] Image = 2,
                [pbr::OriginalName("GIF")] Gif = 3,
                [pbr::OriginalName("SPECIAL_EFFECT")] SpecialEffect = 4,
                [pbr::OriginalName("SCRIPT")] Script = 5,
              }

              public sealed partial class Code : pb::IMessage<Code>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Code> _parser = new pb::MessageParser<Code>(() => new Code());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Code> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Code() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Code(Code other) : this() {
                  language_ = other.language_;
                  code_ = other.code_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Code Clone() {
                  return new Code(this);
                }

                /// <summary>Field number for the "language" field.</summary>
                public const int LanguageFieldNumber = 1;
                private string language_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Language {
                  get { return language_; }
                  set {
                    language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "code" field.</summary>
                public const int Code_FieldNumber = 2;
                private static readonly pb::FieldCodec<string> _repeated_code_codec
                    = pb::FieldCodec.ForString(18);
                private readonly pbc::RepeatedField<string> code_ = new pbc::RepeatedField<string>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<string> Code_ {
                  get { return code_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Code);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Code other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Language != other.Language) return false;
                  if(!code_.Equals(other.code_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Language.Length != 0) hash ^= Language.GetHashCode();
                  hash ^= code_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Language.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Language);
                  }
                  code_.WriteTo(output, _repeated_code_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Language.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Language);
                  }
                  code_.WriteTo(ref output, _repeated_code_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Language.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
                  }
                  size += code_.CalculateSize(_repeated_code_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Code other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Language.Length != 0) {
                    Language = other.Language;
                  }
                  code_.Add(other.code_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        Language = input.ReadString();
                        break;
                      }
                      case 18: {
                        code_.AddEntriesFrom(input, _repeated_code_codec);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        Language = input.ReadString();
                        break;
                      }
                      case 18: {
                        code_.AddEntriesFrom(ref input, _repeated_code_codec);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          public sealed partial class File : pb::IMessage<File>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<File> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[9]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public File() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public File(File other) : this() {
              uri_ = other.uri_;
              name_ = other.name_;
              ext_ = other.ext_;
              extra_ = other.extra_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public File Clone() {
              return new File(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 2;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "ext" field.</summary>
            public const int ExtFieldNumber = 3;
            private string ext_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Ext {
              get { return ext_; }
              set {
                ext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "extra" field.</summary>
            public const int ExtraFieldNumber = 4;
            private string extra_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Extra {
              get { return extra_; }
              set {
                extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as File);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(File other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Name != other.Name) return false;
              if (Ext != other.Ext) return false;
              if (Extra != other.Extra) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Ext.Length != 0) hash ^= Ext.GetHashCode();
              if (Extra.Length != 0) hash ^= Extra.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Name);
              }
              if (Ext.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Ext);
              }
              if (Extra.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Extra);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Name);
              }
              if (Ext.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Ext);
              }
              if (Extra.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Extra);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Ext.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext);
              }
              if (Extra.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(File other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Ext.Length != 0) {
                Ext = other.Ext;
              }
              if (other.Extra.Length != 0) {
                Extra = other.Extra;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 18: {
                    Name = input.ReadString();
                    break;
                  }
                  case 26: {
                    Ext = input.ReadString();
                    break;
                  }
                  case 34: {
                    Extra = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 18: {
                    Name = input.ReadString();
                    break;
                  }
                  case 26: {
                    Ext = input.ReadString();
                    break;
                  }
                  case 34: {
                    Extra = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Reference : pb::IMessage<Reference>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Reference> _parser = new pb::MessageParser<Reference>(() => new Reference());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Reference> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[10]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Reference() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Reference(Reference other) : this() {
              originMsg_ = other.originMsg_ != null ? other.originMsg_.Clone() : null;
              referenceMsg_ = other.referenceMsg_ != null ? other.referenceMsg_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Reference Clone() {
              return new Reference(this);
            }

            /// <summary>Field number for the "originMsg" field.</summary>
            public const int OriginMsgFieldNumber = 1;
            private global::AcFunDanmu.Im.ImMessage.Types.Message originMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.ImMessage.Types.Message OriginMsg {
              get { return originMsg_; }
              set {
                originMsg_ = value;
              }
            }

            /// <summary>Field number for the "referenceMsg" field.</summary>
            public const int ReferenceMsgFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage referenceMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage ReferenceMsg {
              get { return referenceMsg_; }
              set {
                referenceMsg_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Reference);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Reference other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(OriginMsg, other.OriginMsg)) return false;
              if (!object.Equals(ReferenceMsg, other.ReferenceMsg)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (originMsg_ != null) hash ^= OriginMsg.GetHashCode();
              if (referenceMsg_ != null) hash ^= ReferenceMsg.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (originMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(OriginMsg);
              }
              if (referenceMsg_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ReferenceMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (originMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(OriginMsg);
              }
              if (referenceMsg_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ReferenceMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (originMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginMsg);
              }
              if (referenceMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferenceMsg);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Reference other) {
              if (other == null) {
                return;
              }
              if (other.originMsg_ != null) {
                if (originMsg_ == null) {
                  OriginMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                }
                OriginMsg.MergeFrom(other.OriginMsg);
              }
              if (other.referenceMsg_ != null) {
                if (referenceMsg_ == null) {
                  ReferenceMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage();
                }
                ReferenceMsg.MergeFrom(other.ReferenceMsg);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (originMsg_ == null) {
                      OriginMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                    }
                    input.ReadMessage(OriginMsg);
                    break;
                  }
                  case 18: {
                    if (referenceMsg_ == null) {
                      ReferenceMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage();
                    }
                    input.ReadMessage(ReferenceMsg);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (originMsg_ == null) {
                      OriginMsg = new global::AcFunDanmu.Im.ImMessage.Types.Message();
                    }
                    input.ReadMessage(OriginMsg);
                    break;
                  }
                  case 18: {
                    if (referenceMsg_ == null) {
                      ReferenceMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage();
                    }
                    input.ReadMessage(ReferenceMsg);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Reference message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ReferenceMessage : pb::IMessage<ReferenceMessage>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ReferenceMessage> _parser = new pb::MessageParser<ReferenceMessage>(() => new ReferenceMessage());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ReferenceMessage> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReferenceMessage() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReferenceMessage(ReferenceMessage other) : this() {
                  contentType_ = other.contentType_;
                  content_ = other.content_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReferenceMessage Clone() {
                  return new ReferenceMessage(this);
                }

                /// <summary>Field number for the "contentType" field.</summary>
                public const int ContentTypeFieldNumber = 1;
                private int contentType_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int ContentType {
                  get { return contentType_; }
                  set {
                    contentType_ = value;
                  }
                }

                /// <summary>Field number for the "content" field.</summary>
                public const int ContentFieldNumber = 2;
                private pb::ByteString content_ = pb::ByteString.Empty;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pb::ByteString Content {
                  get { return content_; }
                  set {
                    content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ReferenceMessage);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ReferenceMessage other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (ContentType != other.ContentType) return false;
                  if (Content != other.Content) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (ContentType != 0) hash ^= ContentType.GetHashCode();
                  if (Content.Length != 0) hash ^= Content.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (ContentType != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(ContentType);
                  }
                  if (Content.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Content);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (ContentType != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(ContentType);
                  }
                  if (Content.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Content);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (ContentType != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
                  }
                  if (Content.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ReferenceMessage other) {
                  if (other == null) {
                    return;
                  }
                  if (other.ContentType != 0) {
                    ContentType = other.ContentType;
                  }
                  if (other.Content.Length != 0) {
                    Content = other.Content;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        ContentType = input.ReadInt32();
                        break;
                      }
                      case 18: {
                        Content = input.ReadBytes();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        ContentType = input.ReadInt32();
                        break;
                      }
                      case 18: {
                        Content = input.ReadBytes();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          public sealed partial class ForwardMessageContent : pb::IMessage<ForwardMessageContent>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ForwardMessageContent> _parser = new pb::MessageParser<ForwardMessageContent>(() => new ForwardMessageContent());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ForwardMessageContent> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[11]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ForwardMessageContent() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ForwardMessageContent(ForwardMessageContent other) : this() {
              message_ = other.message_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ForwardMessageContent Clone() {
              return new ForwardMessageContent(this);
            }

            /// <summary>Field number for the "message" field.</summary>
            public const int MessageFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.ImMessage.Types.Message> _repeated_message_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.ImMessage.Types.Message.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> message_ = new pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.ImMessage.Types.Message> Message {
              get { return message_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ForwardMessageContent);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ForwardMessageContent other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!message_.Equals(other.message_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= message_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              message_.WriteTo(output, _repeated_message_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              message_.WriteTo(ref output, _repeated_message_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += message_.CalculateSize(_repeated_message_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ForwardMessageContent other) {
              if (other == null) {
                return;
              }
              message_.Add(other.message_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    message_.AddEntriesFrom(input, _repeated_message_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    message_.AddEntriesFrom(ref input, _repeated_message_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class NoticePlaceholderMeta : pb::IMessage<NoticePlaceholderMeta>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<NoticePlaceholderMeta> _parser = new pb::MessageParser<NoticePlaceholderMeta>(() => new NoticePlaceholderMeta());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<NoticePlaceholderMeta> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[12]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NoticePlaceholderMeta() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NoticePlaceholderMeta(NoticePlaceholderMeta other) : this() {
              targetId_ = other.targetId_;
              startIndex_ = other.startIndex_;
              length_ = other.length_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NoticePlaceholderMeta Clone() {
              return new NoticePlaceholderMeta(this);
            }

            /// <summary>Field number for the "targetId" field.</summary>
            public const int TargetIdFieldNumber = 1;
            private string targetId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TargetId {
              get { return targetId_; }
              set {
                targetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "startIndex" field.</summary>
            public const int StartIndexFieldNumber = 2;
            private int startIndex_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int StartIndex {
              get { return startIndex_; }
              set {
                startIndex_ = value;
              }
            }

            /// <summary>Field number for the "length" field.</summary>
            public const int LengthFieldNumber = 3;
            private int length_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Length {
              get { return length_; }
              set {
                length_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as NoticePlaceholderMeta);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(NoticePlaceholderMeta other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (TargetId != other.TargetId) return false;
              if (StartIndex != other.StartIndex) return false;
              if (Length != other.Length) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (TargetId.Length != 0) hash ^= TargetId.GetHashCode();
              if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
              if (Length != 0) hash ^= Length.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (TargetId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(TargetId);
              }
              if (StartIndex != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(StartIndex);
              }
              if (Length != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Length);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (TargetId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(TargetId);
              }
              if (StartIndex != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(StartIndex);
              }
              if (Length != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Length);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (TargetId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetId);
              }
              if (StartIndex != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
              }
              if (Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(NoticePlaceholderMeta other) {
              if (other == null) {
                return;
              }
              if (other.TargetId.Length != 0) {
                TargetId = other.TargetId;
              }
              if (other.StartIndex != 0) {
                StartIndex = other.StartIndex;
              }
              if (other.Length != 0) {
                Length = other.Length;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    TargetId = input.ReadString();
                    break;
                  }
                  case 16: {
                    StartIndex = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Length = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    TargetId = input.ReadString();
                    break;
                  }
                  case 16: {
                    StartIndex = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Length = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ImcNoticeMessage : pb::IMessage<ImcNoticeMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ImcNoticeMessage> _parser = new pb::MessageParser<ImcNoticeMessage>(() => new ImcNoticeMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcNoticeMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[13]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcNoticeMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcNoticeMessage(ImcNoticeMessage other) : this() {
              text_ = other.text_;
              noticePlaceholderMeta_ = other.noticePlaceholderMeta_.Clone();
              noticeMetaType_ = other.noticeMetaType_;
              noticeMetaInfo_ = other.noticeMetaInfo_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcNoticeMessage Clone() {
              return new ImcNoticeMessage(this);
            }

            /// <summary>Field number for the "text" field.</summary>
            public const int TextFieldNumber = 1;
            private string text_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Text {
              get { return text_; }
              set {
                text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "noticePlaceholderMeta" field.</summary>
            public const int NoticePlaceholderMetaFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta> _repeated_noticePlaceholderMeta_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta> noticePlaceholderMeta_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta> NoticePlaceholderMeta {
              get { return noticePlaceholderMeta_; }
            }

            /// <summary>Field number for the "noticeMetaType" field.</summary>
            public const int NoticeMetaTypeFieldNumber = 3;
            private int noticeMetaType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int NoticeMetaType {
              get { return noticeMetaType_; }
              set {
                noticeMetaType_ = value;
              }
            }

            /// <summary>Field number for the "noticeMetaInfo" field.</summary>
            public const int NoticeMetaInfoFieldNumber = 4;
            private pb::ByteString noticeMetaInfo_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString NoticeMetaInfo {
              get { return noticeMetaInfo_; }
              set {
                noticeMetaInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcNoticeMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcNoticeMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Text != other.Text) return false;
              if(!noticePlaceholderMeta_.Equals(other.noticePlaceholderMeta_)) return false;
              if (NoticeMetaType != other.NoticeMetaType) return false;
              if (NoticeMetaInfo != other.NoticeMetaInfo) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Text.Length != 0) hash ^= Text.GetHashCode();
              hash ^= noticePlaceholderMeta_.GetHashCode();
              if (NoticeMetaType != 0) hash ^= NoticeMetaType.GetHashCode();
              if (NoticeMetaInfo.Length != 0) hash ^= NoticeMetaInfo.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Text.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Text);
              }
              noticePlaceholderMeta_.WriteTo(output, _repeated_noticePlaceholderMeta_codec);
              if (NoticeMetaType != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(NoticeMetaType);
              }
              if (NoticeMetaInfo.Length != 0) {
                output.WriteRawTag(34);
                output.WriteBytes(NoticeMetaInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Text.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Text);
              }
              noticePlaceholderMeta_.WriteTo(ref output, _repeated_noticePlaceholderMeta_codec);
              if (NoticeMetaType != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(NoticeMetaType);
              }
              if (NoticeMetaInfo.Length != 0) {
                output.WriteRawTag(34);
                output.WriteBytes(NoticeMetaInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Text.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
              }
              size += noticePlaceholderMeta_.CalculateSize(_repeated_noticePlaceholderMeta_codec);
              if (NoticeMetaType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoticeMetaType);
              }
              if (NoticeMetaInfo.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(NoticeMetaInfo);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcNoticeMessage other) {
              if (other == null) {
                return;
              }
              if (other.Text.Length != 0) {
                Text = other.Text;
              }
              noticePlaceholderMeta_.Add(other.noticePlaceholderMeta_);
              if (other.NoticeMetaType != 0) {
                NoticeMetaType = other.NoticeMetaType;
              }
              if (other.NoticeMetaInfo.Length != 0) {
                NoticeMetaInfo = other.NoticeMetaInfo;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Text = input.ReadString();
                    break;
                  }
                  case 18: {
                    noticePlaceholderMeta_.AddEntriesFrom(input, _repeated_noticePlaceholderMeta_codec);
                    break;
                  }
                  case 24: {
                    NoticeMetaType = input.ReadInt32();
                    break;
                  }
                  case 34: {
                    NoticeMetaInfo = input.ReadBytes();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Text = input.ReadString();
                    break;
                  }
                  case 18: {
                    noticePlaceholderMeta_.AddEntriesFrom(ref input, _repeated_noticePlaceholderMeta_codec);
                    break;
                  }
                  case 24: {
                    NoticeMetaType = input.ReadInt32();
                    break;
                  }
                  case 34: {
                    NoticeMetaInfo = input.ReadBytes();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ConfirmInviteIntoGroupNoticeMetaInfo : pb::IMessage<ConfirmInviteIntoGroupNoticeMetaInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ConfirmInviteIntoGroupNoticeMetaInfo> _parser = new pb::MessageParser<ConfirmInviteIntoGroupNoticeMetaInfo>(() => new ConfirmInviteIntoGroupNoticeMetaInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ConfirmInviteIntoGroupNoticeMetaInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[14]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmInviteIntoGroupNoticeMetaInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmInviteIntoGroupNoticeMetaInfo(ConfirmInviteIntoGroupNoticeMetaInfo other) : this() {
              requestId_ = other.requestId_;
              groupId_ = other.groupId_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmInviteIntoGroupNoticeMetaInfo Clone() {
              return new ConfirmInviteIntoGroupNoticeMetaInfo(this);
            }

            /// <summary>Field number for the "requestId" field.</summary>
            public const int RequestIdFieldNumber = 1;
            private long requestId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long RequestId {
              get { return requestId_; }
              set {
                requestId_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ConfirmInviteIntoGroupNoticeMetaInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ConfirmInviteIntoGroupNoticeMetaInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (RequestId != other.RequestId) return false;
              if (GroupId != other.GroupId) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (RequestId != 0L) hash ^= RequestId.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (RequestId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(RequestId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (RequestId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(RequestId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (RequestId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestId);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ConfirmInviteIntoGroupNoticeMetaInfo other) {
              if (other == null) {
                return;
              }
              if (other.RequestId != 0L) {
                RequestId = other.RequestId;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    RequestId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    RequestId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ConfirmJoinIntoGroupNoticeMetaInfo : pb::IMessage<ConfirmJoinIntoGroupNoticeMetaInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ConfirmJoinIntoGroupNoticeMetaInfo> _parser = new pb::MessageParser<ConfirmJoinIntoGroupNoticeMetaInfo>(() => new ConfirmJoinIntoGroupNoticeMetaInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ConfirmJoinIntoGroupNoticeMetaInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[15]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmJoinIntoGroupNoticeMetaInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmJoinIntoGroupNoticeMetaInfo(ConfirmJoinIntoGroupNoticeMetaInfo other) : this() {
              requestId_ = other.requestId_;
              groupId_ = other.groupId_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmJoinIntoGroupNoticeMetaInfo Clone() {
              return new ConfirmJoinIntoGroupNoticeMetaInfo(this);
            }

            /// <summary>Field number for the "requestId" field.</summary>
            public const int RequestIdFieldNumber = 1;
            private long requestId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long RequestId {
              get { return requestId_; }
              set {
                requestId_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ConfirmJoinIntoGroupNoticeMetaInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ConfirmJoinIntoGroupNoticeMetaInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (RequestId != other.RequestId) return false;
              if (GroupId != other.GroupId) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (RequestId != 0L) hash ^= RequestId.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (RequestId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(RequestId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (RequestId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(RequestId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (RequestId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestId);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ConfirmJoinIntoGroupNoticeMetaInfo other) {
              if (other == null) {
                return;
              }
              if (other.RequestId != 0L) {
                RequestId = other.RequestId;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    RequestId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    RequestId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupCreateRequest : pb::IMessage<GroupCreateRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupCreateRequest> _parser = new pb::MessageParser<GroupCreateRequest>(() => new GroupCreateRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupCreateRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[16]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateRequest(GroupCreateRequest other) : this() {
              members_ = other.members_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateRequest Clone() {
              return new GroupCreateRequest(this);
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_members_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Members {
              get { return members_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupCreateRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupCreateRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!members_.Equals(other.members_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= members_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              members_.WriteTo(output, _repeated_members_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              members_.WriteTo(ref output, _repeated_members_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += members_.CalculateSize(_repeated_members_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupCreateRequest other) {
              if (other == null) {
                return;
              }
              members_.Add(other.members_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    members_.AddEntriesFrom(ref input, _repeated_members_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupCreateReponse : pb::IMessage<GroupCreateReponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupCreateReponse> _parser = new pb::MessageParser<GroupCreateReponse>(() => new GroupCreateReponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupCreateReponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[17]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateReponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateReponse(GroupCreateReponse other) : this() {
              groupId_ = other.groupId_;
              groupInfo_ = other.groupInfo_ != null ? other.groupInfo_.Clone() : null;
              members_ = other.members_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateReponse Clone() {
              return new GroupCreateReponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "groupInfo" field.</summary>
            public const int GroupInfoFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo groupInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo GroupInfo {
              get { return groupInfo_; }
              set {
                groupInfo_ = value;
              }
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 3;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> _repeated_members_codec
                = pb::FieldCodec.ForMessage(26, global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> Members {
              get { return members_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupCreateReponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupCreateReponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(GroupInfo, other.GroupInfo)) return false;
              if(!members_.Equals(other.members_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (groupInfo_ != null) hash ^= GroupInfo.GetHashCode();
              hash ^= members_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (groupInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupInfo);
              }
              members_.WriteTo(output, _repeated_members_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (groupInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupInfo);
              }
              members_.WriteTo(ref output, _repeated_members_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (groupInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupInfo);
              }
              size += members_.CalculateSize(_repeated_members_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupCreateReponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.groupInfo_ != null) {
                if (groupInfo_ == null) {
                  GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                }
                GroupInfo.MergeFrom(other.GroupInfo);
              }
              members_.Add(other.members_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (groupInfo_ == null) {
                      GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                    }
                    input.ReadMessage(GroupInfo);
                    break;
                  }
                  case 26: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (groupInfo_ == null) {
                      GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                    }
                    input.ReadMessage(GroupInfo);
                    break;
                  }
                  case 26: {
                    members_.AddEntriesFrom(ref input, _repeated_members_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupDeleteRequest : pb::IMessage<GroupDeleteRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupDeleteRequest> _parser = new pb::MessageParser<GroupDeleteRequest>(() => new GroupDeleteRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupDeleteRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[18]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteRequest(GroupDeleteRequest other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteRequest Clone() {
              return new GroupDeleteRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupDeleteRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupDeleteRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupDeleteRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupDeleteResponse : pb::IMessage<GroupDeleteResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupDeleteResponse> _parser = new pb::MessageParser<GroupDeleteResponse>(() => new GroupDeleteResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupDeleteResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[19]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteResponse(GroupDeleteResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteResponse Clone() {
              return new GroupDeleteResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupDeleteResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupDeleteResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupDeleteResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class GroupInviteRequest : pb::IMessage<GroupInviteRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupInviteRequest> _parser = new pb::MessageParser<GroupInviteRequest>(() => new GroupInviteRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupInviteRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[20]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInviteRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInviteRequest(GroupInviteRequest other) : this() {
              groupId_ = other.groupId_;
              members_ = other.members_.Clone();
              descContent_ = other.descContent_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInviteRequest Clone() {
              return new GroupInviteRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_members_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Members {
              get { return members_; }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 3;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupInviteRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupInviteRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if(!members_.Equals(other.members_)) return false;
              if (DescContent != other.DescContent) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              hash ^= members_.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              members_.WriteTo(output, _repeated_members_codec);
              if (DescContent.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(DescContent);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              members_.WriteTo(ref output, _repeated_members_codec);
              if (DescContent.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(DescContent);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              size += members_.CalculateSize(_repeated_members_codec);
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupInviteRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              members_.Add(other.members_);
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                  case 26: {
                    DescContent = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    members_.AddEntriesFrom(ref input, _repeated_members_codec);
                    break;
                  }
                  case 26: {
                    DescContent = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupInvideResponse : pb::IMessage<GroupInvideResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupInvideResponse> _parser = new pb::MessageParser<GroupInvideResponse>(() => new GroupInvideResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupInvideResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[21]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInvideResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInvideResponse(GroupInvideResponse other) : this() {
              groupId_ = other.groupId_;
              inviteStatus_ = other.inviteStatus_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInvideResponse Clone() {
              return new GroupInvideResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviteStatus" field.</summary>
            public const int InviteStatusFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus inviteStatus_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus InviteStatus {
              get { return inviteStatus_; }
              set {
                inviteStatus_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupInvideResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupInvideResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (InviteStatus != other.InviteStatus) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) hash ^= InviteStatus.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) {
                output.WriteRawTag(16);
                output.WriteEnum((int) InviteStatus);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) {
                output.WriteRawTag(16);
                output.WriteEnum((int) InviteStatus);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InviteStatus);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupInvideResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) {
                InviteStatus = other.InviteStatus;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 16: {
                    InviteStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 16: {
                    InviteStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the GroupInvideResponse message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum InviteStatus {
                [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
                [pbr::OriginalName("SUCC")] Succ = 1,
                [pbr::OriginalName("PENDING")] Pending = 2,
              }

            }
            #endregion

          }

          public sealed partial class GroupJoinRequest : pb::IMessage<GroupJoinRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinRequest> _parser = new pb::MessageParser<GroupJoinRequest>(() => new GroupJoinRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[22]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequest(GroupJoinRequest other) : this() {
              groupId_ = other.groupId_;
              inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
              descContent_ = other.descContent_;
              findType_ = other.findType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequest Clone() {
              return new GroupJoinRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviter" field.</summary>
            public const int InviterFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User inviter_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Inviter {
              get { return inviter_; }
              set {
                inviter_ = value;
              }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 3;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "findType" field.</summary>
            public const int FindTypeFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindType {
              get { return findType_; }
              set {
                findType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Inviter, other.Inviter)) return false;
              if (DescContent != other.DescContent) return false;
              if (FindType != other.FindType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (inviter_ != null) hash ^= Inviter.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(DescContent);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(DescContent);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (inviter_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviter);
              }
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.inviter_ != null) {
                if (inviter_ == null) {
                  Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Inviter.MergeFrom(other.Inviter);
              }
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              if (other.FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindType = other.FindType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 32: {
                    FindType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 32: {
                    FindType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupJoinResponse : pb::IMessage<GroupJoinResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinResponse> _parser = new pb::MessageParser<GroupJoinResponse>(() => new GroupJoinResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[23]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinResponse(GroupJoinResponse other) : this() {
              joinStatus_ = other.joinStatus_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinResponse Clone() {
              return new GroupJoinResponse(this);
            }

            /// <summary>Field number for the "joinStatus" field.</summary>
            public const int JoinStatusFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus joinStatus_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus JoinStatus {
              get { return joinStatus_; }
              set {
                joinStatus_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (JoinStatus != other.JoinStatus) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) hash ^= JoinStatus.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) {
                output.WriteRawTag(8);
                output.WriteEnum((int) JoinStatus);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) {
                output.WriteRawTag(8);
                output.WriteEnum((int) JoinStatus);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JoinStatus);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinResponse other) {
              if (other == null) {
                return;
              }
              if (other.JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) {
                JoinStatus = other.JoinStatus;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    JoinStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    JoinStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the GroupJoinResponse message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum JoinStatus {
                [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
                [pbr::OriginalName("SUCC")] Succ = 1,
                [pbr::OriginalName("PENDING")] Pending = 2,
              }

            }
            #endregion

          }

          public sealed partial class GroupJoinRequestAckRequest : pb::IMessage<GroupJoinRequestAckRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinRequestAckRequest> _parser = new pb::MessageParser<GroupJoinRequestAckRequest>(() => new GroupJoinRequestAckRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestAckRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[24]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckRequest(GroupJoinRequestAckRequest other) : this() {
              reqId_ = other.reqId_;
              groupId_ = other.groupId_;
              groupJoinAckType_ = other.groupJoinAckType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckRequest Clone() {
              return new GroupJoinRequestAckRequest(this);
            }

            /// <summary>Field number for the "reqId" field.</summary>
            public const int ReqIdFieldNumber = 1;
            private long reqId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReqId {
              get { return reqId_; }
              set {
                reqId_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "groupJoinAckType" field.</summary>
            public const int GroupJoinAckTypeFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType groupJoinAckType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType GroupJoinAckType {
              get { return groupJoinAckType_; }
              set {
                groupJoinAckType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestAckRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestAckRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ReqId != other.ReqId) return false;
              if (GroupId != other.GroupId) return false;
              if (GroupJoinAckType != other.GroupJoinAckType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ReqId != 0L) hash ^= ReqId.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) hash ^= GroupJoinAckType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ReqId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) {
                output.WriteRawTag(24);
                output.WriteEnum((int) GroupJoinAckType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ReqId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) {
                output.WriteRawTag(24);
                output.WriteEnum((int) GroupJoinAckType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ReqId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReqId);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupJoinAckType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestAckRequest other) {
              if (other == null) {
                return;
              }
              if (other.ReqId != 0L) {
                ReqId = other.ReqId;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) {
                GroupJoinAckType = other.GroupJoinAckType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ReqId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    GroupJoinAckType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    ReqId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    GroupJoinAckType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the GroupJoinRequestAckRequest message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum GroupJoinAckType {
                [pbr::OriginalName("UNKNOWN_TYPE")] UnknownType = 0,
                [pbr::OriginalName("AGREE")] Agree = 1,
                [pbr::OriginalName("REFUSE")] Refuse = 2,
                [pbr::OriginalName("IGNORE")] Ignore = 3,
              }

            }
            #endregion

          }

          public sealed partial class GroupJoinRequestAckResponse : pb::IMessage<GroupJoinRequestAckResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinRequestAckResponse> _parser = new pb::MessageParser<GroupJoinRequestAckResponse>(() => new GroupJoinRequestAckResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestAckResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[25]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckResponse(GroupJoinRequestAckResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckResponse Clone() {
              return new GroupJoinRequestAckResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestAckResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestAckResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestAckResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class GroupJoinRequestGetRequest : pb::IMessage<GroupJoinRequestGetRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinRequestGetRequest> _parser = new pb::MessageParser<GroupJoinRequestGetRequest>(() => new GroupJoinRequestGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[26]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetRequest(GroupJoinRequestGetRequest other) : this() {
              reqSeq_ = other.reqSeq_;
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetRequest Clone() {
              return new GroupJoinRequestGetRequest(this);
            }

            /// <summary>Field number for the "reqSeq" field.</summary>
            public const int ReqSeqFieldNumber = 1;
            private long reqSeq_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReqSeq {
              get { return reqSeq_; }
              set {
                reqSeq_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ReqSeq != other.ReqSeq) return false;
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ReqSeq != 0L) hash ^= ReqSeq.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ReqSeq != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqSeq);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ReqSeq != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqSeq);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ReqSeq != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReqSeq);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.ReqSeq != 0L) {
                ReqSeq = other.ReqSeq;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ReqSeq = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    ReqSeq = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupJoinRequestGetResponse : pb::IMessage<GroupJoinRequestGetResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinRequestGetResponse> _parser = new pb::MessageParser<GroupJoinRequestGetResponse>(() => new GroupJoinRequestGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[27]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetResponse(GroupJoinRequestGetResponse other) : this() {
              groupId_ = other.groupId_;
              inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
              invitees_ = other.invitees_.Clone();
              findWay_ = other.findWay_;
              descContent_ = other.descContent_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetResponse Clone() {
              return new GroupJoinRequestGetResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviter" field.</summary>
            public const int InviterFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User inviter_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Inviter {
              get { return inviter_; }
              set {
                inviter_ = value;
              }
            }

            /// <summary>Field number for the "invitees" field.</summary>
            public const int InviteesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_invitees_codec
                = pb::FieldCodec.ForMessage(26, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> invitees_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Invitees {
              get { return invitees_; }
            }

            /// <summary>Field number for the "findWay" field.</summary>
            public const int FindWayFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findWay_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindWay {
              get { return findWay_; }
              set {
                findWay_ = value;
              }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 5;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 6;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Inviter, other.Inviter)) return false;
              if(!invitees_.Equals(other.invitees_)) return false;
              if (FindWay != other.FindWay) return false;
              if (DescContent != other.DescContent) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (inviter_ != null) hash ^= Inviter.GetHashCode();
              hash ^= invitees_.GetHashCode();
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindWay.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              invitees_.WriteTo(output, _repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindWay);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              invitees_.WriteTo(ref output, _repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindWay);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (inviter_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviter);
              }
              size += invitees_.CalculateSize(_repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindWay);
              }
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestGetResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.inviter_ != null) {
                if (inviter_ == null) {
                  Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Inviter.MergeFrom(other.Inviter);
              }
              invitees_.Add(other.invitees_);
              if (other.FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindWay = other.FindWay;
              }
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    invitees_.AddEntriesFrom(input, _repeated_invitees_codec);
                    break;
                  }
                  case 32: {
                    FindWay = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 48: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    invitees_.AddEntriesFrom(ref input, _repeated_invitees_codec);
                    break;
                  }
                  case 32: {
                    FindWay = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 48: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupJoinRequestCancelRequest : pb::IMessage<GroupJoinRequestCancelRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinRequestCancelRequest> _parser = new pb::MessageParser<GroupJoinRequestCancelRequest>(() => new GroupJoinRequestCancelRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestCancelRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[28]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelRequest(GroupJoinRequestCancelRequest other) : this() {
              reqSeq_ = other.reqSeq_;
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelRequest Clone() {
              return new GroupJoinRequestCancelRequest(this);
            }

            /// <summary>Field number for the "reqSeq" field.</summary>
            public const int ReqSeqFieldNumber = 1;
            private long reqSeq_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReqSeq {
              get { return reqSeq_; }
              set {
                reqSeq_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestCancelRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestCancelRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ReqSeq != other.ReqSeq) return false;
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ReqSeq != 0L) hash ^= ReqSeq.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ReqSeq != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqSeq);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ReqSeq != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqSeq);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ReqSeq != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReqSeq);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestCancelRequest other) {
              if (other == null) {
                return;
              }
              if (other.ReqSeq != 0L) {
                ReqSeq = other.ReqSeq;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ReqSeq = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    ReqSeq = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupJoinRequestCancelResposne : pb::IMessage<GroupJoinRequestCancelResposne>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupJoinRequestCancelResposne> _parser = new pb::MessageParser<GroupJoinRequestCancelResposne>(() => new GroupJoinRequestCancelResposne());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestCancelResposne> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[29]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelResposne() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelResposne(GroupJoinRequestCancelResposne other) : this() {
              groupId_ = other.groupId_;
              inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
              invitees_ = other.invitees_.Clone();
              findWay_ = other.findWay_;
              descContent_ = other.descContent_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelResposne Clone() {
              return new GroupJoinRequestCancelResposne(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviter" field.</summary>
            public const int InviterFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User inviter_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Inviter {
              get { return inviter_; }
              set {
                inviter_ = value;
              }
            }

            /// <summary>Field number for the "invitees" field.</summary>
            public const int InviteesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_invitees_codec
                = pb::FieldCodec.ForMessage(26, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> invitees_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Invitees {
              get { return invitees_; }
            }

            /// <summary>Field number for the "findWay" field.</summary>
            public const int FindWayFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findWay_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindWay {
              get { return findWay_; }
              set {
                findWay_ = value;
              }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 5;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 6;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestCancelResposne);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestCancelResposne other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Inviter, other.Inviter)) return false;
              if(!invitees_.Equals(other.invitees_)) return false;
              if (FindWay != other.FindWay) return false;
              if (DescContent != other.DescContent) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (inviter_ != null) hash ^= Inviter.GetHashCode();
              hash ^= invitees_.GetHashCode();
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindWay.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              invitees_.WriteTo(output, _repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindWay);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              invitees_.WriteTo(ref output, _repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindWay);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (inviter_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviter);
              }
              size += invitees_.CalculateSize(_repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindWay);
              }
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestCancelResposne other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.inviter_ != null) {
                if (inviter_ == null) {
                  Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Inviter.MergeFrom(other.Inviter);
              }
              invitees_.Add(other.invitees_);
              if (other.FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindWay = other.FindWay;
              }
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    invitees_.AddEntriesFrom(input, _repeated_invitees_codec);
                    break;
                  }
                  case 32: {
                    FindWay = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 48: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    invitees_.AddEntriesFrom(ref input, _repeated_invitees_codec);
                    break;
                  }
                  case 32: {
                    FindWay = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 48: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupQuitRequest : pb::IMessage<GroupQuitRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupQuitRequest> _parser = new pb::MessageParser<GroupQuitRequest>(() => new GroupQuitRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupQuitRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[30]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitRequest(GroupQuitRequest other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitRequest Clone() {
              return new GroupQuitRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupQuitRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupQuitRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupQuitRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupQuitResponse : pb::IMessage<GroupQuitResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupQuitResponse> _parser = new pb::MessageParser<GroupQuitResponse>(() => new GroupQuitResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupQuitResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[31]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitResponse(GroupQuitResponse other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitResponse Clone() {
              return new GroupQuitResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupQuitResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupQuitResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupQuitResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupKickRequest : pb::IMessage<GroupKickRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupKickRequest> _parser = new pb::MessageParser<GroupKickRequest>(() => new GroupKickRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupKickRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[32]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickRequest(GroupKickRequest other) : this() {
              groupId_ = other.groupId_;
              target_ = other.target_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickRequest Clone() {
              return new GroupKickRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "target" field.</summary>
            public const int TargetFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_target_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> target_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Target {
              get { return target_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupKickRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupKickRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if(!target_.Equals(other.target_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              hash ^= target_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              target_.WriteTo(output, _repeated_target_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              target_.WriteTo(ref output, _repeated_target_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              size += target_.CalculateSize(_repeated_target_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupKickRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              target_.Add(other.target_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    target_.AddEntriesFrom(input, _repeated_target_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    target_.AddEntriesFrom(ref input, _repeated_target_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupKickResponse : pb::IMessage<GroupKickResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupKickResponse> _parser = new pb::MessageParser<GroupKickResponse>(() => new GroupKickResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupKickResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[33]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickResponse(GroupKickResponse other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickResponse Clone() {
              return new GroupKickResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupKickResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupKickResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupKickResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupSettingRequest : pb::IMessage<GroupSettingRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupSettingRequest> _parser = new pb::MessageParser<GroupSettingRequest>(() => new GroupSettingRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[34]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRequest(GroupSettingRequest other) : this() {
              groupId_ = other.groupId_;
              switch (other.GroupSettingCase) {
                case GroupSettingOneofCase.Rename:
                  Rename = other.Rename.Clone();
                  break;
                case GroupSettingOneofCase.Desc:
                  Desc = other.Desc.Clone();
                  break;
                case GroupSettingOneofCase.JoinNeedPermission:
                  JoinNeedPermission = other.JoinNeedPermission.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRequest Clone() {
              return new GroupSettingRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "rename" field.</summary>
            public const int RenameFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename Rename {
              get { return groupSettingCase_ == GroupSettingOneofCase.Rename ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename) groupSetting_ : null; }
              set {
                groupSetting_ = value;
                groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.Rename;
              }
            }

            /// <summary>Field number for the "desc" field.</summary>
            public const int DescFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc Desc {
              get { return groupSettingCase_ == GroupSettingOneofCase.Desc ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc) groupSetting_ : null; }
              set {
                groupSetting_ = value;
                groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.Desc;
              }
            }

            /// <summary>Field number for the "joinNeedPermission" field.</summary>
            public const int JoinNeedPermissionFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission JoinNeedPermission {
              get { return groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission) groupSetting_ : null; }
              set {
                groupSetting_ = value;
                groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.JoinNeedPermission;
              }
            }

            private object groupSetting_;
            /// <summary>Enum of possible cases for the "GroupSetting" oneof.</summary>
            public enum GroupSettingOneofCase {
              None = 0,
              Rename = 2,
              Desc = 3,
              JoinNeedPermission = 4,
            }
            private GroupSettingOneofCase groupSettingCase_ = GroupSettingOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingOneofCase GroupSettingCase {
              get { return groupSettingCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearGroupSetting() {
              groupSettingCase_ = GroupSettingOneofCase.None;
              groupSetting_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Rename, other.Rename)) return false;
              if (!object.Equals(Desc, other.Desc)) return false;
              if (!object.Equals(JoinNeedPermission, other.JoinNeedPermission)) return false;
              if (GroupSettingCase != other.GroupSettingCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (groupSettingCase_ == GroupSettingOneofCase.Rename) hash ^= Rename.GetHashCode();
              if (groupSettingCase_ == GroupSettingOneofCase.Desc) hash ^= Desc.GetHashCode();
              if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) hash ^= JoinNeedPermission.GetHashCode();
              hash ^= (int) groupSettingCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                output.WriteRawTag(18);
                output.WriteMessage(Rename);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                output.WriteRawTag(26);
                output.WriteMessage(Desc);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                output.WriteRawTag(34);
                output.WriteMessage(JoinNeedPermission);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                output.WriteRawTag(18);
                output.WriteMessage(Rename);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                output.WriteRawTag(26);
                output.WriteMessage(Desc);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                output.WriteRawTag(34);
                output.WriteMessage(JoinNeedPermission);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rename);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Desc);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinNeedPermission);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              switch (other.GroupSettingCase) {
                case GroupSettingOneofCase.Rename:
                  if (Rename == null) {
                    Rename = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename();
                  }
                  Rename.MergeFrom(other.Rename);
                  break;
                case GroupSettingOneofCase.Desc:
                  if (Desc == null) {
                    Desc = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc();
                  }
                  Desc.MergeFrom(other.Desc);
                  break;
                case GroupSettingOneofCase.JoinNeedPermission:
                  if (JoinNeedPermission == null) {
                    JoinNeedPermission = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission();
                  }
                  JoinNeedPermission.MergeFrom(other.JoinNeedPermission);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename();
                    if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                      subBuilder.MergeFrom(Rename);
                    }
                    input.ReadMessage(subBuilder);
                    Rename = subBuilder;
                    break;
                  }
                  case 26: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc();
                    if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                      subBuilder.MergeFrom(Desc);
                    }
                    input.ReadMessage(subBuilder);
                    Desc = subBuilder;
                    break;
                  }
                  case 34: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission();
                    if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                      subBuilder.MergeFrom(JoinNeedPermission);
                    }
                    input.ReadMessage(subBuilder);
                    JoinNeedPermission = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename();
                    if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                      subBuilder.MergeFrom(Rename);
                    }
                    input.ReadMessage(subBuilder);
                    Rename = subBuilder;
                    break;
                  }
                  case 26: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc();
                    if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                      subBuilder.MergeFrom(Desc);
                    }
                    input.ReadMessage(subBuilder);
                    Desc = subBuilder;
                    break;
                  }
                  case 34: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission();
                    if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                      subBuilder.MergeFrom(JoinNeedPermission);
                    }
                    input.ReadMessage(subBuilder);
                    JoinNeedPermission = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupSettingRename : pb::IMessage<GroupSettingRename>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupSettingRename> _parser = new pb::MessageParser<GroupSettingRename>(() => new GroupSettingRename());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingRename> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[35]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRename() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRename(GroupSettingRename other) : this() {
              groupName_ = other.groupName_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRename Clone() {
              return new GroupSettingRename(this);
            }

            /// <summary>Field number for the "groupName" field.</summary>
            public const int GroupNameFieldNumber = 1;
            private string groupName_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupName {
              get { return groupName_; }
              set {
                groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingRename);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingRename other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupName != other.GroupName) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupName.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupName);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupName.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupName);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingRename other) {
              if (other == null) {
                return;
              }
              if (other.GroupName.Length != 0) {
                GroupName = other.GroupName;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupName = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupName = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupSettingDesc : pb::IMessage<GroupSettingDesc>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupSettingDesc> _parser = new pb::MessageParser<GroupSettingDesc>(() => new GroupSettingDesc());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingDesc> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[36]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingDesc() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingDesc(GroupSettingDesc other) : this() {
              desc_ = other.desc_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingDesc Clone() {
              return new GroupSettingDesc(this);
            }

            /// <summary>Field number for the "desc" field.</summary>
            public const int DescFieldNumber = 1;
            private string desc_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Desc {
              get { return desc_; }
              set {
                desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingDesc);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingDesc other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Desc != other.Desc) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Desc.Length != 0) hash ^= Desc.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Desc.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Desc);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Desc.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Desc);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Desc.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingDesc other) {
              if (other == null) {
                return;
              }
              if (other.Desc.Length != 0) {
                Desc = other.Desc;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Desc = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Desc = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupSettingJoinNeedPermission : pb::IMessage<GroupSettingJoinNeedPermission>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupSettingJoinNeedPermission> _parser = new pb::MessageParser<GroupSettingJoinNeedPermission>(() => new GroupSettingJoinNeedPermission());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingJoinNeedPermission> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[37]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingJoinNeedPermission() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingJoinNeedPermission(GroupSettingJoinNeedPermission other) : this() {
              joinNeedPermission_ = other.joinNeedPermission_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingJoinNeedPermission Clone() {
              return new GroupSettingJoinNeedPermission(this);
            }

            /// <summary>Field number for the "joinNeedPermission" field.</summary>
            public const int JoinNeedPermissionFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType joinNeedPermission_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType JoinNeedPermission {
              get { return joinNeedPermission_; }
              set {
                joinNeedPermission_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingJoinNeedPermission);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingJoinNeedPermission other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (JoinNeedPermission != other.JoinNeedPermission) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) hash ^= JoinNeedPermission.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                output.WriteRawTag(8);
                output.WriteEnum((int) JoinNeedPermission);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                output.WriteRawTag(8);
                output.WriteEnum((int) JoinNeedPermission);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JoinNeedPermission);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingJoinNeedPermission other) {
              if (other == null) {
                return;
              }
              if (other.JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                JoinNeedPermission = other.JoinNeedPermission;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupSettingResponse : pb::IMessage<GroupSettingResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupSettingResponse> _parser = new pb::MessageParser<GroupSettingResponse>(() => new GroupSettingResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[38]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingResponse(GroupSettingResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingResponse Clone() {
              return new GroupSettingResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMemberSettingRequest : pb::IMessage<GroupMemberSettingRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMemberSettingRequest> _parser = new pb::MessageParser<GroupMemberSettingRequest>(() => new GroupMemberSettingRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberSettingRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[39]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingRequest(GroupMemberSettingRequest other) : this() {
              groupId_ = other.groupId_;
              switch (other.UserSettingCase) {
                case UserSettingOneofCase.SetNickname:
                  SetNickname = other.SetNickname.Clone();
                  break;
                case UserSettingOneofCase.SetAntiDisturbing:
                  SetAntiDisturbing = other.SetAntiDisturbing.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingRequest Clone() {
              return new GroupMemberSettingRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "setNickname" field.</summary>
            public const int SetNicknameFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname SetNickname {
              get { return userSettingCase_ == UserSettingOneofCase.SetNickname ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname) userSetting_ : null; }
              set {
                userSetting_ = value;
                userSettingCase_ = value == null ? UserSettingOneofCase.None : UserSettingOneofCase.SetNickname;
              }
            }

            /// <summary>Field number for the "setAntiDisturbing" field.</summary>
            public const int SetAntiDisturbingFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing SetAntiDisturbing {
              get { return userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing) userSetting_ : null; }
              set {
                userSetting_ = value;
                userSettingCase_ = value == null ? UserSettingOneofCase.None : UserSettingOneofCase.SetAntiDisturbing;
              }
            }

            private object userSetting_;
            /// <summary>Enum of possible cases for the "UserSetting" oneof.</summary>
            public enum UserSettingOneofCase {
              None = 0,
              SetNickname = 2,
              SetAntiDisturbing = 3,
            }
            private UserSettingOneofCase userSettingCase_ = UserSettingOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserSettingOneofCase UserSettingCase {
              get { return userSettingCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearUserSetting() {
              userSettingCase_ = UserSettingOneofCase.None;
              userSetting_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberSettingRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberSettingRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(SetNickname, other.SetNickname)) return false;
              if (!object.Equals(SetAntiDisturbing, other.SetAntiDisturbing)) return false;
              if (UserSettingCase != other.UserSettingCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (userSettingCase_ == UserSettingOneofCase.SetNickname) hash ^= SetNickname.GetHashCode();
              if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) hash ^= SetAntiDisturbing.GetHashCode();
              hash ^= (int) userSettingCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                output.WriteRawTag(18);
                output.WriteMessage(SetNickname);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                output.WriteRawTag(26);
                output.WriteMessage(SetAntiDisturbing);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                output.WriteRawTag(18);
                output.WriteMessage(SetNickname);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                output.WriteRawTag(26);
                output.WriteMessage(SetAntiDisturbing);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetNickname);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetAntiDisturbing);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberSettingRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              switch (other.UserSettingCase) {
                case UserSettingOneofCase.SetNickname:
                  if (SetNickname == null) {
                    SetNickname = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname();
                  }
                  SetNickname.MergeFrom(other.SetNickname);
                  break;
                case UserSettingOneofCase.SetAntiDisturbing:
                  if (SetAntiDisturbing == null) {
                    SetAntiDisturbing = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing();
                  }
                  SetAntiDisturbing.MergeFrom(other.SetAntiDisturbing);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname();
                    if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                      subBuilder.MergeFrom(SetNickname);
                    }
                    input.ReadMessage(subBuilder);
                    SetNickname = subBuilder;
                    break;
                  }
                  case 26: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing();
                    if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                      subBuilder.MergeFrom(SetAntiDisturbing);
                    }
                    input.ReadMessage(subBuilder);
                    SetAntiDisturbing = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname();
                    if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                      subBuilder.MergeFrom(SetNickname);
                    }
                    input.ReadMessage(subBuilder);
                    SetNickname = subBuilder;
                    break;
                  }
                  case 26: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing();
                    if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                      subBuilder.MergeFrom(SetAntiDisturbing);
                    }
                    input.ReadMessage(subBuilder);
                    SetAntiDisturbing = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class SetUserNickname : pb::IMessage<SetUserNickname>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SetUserNickname> _parser = new pb::MessageParser<SetUserNickname>(() => new SetUserNickname());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SetUserNickname> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[40]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserNickname() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserNickname(SetUserNickname other) : this() {
              nickname_ = other.nickname_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserNickname Clone() {
              return new SetUserNickname(this);
            }

            /// <summary>Field number for the "nickname" field.</summary>
            public const int NicknameFieldNumber = 1;
            private string nickname_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Nickname {
              get { return nickname_; }
              set {
                nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SetUserNickname);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SetUserNickname other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Nickname != other.Nickname) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Nickname.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Nickname);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Nickname.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Nickname);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Nickname.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SetUserNickname other) {
              if (other == null) {
                return;
              }
              if (other.Nickname.Length != 0) {
                Nickname = other.Nickname;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Nickname = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Nickname = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class SetUserAntiDisturbing : pb::IMessage<SetUserAntiDisturbing>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SetUserAntiDisturbing> _parser = new pb::MessageParser<SetUserAntiDisturbing>(() => new SetUserAntiDisturbing());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SetUserAntiDisturbing> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[41]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserAntiDisturbing() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserAntiDisturbing(SetUserAntiDisturbing other) : this() {
              antiDisturbing_ = other.antiDisturbing_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserAntiDisturbing Clone() {
              return new SetUserAntiDisturbing(this);
            }

            /// <summary>Field number for the "antiDisturbing" field.</summary>
            public const int AntiDisturbingFieldNumber = 1;
            private bool antiDisturbing_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool AntiDisturbing {
              get { return antiDisturbing_; }
              set {
                antiDisturbing_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SetUserAntiDisturbing);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SetUserAntiDisturbing other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (AntiDisturbing != other.AntiDisturbing) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (AntiDisturbing != false) hash ^= AntiDisturbing.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (AntiDisturbing != false) {
                output.WriteRawTag(8);
                output.WriteBool(AntiDisturbing);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (AntiDisturbing != false) {
                output.WriteRawTag(8);
                output.WriteBool(AntiDisturbing);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (AntiDisturbing != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SetUserAntiDisturbing other) {
              if (other == null) {
                return;
              }
              if (other.AntiDisturbing != false) {
                AntiDisturbing = other.AntiDisturbing;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    AntiDisturbing = input.ReadBool();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    AntiDisturbing = input.ReadBool();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMemberSettingResponse : pb::IMessage<GroupMemberSettingResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMemberSettingResponse> _parser = new pb::MessageParser<GroupMemberSettingResponse>(() => new GroupMemberSettingResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberSettingResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[42]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingResponse(GroupMemberSettingResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingResponse Clone() {
              return new GroupMemberSettingResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberSettingResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberSettingResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberSettingResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMemberListGetRequest : pb::IMessage<GroupMemberListGetRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMemberListGetRequest> _parser = new pb::MessageParser<GroupMemberListGetRequest>(() => new GroupMemberListGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberListGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[43]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetRequest(GroupMemberListGetRequest other) : this() {
              groupId_ = other.groupId_;
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetRequest Clone() {
              return new GroupMemberListGetRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberListGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberListGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberListGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMemberListGetResponse : pb::IMessage<GroupMemberListGetResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMemberListGetResponse> _parser = new pb::MessageParser<GroupMemberListGetResponse>(() => new GroupMemberListGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberListGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[44]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetResponse(GroupMemberListGetResponse other) : this() {
              members_ = other.members_.Clone();
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetResponse Clone() {
              return new GroupMemberListGetResponse(this);
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> _repeated_members_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> Members {
              get { return members_; }
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberListGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberListGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!members_.Equals(other.members_)) return false;
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= members_.GetHashCode();
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              members_.WriteTo(output, _repeated_members_codec);
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              members_.WriteTo(ref output, _repeated_members_codec);
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += members_.CalculateSize(_repeated_members_codec);
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberListGetResponse other) {
              if (other == null) {
                return;
              }
              members_.Add(other.members_);
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    members_.AddEntriesFrom(ref input, _repeated_members_codec);
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMemberGetRequest : pb::IMessage<GroupMemberGetRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMemberGetRequest> _parser = new pb::MessageParser<GroupMemberGetRequest>(() => new GroupMemberGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[45]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetRequest(GroupMemberGetRequest other) : this() {
              groupId_ = other.groupId_;
              user_ = other.user_ != null ? other.user_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetRequest Clone() {
              return new GroupMemberGetRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(User, other.User)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (user_ != null) hash ^= User.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (user_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(User);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (user_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(User);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMemberGetResponse : pb::IMessage<GroupMemberGetResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMemberGetResponse> _parser = new pb::MessageParser<GroupMemberGetResponse>(() => new GroupMemberGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[46]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetResponse(GroupMemberGetResponse other) : this() {
              member_ = other.member_ != null ? other.member_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetResponse Clone() {
              return new GroupMemberGetResponse(this);
            }

            /// <summary>Field number for the "member" field.</summary>
            public const int MemberFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember member_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember Member {
              get { return member_; }
              set {
                member_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Member, other.Member)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (member_ != null) hash ^= Member.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (member_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Member);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (member_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Member);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (member_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberGetResponse other) {
              if (other == null) {
                return;
              }
              if (other.member_ != null) {
                if (member_ == null) {
                  Member = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                }
                Member.MergeFrom(other.Member);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (member_ == null) {
                      Member = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                    }
                    input.ReadMessage(Member);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (member_ == null) {
                      Member = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                    }
                    input.ReadMessage(Member);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class UserGroupListRequest : pb::IMessage<UserGroupListRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserGroupListRequest> _parser = new pb::MessageParser<UserGroupListRequest>(() => new UserGroupListRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupListRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[47]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListRequest(UserGroupListRequest other) : this() {
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListRequest Clone() {
              return new UserGroupListRequest(this);
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupListRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupListRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupListRequest other) {
              if (other == null) {
                return;
              }
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class UserGroupListResponse : pb::IMessage<UserGroupListResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserGroupListResponse> _parser = new pb::MessageParser<UserGroupListResponse>(() => new UserGroupListResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupListResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[48]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListResponse(UserGroupListResponse other) : this() {
              userGroupInfo_ = other.userGroupInfo_.Clone();
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListResponse Clone() {
              return new UserGroupListResponse(this);
            }

            /// <summary>Field number for the "userGroupInfo" field.</summary>
            public const int UserGroupInfoFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> _repeated_userGroupInfo_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> userGroupInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> UserGroupInfo {
              get { return userGroupInfo_; }
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupListResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupListResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!userGroupInfo_.Equals(other.userGroupInfo_)) return false;
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= userGroupInfo_.GetHashCode();
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              userGroupInfo_.WriteTo(output, _repeated_userGroupInfo_codec);
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              userGroupInfo_.WriteTo(ref output, _repeated_userGroupInfo_codec);
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += userGroupInfo_.CalculateSize(_repeated_userGroupInfo_codec);
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupListResponse other) {
              if (other == null) {
                return;
              }
              userGroupInfo_.Add(other.userGroupInfo_);
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    userGroupInfo_.AddEntriesFrom(input, _repeated_userGroupInfo_codec);
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    userGroupInfo_.AddEntriesFrom(ref input, _repeated_userGroupInfo_codec);
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class UserGroupRecord : pb::IMessage<UserGroupRecord>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserGroupRecord> _parser = new pb::MessageParser<UserGroupRecord>(() => new UserGroupRecord());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupRecord> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[49]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupRecord() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupRecord(UserGroupRecord other) : this() {
              groupId_ = other.groupId_;
              updateTime_ = other.updateTime_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupRecord Clone() {
              return new UserGroupRecord(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "updateTime" field.</summary>
            public const int UpdateTimeFieldNumber = 2;
            private long updateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long UpdateTime {
              get { return updateTime_; }
              set {
                updateTime_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupRecord);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupRecord other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (UpdateTime != other.UpdateTime) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(UpdateTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(UpdateTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (UpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupRecord other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.UpdateTime != 0L) {
                UpdateTime = other.UpdateTime;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 16: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 16: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class UserGroupGetRequest : pb::IMessage<UserGroupGetRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserGroupGetRequest> _parser = new pb::MessageParser<UserGroupGetRequest>(() => new UserGroupGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[50]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetRequest(UserGroupGetRequest other) : this() {
              groupId_ = other.groupId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetRequest Clone() {
              return new UserGroupGetRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_groupId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> groupId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> GroupId {
              get { return groupId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!groupId_.Equals(other.groupId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= groupId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              groupId_.WriteTo(output, _repeated_groupId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              groupId_.WriteTo(ref output, _repeated_groupId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += groupId_.CalculateSize(_repeated_groupId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupGetRequest other) {
              if (other == null) {
                return;
              }
              groupId_.Add(other.groupId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    groupId_.AddEntriesFrom(input, _repeated_groupId_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    groupId_.AddEntriesFrom(ref input, _repeated_groupId_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class UserGroupGetResponse : pb::IMessage<UserGroupGetResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserGroupGetResponse> _parser = new pb::MessageParser<UserGroupGetResponse>(() => new UserGroupGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[51]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetResponse(UserGroupGetResponse other) : this() {
              userGroupInfo_ = other.userGroupInfo_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetResponse Clone() {
              return new UserGroupGetResponse(this);
            }

            /// <summary>Field number for the "userGroupInfo" field.</summary>
            public const int UserGroupInfoFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> _repeated_userGroupInfo_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> userGroupInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> UserGroupInfo {
              get { return userGroupInfo_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!userGroupInfo_.Equals(other.userGroupInfo_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= userGroupInfo_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              userGroupInfo_.WriteTo(output, _repeated_userGroupInfo_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              userGroupInfo_.WriteTo(ref output, _repeated_userGroupInfo_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += userGroupInfo_.CalculateSize(_repeated_userGroupInfo_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupGetResponse other) {
              if (other == null) {
                return;
              }
              userGroupInfo_.Add(other.userGroupInfo_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    userGroupInfo_.AddEntriesFrom(input, _repeated_userGroupInfo_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    userGroupInfo_.AddEntriesFrom(ref input, _repeated_userGroupInfo_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class UserGroupInfo : pb::IMessage<UserGroupInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<UserGroupInfo> _parser = new pb::MessageParser<UserGroupInfo>(() => new UserGroupInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[52]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupInfo(UserGroupInfo other) : this() {
              groupInfo_ = other.groupInfo_ != null ? other.groupInfo_.Clone() : null;
              groupMember_ = other.groupMember_ != null ? other.groupMember_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupInfo Clone() {
              return new UserGroupInfo(this);
            }

            /// <summary>Field number for the "groupInfo" field.</summary>
            public const int GroupInfoFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo groupInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo GroupInfo {
              get { return groupInfo_; }
              set {
                groupInfo_ = value;
              }
            }

            /// <summary>Field number for the "groupMember" field.</summary>
            public const int GroupMemberFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember groupMember_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember GroupMember {
              get { return groupMember_; }
              set {
                groupMember_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(GroupInfo, other.GroupInfo)) return false;
              if (!object.Equals(GroupMember, other.GroupMember)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (groupInfo_ != null) hash ^= GroupInfo.GetHashCode();
              if (groupMember_ != null) hash ^= GroupMember.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (groupInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(GroupInfo);
              }
              if (groupMember_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupMember);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (groupInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(GroupInfo);
              }
              if (groupMember_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupMember);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (groupInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupInfo);
              }
              if (groupMember_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupMember);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupInfo other) {
              if (other == null) {
                return;
              }
              if (other.groupInfo_ != null) {
                if (groupInfo_ == null) {
                  GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                }
                GroupInfo.MergeFrom(other.GroupInfo);
              }
              if (other.groupMember_ != null) {
                if (groupMember_ == null) {
                  GroupMember = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                }
                GroupMember.MergeFrom(other.GroupMember);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (groupInfo_ == null) {
                      GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                    }
                    input.ReadMessage(GroupInfo);
                    break;
                  }
                  case 18: {
                    if (groupMember_ == null) {
                      GroupMember = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                    }
                    input.ReadMessage(GroupMember);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (groupInfo_ == null) {
                      GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                    }
                    input.ReadMessage(GroupInfo);
                    break;
                  }
                  case 18: {
                    if (groupMember_ == null) {
                      GroupMember = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                    }
                    input.ReadMessage(GroupMember);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMember : pb::IMessage<GroupMember>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMember> _parser = new pb::MessageParser<GroupMember>(() => new GroupMember());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMember> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[53]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMember() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMember(GroupMember other) : this() {
              user_ = other.user_ != null ? other.user_.Clone() : null;
              nickname_ = other.nickname_;
              antiDisturbing_ = other.antiDisturbing_;
              status_ = other.status_;
              inviterId_ = other.inviterId_;
              joinTime_ = other.joinTime_;
              createTime_ = other.createTime_;
              updateTime_ = other.updateTime_;
              role_ = other.role_;
              findType_ = other.findType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMember Clone() {
              return new GroupMember(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            /// <summary>Field number for the "nickname" field.</summary>
            public const int NicknameFieldNumber = 2;
            private string nickname_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Nickname {
              get { return nickname_; }
              set {
                nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "antiDisturbing" field.</summary>
            public const int AntiDisturbingFieldNumber = 3;
            private bool antiDisturbing_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool AntiDisturbing {
              get { return antiDisturbing_; }
              set {
                antiDisturbing_ = value;
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            /// <summary>Field number for the "inviterId" field.</summary>
            public const int InviterIdFieldNumber = 5;
            private long inviterId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long InviterId {
              get { return inviterId_; }
              set {
                inviterId_ = value;
              }
            }

            /// <summary>Field number for the "joinTime" field.</summary>
            public const int JoinTimeFieldNumber = 6;
            private long joinTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long JoinTime {
              get { return joinTime_; }
              set {
                joinTime_ = value;
              }
            }

            /// <summary>Field number for the "createTime" field.</summary>
            public const int CreateTimeFieldNumber = 7;
            private long createTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long CreateTime {
              get { return createTime_; }
              set {
                createTime_ = value;
              }
            }

            /// <summary>Field number for the "updateTime" field.</summary>
            public const int UpdateTimeFieldNumber = 8;
            private long updateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long UpdateTime {
              get { return updateTime_; }
              set {
                updateTime_ = value;
              }
            }

            /// <summary>Field number for the "role" field.</summary>
            public const int RoleFieldNumber = 9;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole role_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole Role {
              get { return role_; }
              set {
                role_ = value;
              }
            }

            /// <summary>Field number for the "findType" field.</summary>
            public const int FindTypeFieldNumber = 10;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindType {
              get { return findType_; }
              set {
                findType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMember);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMember other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(User, other.User)) return false;
              if (Nickname != other.Nickname) return false;
              if (AntiDisturbing != other.AntiDisturbing) return false;
              if (Status != other.Status) return false;
              if (InviterId != other.InviterId) return false;
              if (JoinTime != other.JoinTime) return false;
              if (CreateTime != other.CreateTime) return false;
              if (UpdateTime != other.UpdateTime) return false;
              if (Role != other.Role) return false;
              if (FindType != other.FindType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (user_ != null) hash ^= User.GetHashCode();
              if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
              if (AntiDisturbing != false) hash ^= AntiDisturbing.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) hash ^= Status.GetHashCode();
              if (InviterId != 0L) hash ^= InviterId.GetHashCode();
              if (JoinTime != 0L) hash ^= JoinTime.GetHashCode();
              if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
              if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
              if (Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) hash ^= Role.GetHashCode();
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (Nickname.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Nickname);
              }
              if (AntiDisturbing != false) {
                output.WriteRawTag(24);
                output.WriteBool(AntiDisturbing);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Status);
              }
              if (InviterId != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(InviterId);
              }
              if (JoinTime != 0L) {
                output.WriteRawTag(48);
                output.WriteInt64(JoinTime);
              }
              if (CreateTime != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(CreateTime);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(64);
                output.WriteInt64(UpdateTime);
              }
              if (Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) {
                output.WriteRawTag(72);
                output.WriteEnum((int) Role);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(80);
                output.WriteEnum((int) FindType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (Nickname.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Nickname);
              }
              if (AntiDisturbing != false) {
                output.WriteRawTag(24);
                output.WriteBool(AntiDisturbing);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Status);
              }
              if (InviterId != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(InviterId);
              }
              if (JoinTime != 0L) {
                output.WriteRawTag(48);
                output.WriteInt64(JoinTime);
              }
              if (CreateTime != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(CreateTime);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(64);
                output.WriteInt64(UpdateTime);
              }
              if (Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) {
                output.WriteRawTag(72);
                output.WriteEnum((int) Role);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(80);
                output.WriteEnum((int) FindType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (Nickname.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
              }
              if (AntiDisturbing != false) {
                size += 1 + 1;
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (InviterId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(InviterId);
              }
              if (JoinTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoinTime);
              }
              if (CreateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
              }
              if (UpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
              }
              if (Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMember other) {
              if (other == null) {
                return;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              if (other.Nickname.Length != 0) {
                Nickname = other.Nickname;
              }
              if (other.AntiDisturbing != false) {
                AntiDisturbing = other.AntiDisturbing;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) {
                Status = other.Status;
              }
              if (other.InviterId != 0L) {
                InviterId = other.InviterId;
              }
              if (other.JoinTime != 0L) {
                JoinTime = other.JoinTime;
              }
              if (other.CreateTime != 0L) {
                CreateTime = other.CreateTime;
              }
              if (other.UpdateTime != 0L) {
                UpdateTime = other.UpdateTime;
              }
              if (other.Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) {
                Role = other.Role;
              }
              if (other.FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindType = other.FindType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 18: {
                    Nickname = input.ReadString();
                    break;
                  }
                  case 24: {
                    AntiDisturbing = input.ReadBool();
                    break;
                  }
                  case 32: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus) input.ReadEnum();
                    break;
                  }
                  case 40: {
                    InviterId = input.ReadInt64();
                    break;
                  }
                  case 48: {
                    JoinTime = input.ReadInt64();
                    break;
                  }
                  case 56: {
                    CreateTime = input.ReadInt64();
                    break;
                  }
                  case 64: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                  case 72: {
                    Role = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole) input.ReadEnum();
                    break;
                  }
                  case 80: {
                    FindType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 18: {
                    Nickname = input.ReadString();
                    break;
                  }
                  case 24: {
                    AntiDisturbing = input.ReadBool();
                    break;
                  }
                  case 32: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus) input.ReadEnum();
                    break;
                  }
                  case 40: {
                    InviterId = input.ReadInt64();
                    break;
                  }
                  case 48: {
                    JoinTime = input.ReadInt64();
                    break;
                  }
                  case 56: {
                    CreateTime = input.ReadInt64();
                    break;
                  }
                  case 64: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                  case 72: {
                    Role = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole) input.ReadEnum();
                    break;
                  }
                  case 80: {
                    FindType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the GroupMember message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum GroupMemberStatus {
                [pbr::OriginalName("UNKNOWN_MEMBER_STATUS")] UnknownMemberStatus = 0,
                [pbr::OriginalName("NORMAL")] Normal = 1,
                [pbr::OriginalName("QUITTED")] Quitted = 2,
                [pbr::OriginalName("KICKED")] Kicked = 3,
                [pbr::OriginalName("DISMISSED")] Dismissed = 4,
              }

              public enum GroupMemberRole {
                [pbr::OriginalName("UNKNOWN_ROLE")] UnknownRole = 0,
                [pbr::OriginalName("COMMON")] Common = 1,
                [pbr::OriginalName("ADMIN")] Admin = 2,
              }

            }
            #endregion

          }

          public sealed partial class GroupInfo : pb::IMessage<GroupInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupInfo> _parser = new pb::MessageParser<GroupInfo>(() => new GroupInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[54]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInfo(GroupInfo other) : this() {
              basicInfo_ = other.basicInfo_ != null ? other.basicInfo_.Clone() : null;
              groupMemberBriefInfo_ = other.groupMemberBriefInfo_ != null ? other.groupMemberBriefInfo_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInfo Clone() {
              return new GroupInfo(this);
            }

            /// <summary>Field number for the "basicInfo" field.</summary>
            public const int BasicInfoFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo basicInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo BasicInfo {
              get { return basicInfo_; }
              set {
                basicInfo_ = value;
              }
            }

            /// <summary>Field number for the "groupMemberBriefInfo" field.</summary>
            public const int GroupMemberBriefInfoFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo groupMemberBriefInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo GroupMemberBriefInfo {
              get { return groupMemberBriefInfo_; }
              set {
                groupMemberBriefInfo_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(BasicInfo, other.BasicInfo)) return false;
              if (!object.Equals(GroupMemberBriefInfo, other.GroupMemberBriefInfo)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (basicInfo_ != null) hash ^= BasicInfo.GetHashCode();
              if (groupMemberBriefInfo_ != null) hash ^= GroupMemberBriefInfo.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (basicInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(BasicInfo);
              }
              if (groupMemberBriefInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupMemberBriefInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (basicInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(BasicInfo);
              }
              if (groupMemberBriefInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupMemberBriefInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (basicInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicInfo);
              }
              if (groupMemberBriefInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupMemberBriefInfo);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupInfo other) {
              if (other == null) {
                return;
              }
              if (other.basicInfo_ != null) {
                if (basicInfo_ == null) {
                  BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo();
                }
                BasicInfo.MergeFrom(other.BasicInfo);
              }
              if (other.groupMemberBriefInfo_ != null) {
                if (groupMemberBriefInfo_ == null) {
                  GroupMemberBriefInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo();
                }
                GroupMemberBriefInfo.MergeFrom(other.GroupMemberBriefInfo);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (basicInfo_ == null) {
                      BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo();
                    }
                    input.ReadMessage(BasicInfo);
                    break;
                  }
                  case 18: {
                    if (groupMemberBriefInfo_ == null) {
                      GroupMemberBriefInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo();
                    }
                    input.ReadMessage(GroupMemberBriefInfo);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (basicInfo_ == null) {
                      BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo();
                    }
                    input.ReadMessage(BasicInfo);
                    break;
                  }
                  case 18: {
                    if (groupMemberBriefInfo_ == null) {
                      GroupMemberBriefInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo();
                    }
                    input.ReadMessage(GroupMemberBriefInfo);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupBasicInfo : pb::IMessage<GroupBasicInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupBasicInfo> _parser = new pb::MessageParser<GroupBasicInfo>(() => new GroupBasicInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupBasicInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[55]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupBasicInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupBasicInfo(GroupBasicInfo other) : this() {
              groupId_ = other.groupId_;
              groupName_ = other.groupName_;
              admin_ = other.admin_ != null ? other.admin_.Clone() : null;
              groupStatus_ = other.groupStatus_;
              description_ = other.description_;
              joinNeedPermission_ = other.joinNeedPermission_;
              createTime_ = other.createTime_;
              updateTime_ = other.updateTime_;
              groupType_ = other.groupType_;
              forbiddenState_ = other.forbiddenState_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupBasicInfo Clone() {
              return new GroupBasicInfo(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "groupName" field.</summary>
            public const int GroupNameFieldNumber = 2;
            private string groupName_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupName {
              get { return groupName_; }
              set {
                groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "admin" field.</summary>
            public const int AdminFieldNumber = 3;
            private global::AcFunDanmu.Im.Basic.Types.User admin_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Admin {
              get { return admin_; }
              set {
                admin_ = value;
              }
            }

            /// <summary>Field number for the "groupStatus" field.</summary>
            public const int GroupStatusFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus groupStatus_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus GroupStatus {
              get { return groupStatus_; }
              set {
                groupStatus_ = value;
              }
            }

            /// <summary>Field number for the "description" field.</summary>
            public const int DescriptionFieldNumber = 5;
            private string description_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Description {
              get { return description_; }
              set {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "joinNeedPermission" field.</summary>
            public const int JoinNeedPermissionFieldNumber = 6;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType joinNeedPermission_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType JoinNeedPermission {
              get { return joinNeedPermission_; }
              set {
                joinNeedPermission_ = value;
              }
            }

            /// <summary>Field number for the "createTime" field.</summary>
            public const int CreateTimeFieldNumber = 7;
            private long createTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long CreateTime {
              get { return createTime_; }
              set {
                createTime_ = value;
              }
            }

            /// <summary>Field number for the "updateTime" field.</summary>
            public const int UpdateTimeFieldNumber = 8;
            private long updateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long UpdateTime {
              get { return updateTime_; }
              set {
                updateTime_ = value;
              }
            }

            /// <summary>Field number for the "groupType" field.</summary>
            public const int GroupTypeFieldNumber = 9;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType groupType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType GroupType {
              get { return groupType_; }
              set {
                groupType_ = value;
              }
            }

            /// <summary>Field number for the "forbiddenState" field.</summary>
            public const int ForbiddenStateFieldNumber = 10;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState forbiddenState_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState ForbiddenState {
              get { return forbiddenState_; }
              set {
                forbiddenState_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupBasicInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupBasicInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (GroupName != other.GroupName) return false;
              if (!object.Equals(Admin, other.Admin)) return false;
              if (GroupStatus != other.GroupStatus) return false;
              if (Description != other.Description) return false;
              if (JoinNeedPermission != other.JoinNeedPermission) return false;
              if (CreateTime != other.CreateTime) return false;
              if (UpdateTime != other.UpdateTime) return false;
              if (GroupType != other.GroupType) return false;
              if (ForbiddenState != other.ForbiddenState) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
              if (admin_ != null) hash ^= Admin.GetHashCode();
              if (GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) hash ^= GroupStatus.GetHashCode();
              if (Description.Length != 0) hash ^= Description.GetHashCode();
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) hash ^= JoinNeedPermission.GetHashCode();
              if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
              if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
              if (GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) hash ^= GroupType.GetHashCode();
              if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) hash ^= ForbiddenState.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (GroupName.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupName);
              }
              if (admin_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Admin);
              }
              if (GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) {
                output.WriteRawTag(32);
                output.WriteEnum((int) GroupStatus);
              }
              if (Description.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(Description);
              }
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) JoinNeedPermission);
              }
              if (CreateTime != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(CreateTime);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(64);
                output.WriteInt64(UpdateTime);
              }
              if (GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) {
                output.WriteRawTag(72);
                output.WriteEnum((int) GroupType);
              }
              if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) {
                output.WriteRawTag(80);
                output.WriteEnum((int) ForbiddenState);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (GroupName.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupName);
              }
              if (admin_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Admin);
              }
              if (GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) {
                output.WriteRawTag(32);
                output.WriteEnum((int) GroupStatus);
              }
              if (Description.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(Description);
              }
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) JoinNeedPermission);
              }
              if (CreateTime != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(CreateTime);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(64);
                output.WriteInt64(UpdateTime);
              }
              if (GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) {
                output.WriteRawTag(72);
                output.WriteEnum((int) GroupType);
              }
              if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) {
                output.WriteRawTag(80);
                output.WriteEnum((int) ForbiddenState);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (GroupName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
              }
              if (admin_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
              }
              if (GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupStatus);
              }
              if (Description.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
              }
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JoinNeedPermission);
              }
              if (CreateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
              }
              if (UpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
              }
              if (GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupType);
              }
              if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ForbiddenState);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupBasicInfo other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.GroupName.Length != 0) {
                GroupName = other.GroupName;
              }
              if (other.admin_ != null) {
                if (admin_ == null) {
                  Admin = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Admin.MergeFrom(other.Admin);
              }
              if (other.GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) {
                GroupStatus = other.GroupStatus;
              }
              if (other.Description.Length != 0) {
                Description = other.Description;
              }
              if (other.JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                JoinNeedPermission = other.JoinNeedPermission;
              }
              if (other.CreateTime != 0L) {
                CreateTime = other.CreateTime;
              }
              if (other.UpdateTime != 0L) {
                UpdateTime = other.UpdateTime;
              }
              if (other.GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) {
                GroupType = other.GroupType;
              }
              if (other.ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) {
                ForbiddenState = other.ForbiddenState;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    GroupName = input.ReadString();
                    break;
                  }
                  case 26: {
                    if (admin_ == null) {
                      Admin = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Admin);
                    break;
                  }
                  case 32: {
                    GroupStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    Description = input.ReadString();
                    break;
                  }
                  case 48: {
                    JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType) input.ReadEnum();
                    break;
                  }
                  case 56: {
                    CreateTime = input.ReadInt64();
                    break;
                  }
                  case 64: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                  case 72: {
                    GroupType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType) input.ReadEnum();
                    break;
                  }
                  case 80: {
                    ForbiddenState = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    GroupName = input.ReadString();
                    break;
                  }
                  case 26: {
                    if (admin_ == null) {
                      Admin = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Admin);
                    break;
                  }
                  case 32: {
                    GroupStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    Description = input.ReadString();
                    break;
                  }
                  case 48: {
                    JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType) input.ReadEnum();
                    break;
                  }
                  case 56: {
                    CreateTime = input.ReadInt64();
                    break;
                  }
                  case 64: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                  case 72: {
                    GroupType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType) input.ReadEnum();
                    break;
                  }
                  case 80: {
                    ForbiddenState = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GroupMemberBriefInfo : pb::IMessage<GroupMemberBriefInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GroupMemberBriefInfo> _parser = new pb::MessageParser<GroupMemberBriefInfo>(() => new GroupMemberBriefInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberBriefInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[56]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberBriefInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberBriefInfo(GroupMemberBriefInfo other) : this() {
              memberCount_ = other.memberCount_;
              topMembers_ = other.topMembers_.Clone();
              lastUpdateTime_ = other.lastUpdateTime_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberBriefInfo Clone() {
              return new GroupMemberBriefInfo(this);
            }

            /// <summary>Field number for the "memberCount" field.</summary>
            public const int MemberCountFieldNumber = 1;
            private int memberCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int MemberCount {
              get { return memberCount_; }
              set {
                memberCount_ = value;
              }
            }

            /// <summary>Field number for the "topMembers" field.</summary>
            public const int TopMembersFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_topMembers_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> topMembers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> TopMembers {
              get { return topMembers_; }
            }

            /// <summary>Field number for the "lastUpdateTime" field.</summary>
            public const int LastUpdateTimeFieldNumber = 3;
            private long lastUpdateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long LastUpdateTime {
              get { return lastUpdateTime_; }
              set {
                lastUpdateTime_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberBriefInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberBriefInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MemberCount != other.MemberCount) return false;
              if(!topMembers_.Equals(other.topMembers_)) return false;
              if (LastUpdateTime != other.LastUpdateTime) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MemberCount != 0) hash ^= MemberCount.GetHashCode();
              hash ^= topMembers_.GetHashCode();
              if (LastUpdateTime != 0L) hash ^= LastUpdateTime.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MemberCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(MemberCount);
              }
              topMembers_.WriteTo(output, _repeated_topMembers_codec);
              if (LastUpdateTime != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(LastUpdateTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MemberCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(MemberCount);
              }
              topMembers_.WriteTo(ref output, _repeated_topMembers_codec);
              if (LastUpdateTime != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(LastUpdateTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MemberCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemberCount);
              }
              size += topMembers_.CalculateSize(_repeated_topMembers_codec);
              if (LastUpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdateTime);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberBriefInfo other) {
              if (other == null) {
                return;
              }
              if (other.MemberCount != 0) {
                MemberCount = other.MemberCount;
              }
              topMembers_.Add(other.topMembers_);
              if (other.LastUpdateTime != 0L) {
                LastUpdateTime = other.LastUpdateTime;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    MemberCount = input.ReadInt32();
                    break;
                  }
                  case 18: {
                    topMembers_.AddEntriesFrom(input, _repeated_topMembers_codec);
                    break;
                  }
                  case 24: {
                    LastUpdateTime = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    MemberCount = input.ReadInt32();
                    break;
                  }
                  case 18: {
                    topMembers_.AddEntriesFrom(ref input, _repeated_topMembers_codec);
                    break;
                  }
                  case 24: {
                    LastUpdateTime = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ImcPassThroughRequest : pb::IMessage<ImcPassThroughRequest>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ImcPassThroughRequest> _parser = new pb::MessageParser<ImcPassThroughRequest>(() => new ImcPassThroughRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcPassThroughRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[57]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughRequest(ImcPassThroughRequest other) : this() {
              chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
              content_ = other.content_;
              contentType_ = other.contentType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughRequest Clone() {
              return new ImcPassThroughRequest(this);
            }

            /// <summary>Field number for the "chatTarget" field.</summary>
            public const int ChatTargetFieldNumber = 1;
            private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
              get { return chatTarget_; }
              set {
                chatTarget_ = value;
              }
            }

            /// <summary>Field number for the "content" field.</summary>
            public const int ContentFieldNumber = 2;
            private pb::ByteString content_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Content {
              get { return content_; }
              set {
                content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "contentType" field.</summary>
            public const int ContentTypeFieldNumber = 3;
            private int contentType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ContentType {
              get { return contentType_; }
              set {
                contentType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcPassThroughRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcPassThroughRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
              if (Content != other.Content) return false;
              if (ContentType != other.ContentType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
              if (Content.Length != 0) hash ^= Content.GetHashCode();
              if (ContentType != 0) hash ^= ContentType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (chatTarget_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ChatTarget);
              }
              if (Content.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Content);
              }
              if (ContentType != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(ContentType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (chatTarget_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ChatTarget);
              }
              if (Content.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Content);
              }
              if (ContentType != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(ContentType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (chatTarget_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
              }
              if (Content.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
              }
              if (ContentType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcPassThroughRequest other) {
              if (other == null) {
                return;
              }
              if (other.chatTarget_ != null) {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                ChatTarget.MergeFrom(other.ChatTarget);
              }
              if (other.Content.Length != 0) {
                Content = other.Content;
              }
              if (other.ContentType != 0) {
                ContentType = other.ContentType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                    }
                    input.ReadMessage(ChatTarget);
                    break;
                  }
                  case 18: {
                    Content = input.ReadBytes();
                    break;
                  }
                  case 24: {
                    ContentType = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                    }
                    input.ReadMessage(ChatTarget);
                    break;
                  }
                  case 18: {
                    Content = input.ReadBytes();
                    break;
                  }
                  case 24: {
                    ContentType = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class ImcPassThroughResponse : pb::IMessage<ImcPassThroughResponse>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ImcPassThroughResponse> _parser = new pb::MessageParser<ImcPassThroughResponse>(() => new ImcPassThroughResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcPassThroughResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[58]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughResponse(ImcPassThroughResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughResponse Clone() {
              return new ImcPassThroughResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcPassThroughResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcPassThroughResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcPassThroughResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class ImcPassThroughPush : pb::IMessage<ImcPassThroughPush>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ImcPassThroughPush> _parser = new pb::MessageParser<ImcPassThroughPush>(() => new ImcPassThroughPush());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcPassThroughPush> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[59]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughPush() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughPush(ImcPassThroughPush other) : this() {
              chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
              fromUser_ = other.fromUser_ != null ? other.fromUser_.Clone() : null;
              content_ = other.content_;
              contentType_ = other.contentType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughPush Clone() {
              return new ImcPassThroughPush(this);
            }

            /// <summary>Field number for the "chatTarget" field.</summary>
            public const int ChatTargetFieldNumber = 1;
            private global::AcFunDanmu.Im.ImMessage.Types.ChatTarget chatTarget_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.ImMessage.Types.ChatTarget ChatTarget {
              get { return chatTarget_; }
              set {
                chatTarget_ = value;
              }
            }

            /// <summary>Field number for the "fromUser" field.</summary>
            public const int FromUserFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User fromUser_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User FromUser {
              get { return fromUser_; }
              set {
                fromUser_ = value;
              }
            }

            /// <summary>Field number for the "content" field.</summary>
            public const int ContentFieldNumber = 3;
            private pb::ByteString content_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Content {
              get { return content_; }
              set {
                content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "contentType" field.</summary>
            public const int ContentTypeFieldNumber = 4;
            private int contentType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ContentType {
              get { return contentType_; }
              set {
                contentType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcPassThroughPush);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcPassThroughPush other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
              if (!object.Equals(FromUser, other.FromUser)) return false;
              if (Content != other.Content) return false;
              if (ContentType != other.ContentType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
              if (fromUser_ != null) hash ^= FromUser.GetHashCode();
              if (Content.Length != 0) hash ^= Content.GetHashCode();
              if (ContentType != 0) hash ^= ContentType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (chatTarget_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ChatTarget);
              }
              if (fromUser_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(FromUser);
              }
              if (Content.Length != 0) {
                output.WriteRawTag(26);
                output.WriteBytes(Content);
              }
              if (ContentType != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(ContentType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (chatTarget_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ChatTarget);
              }
              if (fromUser_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(FromUser);
              }
              if (Content.Length != 0) {
                output.WriteRawTag(26);
                output.WriteBytes(Content);
              }
              if (ContentType != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(ContentType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (chatTarget_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
              }
              if (fromUser_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUser);
              }
              if (Content.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
              }
              if (ContentType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcPassThroughPush other) {
              if (other == null) {
                return;
              }
              if (other.chatTarget_ != null) {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                }
                ChatTarget.MergeFrom(other.ChatTarget);
              }
              if (other.fromUser_ != null) {
                if (fromUser_ == null) {
                  FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                FromUser.MergeFrom(other.FromUser);
              }
              if (other.Content.Length != 0) {
                Content = other.Content;
              }
              if (other.ContentType != 0) {
                ContentType = other.ContentType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                    }
                    input.ReadMessage(ChatTarget);
                    break;
                  }
                  case 18: {
                    if (fromUser_ == null) {
                      FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(FromUser);
                    break;
                  }
                  case 26: {
                    Content = input.ReadBytes();
                    break;
                  }
                  case 32: {
                    ContentType = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.ImMessage.Types.ChatTarget();
                    }
                    input.ReadMessage(ChatTarget);
                    break;
                  }
                  case 18: {
                    if (fromUser_ == null) {
                      FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(FromUser);
                    break;
                  }
                  case 26: {
                    Content = input.ReadBytes();
                    break;
                  }
                  case 32: {
                    ContentType = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class InputtingContent : pb::IMessage<InputtingContent>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<InputtingContent> _parser = new pb::MessageParser<InputtingContent>(() => new InputtingContent());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<InputtingContent> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[60]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InputtingContent() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InputtingContent(InputtingContent other) : this() {
              displayInterval_ = other.displayInterval_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InputtingContent Clone() {
              return new InputtingContent(this);
            }

            /// <summary>Field number for the "displayInterval" field.</summary>
            public const int DisplayIntervalFieldNumber = 1;
            private int displayInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int DisplayInterval {
              get { return displayInterval_; }
              set {
                displayInterval_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as InputtingContent);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(InputtingContent other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (DisplayInterval != other.DisplayInterval) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (DisplayInterval != 0) hash ^= DisplayInterval.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (DisplayInterval != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(DisplayInterval);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (DisplayInterval != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(DisplayInterval);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (DisplayInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayInterval);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(InputtingContent other) {
              if (other == null) {
                return;
              }
              if (other.DisplayInterval != 0) {
                DisplayInterval = other.DisplayInterval;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    DisplayInterval = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    DisplayInterval = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
