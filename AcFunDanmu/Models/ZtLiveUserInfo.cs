// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ZtLiveUserInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu {

  /// <summary>Holder for reflection information generated from ZtLiveUserInfo.proto</summary>
  public static partial class ZtLiveUserInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ZtLiveUserInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZtLiveUserInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRadExpdmVVc2VySW5mby5wcm90bxIKQWNGdW5EYW5tdRoSSW1hZ2VDZG5O",
            "b2RlLnByb3RvGhhadExpdmVVc2VySWRlbnRpdHkucHJvdG8itwEKDlp0TGl2",
            "ZVVzZXJJbmZvEg4KBnVzZXJJZBgBIAEoAxIQCghuaWNrbmFtZRgCIAEoCRIo",
            "CgZhdmF0YXIYAyADKAsyGC5BY0Z1bkRhbm11LkltYWdlQ2RuTm9kZRINCgVi",
            "YWRnZRgEIAEoCRI0Cgx1c2VySWRlbnRpdHkYBSABKAsyHi5BY0Z1bkRhbm11",
            "Llp0TGl2ZVVzZXJJZGVudGl0eRIJCgFmGAYgASgIEgkKAWcYByABKAliBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.ImageCdnNodeReflection.Descriptor, global::AcFunDanmu.ZtLiveUserIdentityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.ZtLiveUserInfo), global::AcFunDanmu.ZtLiveUserInfo.Parser, new[]{ "UserId", "Nickname", "Avatar", "Badge", "UserIdentity", "F", "G" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ZtLiveUserInfo : pb::IMessage<ZtLiveUserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZtLiveUserInfo> _parser = new pb::MessageParser<ZtLiveUserInfo>(() => new ZtLiveUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ZtLiveUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.ZtLiveUserInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZtLiveUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZtLiveUserInfo(ZtLiveUserInfo other) : this() {
      userId_ = other.userId_;
      nickname_ = other.nickname_;
      avatar_ = other.avatar_.Clone();
      badge_ = other.badge_;
      userIdentity_ = other.userIdentity_ != null ? other.userIdentity_.Clone() : null;
      f_ = other.f_;
      g_ = other.g_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZtLiveUserInfo Clone() {
      return new ZtLiveUserInfo(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AcFunDanmu.ImageCdnNode> _repeated_avatar_codec
        = pb::FieldCodec.ForMessage(26, global::AcFunDanmu.ImageCdnNode.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.ImageCdnNode> avatar_ = new pbc::RepeatedField<global::AcFunDanmu.ImageCdnNode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AcFunDanmu.ImageCdnNode> Avatar {
      get { return avatar_; }
    }

    /// <summary>Field number for the "badge" field.</summary>
    public const int BadgeFieldNumber = 4;
    private string badge_ = "";
    /// <summary>
    /// bizCustomInfo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Badge {
      get { return badge_; }
      set {
        badge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userIdentity" field.</summary>
    public const int UserIdentityFieldNumber = 5;
    private global::AcFunDanmu.ZtLiveUserIdentity userIdentity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AcFunDanmu.ZtLiveUserIdentity UserIdentity {
      get { return userIdentity_; }
      set {
        userIdentity_ = value;
      }
    }

    /// <summary>Field number for the "f" field.</summary>
    public const int FFieldNumber = 6;
    private bool f_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool F {
      get { return f_; }
      set {
        f_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 7;
    private string g_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string G {
      get { return g_; }
      set {
        g_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ZtLiveUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ZtLiveUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Nickname != other.Nickname) return false;
      if(!avatar_.Equals(other.avatar_)) return false;
      if (Badge != other.Badge) return false;
      if (!object.Equals(UserIdentity, other.UserIdentity)) return false;
      if (F != other.F) return false;
      if (G != other.G) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      hash ^= avatar_.GetHashCode();
      if (Badge.Length != 0) hash ^= Badge.GetHashCode();
      if (userIdentity_ != null) hash ^= UserIdentity.GetHashCode();
      if (F != false) hash ^= F.GetHashCode();
      if (G.Length != 0) hash ^= G.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      avatar_.WriteTo(output, _repeated_avatar_codec);
      if (Badge.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Badge);
      }
      if (userIdentity_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserIdentity);
      }
      if (F != false) {
        output.WriteRawTag(48);
        output.WriteBool(F);
      }
      if (G.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(G);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      avatar_.WriteTo(ref output, _repeated_avatar_codec);
      if (Badge.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Badge);
      }
      if (userIdentity_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserIdentity);
      }
      if (F != false) {
        output.WriteRawTag(48);
        output.WriteBool(F);
      }
      if (G.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(G);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      size += avatar_.CalculateSize(_repeated_avatar_codec);
      if (Badge.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Badge);
      }
      if (userIdentity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserIdentity);
      }
      if (F != false) {
        size += 1 + 1;
      }
      if (G.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(G);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ZtLiveUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      avatar_.Add(other.avatar_);
      if (other.Badge.Length != 0) {
        Badge = other.Badge;
      }
      if (other.userIdentity_ != null) {
        if (userIdentity_ == null) {
          UserIdentity = new global::AcFunDanmu.ZtLiveUserIdentity();
        }
        UserIdentity.MergeFrom(other.UserIdentity);
      }
      if (other.F != false) {
        F = other.F;
      }
      if (other.G.Length != 0) {
        G = other.G;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            avatar_.AddEntriesFrom(input, _repeated_avatar_codec);
            break;
          }
          case 34: {
            Badge = input.ReadString();
            break;
          }
          case 42: {
            if (userIdentity_ == null) {
              UserIdentity = new global::AcFunDanmu.ZtLiveUserIdentity();
            }
            input.ReadMessage(UserIdentity);
            break;
          }
          case 48: {
            F = input.ReadBool();
            break;
          }
          case 58: {
            G = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            avatar_.AddEntriesFrom(ref input, _repeated_avatar_codec);
            break;
          }
          case 34: {
            Badge = input.ReadString();
            break;
          }
          case 42: {
            if (userIdentity_ == null) {
              UserIdentity = new global::AcFunDanmu.ZtLiveUserIdentity();
            }
            input.ReadMessage(UserIdentity);
            break;
          }
          case 48: {
            F = input.ReadBool();
            break;
          }
          case 58: {
            G = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
