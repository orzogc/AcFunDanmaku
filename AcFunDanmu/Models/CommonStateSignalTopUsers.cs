// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CommonStateSignalTopUsers.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu {

  /// <summary>Holder for reflection information generated from CommonStateSignalTopUsers.proto</summary>
  public static partial class CommonStateSignalTopUsersReflection {

    #region Descriptor
    /// <summary>File descriptor for CommonStateSignalTopUsers.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonStateSignalTopUsersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Db21tb25TdGF0ZVNpZ25hbFRvcFVzZXJzLnByb3RvEgpBY0Z1bkRhbm11",
            "GhRadExpdmVVc2VySW5mby5wcm90byLkAQoZQ29tbW9uU3RhdGVTaWduYWxU",
            "b3BVc2VycxI7CgR1c2VyGAEgAygLMi0uQWNGdW5EYW5tdS5Db21tb25TdGF0",
            "ZVNpZ25hbFRvcFVzZXJzLlRvcFVzZXIaiQEKB1RvcFVzZXISLAoIdXNlcklu",
            "Zm8YASABKAsyGi5BY0Z1bkRhbm11Llp0TGl2ZVVzZXJJbmZvEh4KFmN1c3Rv",
            "bVdhdGNoaW5nTGlzdERhdGEYAyABKAkSGQoRZGlzcGxheVNlbmRBbW91bnQY",
            "BCABKAkSFQoNYW5vbnltb3VzVXNlchgFIAEoCGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AcFunDanmu.ZtLiveUserInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.CommonStateSignalTopUsers), global::AcFunDanmu.CommonStateSignalTopUsers.Parser, new[]{ "User" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.CommonStateSignalTopUsers.Types.TopUser), global::AcFunDanmu.CommonStateSignalTopUsers.Types.TopUser.Parser, new[]{ "UserInfo", "CustomWatchingListData", "DisplaySendAmount", "AnonymousUser" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CommonStateSignalTopUsers : pb::IMessage<CommonStateSignalTopUsers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommonStateSignalTopUsers> _parser = new pb::MessageParser<CommonStateSignalTopUsers>(() => new CommonStateSignalTopUsers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonStateSignalTopUsers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.CommonStateSignalTopUsersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonStateSignalTopUsers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonStateSignalTopUsers(CommonStateSignalTopUsers other) : this() {
      user_ = other.user_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonStateSignalTopUsers Clone() {
      return new CommonStateSignalTopUsers(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AcFunDanmu.CommonStateSignalTopUsers.Types.TopUser> _repeated_user_codec
        = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.CommonStateSignalTopUsers.Types.TopUser.Parser);
    private readonly pbc::RepeatedField<global::AcFunDanmu.CommonStateSignalTopUsers.Types.TopUser> user_ = new pbc::RepeatedField<global::AcFunDanmu.CommonStateSignalTopUsers.Types.TopUser>();
    /// <summary>
    ///topUser
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AcFunDanmu.CommonStateSignalTopUsers.Types.TopUser> User {
      get { return user_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonStateSignalTopUsers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonStateSignalTopUsers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!user_.Equals(other.user_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= user_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      user_.WriteTo(output, _repeated_user_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      user_.WriteTo(ref output, _repeated_user_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += user_.CalculateSize(_repeated_user_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonStateSignalTopUsers other) {
      if (other == null) {
        return;
      }
      user_.Add(other.user_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            user_.AddEntriesFrom(input, _repeated_user_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            user_.AddEntriesFrom(ref input, _repeated_user_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CommonStateSignalTopUsers message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class TopUser : pb::IMessage<TopUser>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TopUser> _parser = new pb::MessageParser<TopUser>(() => new TopUser());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TopUser> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.CommonStateSignalTopUsers.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopUser() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopUser(TopUser other) : this() {
          userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
          customWatchingListData_ = other.customWatchingListData_;
          displaySendAmount_ = other.displaySendAmount_;
          anonymousUser_ = other.anonymousUser_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopUser Clone() {
          return new TopUser(this);
        }

        /// <summary>Field number for the "userInfo" field.</summary>
        public const int UserInfoFieldNumber = 1;
        private global::AcFunDanmu.ZtLiveUserInfo userInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.ZtLiveUserInfo UserInfo {
          get { return userInfo_; }
          set {
            userInfo_ = value;
          }
        }

        /// <summary>Field number for the "customWatchingListData" field.</summary>
        public const int CustomWatchingListDataFieldNumber = 3;
        private string customWatchingListData_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CustomWatchingListData {
          get { return customWatchingListData_; }
          set {
            customWatchingListData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "displaySendAmount" field.</summary>
        public const int DisplaySendAmountFieldNumber = 4;
        private string displaySendAmount_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplaySendAmount {
          get { return displaySendAmount_; }
          set {
            displaySendAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "anonymousUser" field.</summary>
        public const int AnonymousUserFieldNumber = 5;
        private bool anonymousUser_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool AnonymousUser {
          get { return anonymousUser_; }
          set {
            anonymousUser_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TopUser);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TopUser other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(UserInfo, other.UserInfo)) return false;
          if (CustomWatchingListData != other.CustomWatchingListData) return false;
          if (DisplaySendAmount != other.DisplaySendAmount) return false;
          if (AnonymousUser != other.AnonymousUser) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
          if (CustomWatchingListData.Length != 0) hash ^= CustomWatchingListData.GetHashCode();
          if (DisplaySendAmount.Length != 0) hash ^= DisplaySendAmount.GetHashCode();
          if (AnonymousUser != false) hash ^= AnonymousUser.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (userInfo_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(UserInfo);
          }
          if (CustomWatchingListData.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CustomWatchingListData);
          }
          if (DisplaySendAmount.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DisplaySendAmount);
          }
          if (AnonymousUser != false) {
            output.WriteRawTag(40);
            output.WriteBool(AnonymousUser);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (userInfo_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(UserInfo);
          }
          if (CustomWatchingListData.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CustomWatchingListData);
          }
          if (DisplaySendAmount.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DisplaySendAmount);
          }
          if (AnonymousUser != false) {
            output.WriteRawTag(40);
            output.WriteBool(AnonymousUser);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (userInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
          }
          if (CustomWatchingListData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomWatchingListData);
          }
          if (DisplaySendAmount.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplaySendAmount);
          }
          if (AnonymousUser != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TopUser other) {
          if (other == null) {
            return;
          }
          if (other.userInfo_ != null) {
            if (userInfo_ == null) {
              UserInfo = new global::AcFunDanmu.ZtLiveUserInfo();
            }
            UserInfo.MergeFrom(other.UserInfo);
          }
          if (other.CustomWatchingListData.Length != 0) {
            CustomWatchingListData = other.CustomWatchingListData;
          }
          if (other.DisplaySendAmount.Length != 0) {
            DisplaySendAmount = other.DisplaySendAmount;
          }
          if (other.AnonymousUser != false) {
            AnonymousUser = other.AnonymousUser;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (userInfo_ == null) {
                  UserInfo = new global::AcFunDanmu.ZtLiveUserInfo();
                }
                input.ReadMessage(UserInfo);
                break;
              }
              case 26: {
                CustomWatchingListData = input.ReadString();
                break;
              }
              case 34: {
                DisplaySendAmount = input.ReadString();
                break;
              }
              case 40: {
                AnonymousUser = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (userInfo_ == null) {
                  UserInfo = new global::AcFunDanmu.ZtLiveUserInfo();
                }
                input.ReadMessage(UserInfo);
                break;
              }
              case 26: {
                CustomWatchingListData = input.ReadString();
                break;
              }
              case 34: {
                DisplaySendAmount = input.ReadString();
                break;
              }
              case 40: {
                AnonymousUser = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
