// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ZtLiveScStatusChanged.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu {

  /// <summary>Holder for reflection information generated from ZtLiveScStatusChanged.proto</summary>
  public static partial class ZtLiveScStatusChangedReflection {

    #region Descriptor
    /// <summary>File descriptor for ZtLiveScStatusChanged.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZtLiveScStatusChangedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtadExpdmVTY1N0YXR1c0NoYW5nZWQucHJvdG8SCkFjRnVuRGFubXUirAIK",
            "FVp0TGl2ZVNjU3RhdHVzQ2hhbmdlZBI0CgR0eXBlGAEgASgOMiYuQWNGdW5E",
            "YW5tdS5adExpdmVTY1N0YXR1c0NoYW5nZWQuVHlwZRIYChBtYXhSYW5kb21E",
            "ZWxheU1zGAIgASgDEkAKCmJhbm5lZEluZm8YAyABKAsyLC5BY0Z1bkRhbm11",
            "Llp0TGl2ZVNjU3RhdHVzQ2hhbmdlZC5CYW5uZWRJbmZvGh8KCkJhbm5lZElu",
            "Zm8SEQoJYmFuUmVhc29uGAEgASgJImAKBFR5cGUSCwoHVU5LTk9XThAAEg8K",
            "C0xJVkVfQ0xPU0VEEAESEwoPTkVXX0xJVkVfT1BFTkVEEAISFAoQTElWRV9V",
            "UkxfQ0hBTkdFRBADEg8KC0xJVkVfQkFOTkVEEARiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.ZtLiveScStatusChanged), global::AcFunDanmu.ZtLiveScStatusChanged.Parser, new[]{ "Type", "MaxRandomDelayMs", "BannedInfo" }, null, new[]{ typeof(global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.ZtLiveScStatusChanged.Types.BannedInfo), global::AcFunDanmu.ZtLiveScStatusChanged.Types.BannedInfo.Parser, new[]{ "BanReason" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ZtLiveScStatusChanged : pb::IMessage<ZtLiveScStatusChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZtLiveScStatusChanged> _parser = new pb::MessageParser<ZtLiveScStatusChanged>(() => new ZtLiveScStatusChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZtLiveScStatusChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.ZtLiveScStatusChangedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZtLiveScStatusChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZtLiveScStatusChanged(ZtLiveScStatusChanged other) : this() {
      type_ = other.type_;
      maxRandomDelayMs_ = other.maxRandomDelayMs_;
      bannedInfo_ = other.bannedInfo_ != null ? other.bannedInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZtLiveScStatusChanged Clone() {
      return new ZtLiveScStatusChanged(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type type_ = global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "maxRandomDelayMs" field.</summary>
    public const int MaxRandomDelayMsFieldNumber = 2;
    private long maxRandomDelayMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxRandomDelayMs {
      get { return maxRandomDelayMs_; }
      set {
        maxRandomDelayMs_ = value;
      }
    }

    /// <summary>Field number for the "bannedInfo" field.</summary>
    public const int BannedInfoFieldNumber = 3;
    private global::AcFunDanmu.ZtLiveScStatusChanged.Types.BannedInfo bannedInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcFunDanmu.ZtLiveScStatusChanged.Types.BannedInfo BannedInfo {
      get { return bannedInfo_; }
      set {
        bannedInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZtLiveScStatusChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZtLiveScStatusChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (MaxRandomDelayMs != other.MaxRandomDelayMs) return false;
      if (!object.Equals(BannedInfo, other.BannedInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (MaxRandomDelayMs != 0L) hash ^= MaxRandomDelayMs.GetHashCode();
      if (bannedInfo_ != null) hash ^= BannedInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MaxRandomDelayMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxRandomDelayMs);
      }
      if (bannedInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BannedInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MaxRandomDelayMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxRandomDelayMs);
      }
      if (bannedInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BannedInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MaxRandomDelayMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxRandomDelayMs);
      }
      if (bannedInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BannedInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZtLiveScStatusChanged other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.MaxRandomDelayMs != 0L) {
        MaxRandomDelayMs = other.MaxRandomDelayMs;
      }
      if (other.bannedInfo_ != null) {
        if (bannedInfo_ == null) {
          BannedInfo = new global::AcFunDanmu.ZtLiveScStatusChanged.Types.BannedInfo();
        }
        BannedInfo.MergeFrom(other.BannedInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            MaxRandomDelayMs = input.ReadInt64();
            break;
          }
          case 26: {
            if (bannedInfo_ == null) {
              BannedInfo = new global::AcFunDanmu.ZtLiveScStatusChanged.Types.BannedInfo();
            }
            input.ReadMessage(BannedInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::AcFunDanmu.ZtLiveScStatusChanged.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            MaxRandomDelayMs = input.ReadInt64();
            break;
          }
          case 26: {
            if (bannedInfo_ == null) {
              BannedInfo = new global::AcFunDanmu.ZtLiveScStatusChanged.Types.BannedInfo();
            }
            input.ReadMessage(BannedInfo);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ZtLiveScStatusChanged message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("LIVE_CLOSED")] LiveClosed = 1,
        [pbr::OriginalName("NEW_LIVE_OPENED")] NewLiveOpened = 2,
        [pbr::OriginalName("LIVE_URL_CHANGED")] LiveUrlChanged = 3,
        [pbr::OriginalName("LIVE_BANNED")] LiveBanned = 4,
      }

      public sealed partial class BannedInfo : pb::IMessage<BannedInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BannedInfo> _parser = new pb::MessageParser<BannedInfo>(() => new BannedInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BannedInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.ZtLiveScStatusChanged.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BannedInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BannedInfo(BannedInfo other) : this() {
          banReason_ = other.banReason_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BannedInfo Clone() {
          return new BannedInfo(this);
        }

        /// <summary>Field number for the "banReason" field.</summary>
        public const int BanReasonFieldNumber = 1;
        private string banReason_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BanReason {
          get { return banReason_; }
          set {
            banReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BannedInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BannedInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BanReason != other.BanReason) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (BanReason.Length != 0) hash ^= BanReason.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (BanReason.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(BanReason);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (BanReason.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(BanReason);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (BanReason.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BanReason);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BannedInfo other) {
          if (other == null) {
            return;
          }
          if (other.BanReason.Length != 0) {
            BanReason = other.BanReason;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                BanReason = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                BanReason = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
